name: CI/CD Pipeline

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install
        working-directory: ./server

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done

      - name: Create test database
        run: |
          PGPASSWORD=test_password psql -h localhost -U test_user -c "CREATE DATABASE test_db;"
        env:
          PGPASSWORD: test_password  # Must match the POSTGRES_PASSWORD set in services

      - name: Build the project
        run: |
          npm run build
        working-directory: ./server

      - name: Run migrations
        run: |
          npx sequelize-cli db:migrate --env test
        working-directory: ./server

      - name: Run tests
        env:
          DATABASE_URL_TEST: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          npm test
        working-directory: ./server
