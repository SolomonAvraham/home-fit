{"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/User.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/User.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":10,"column":8},"end":{"line":13,"column":11}},"6":{"start":{"line":14,"column":8},"end":{"line":17,"column":11}},"7":{"start":{"line":18,"column":8},"end":{"line":21,"column":11}},"8":{"start":{"line":24,"column":0},"end":{"line":64,"column":3}},"9":{"start":{"line":65,"column":0},"end":{"line":65,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":29},"end":{"line":22,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/User.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/User.ts"],"names":[],"mappings":";;;;;AAAA,yCAAuD;AACvD,kEAA2C;AAM3C,MAAM,IACJ,SAAQ,iBAA6C;IAWrD,MAAM,CAAC,SAAS,CAAC,MAAqB;QACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC5B,UAAU,EAAE,QAAQ;YACpB,EAAE,EAAE,WAAW;SAChB,CAAC,CAAC;QAGH,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;YAC3B,UAAU,EAAE,QAAQ;YACpB,EAAE,EAAE,UAAU;SACf,CAAC,CAAC;QAGH,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,EAAE;YACpC,UAAU,EAAE,QAAQ;YACpB,EAAE,EAAE,mBAAmB;SACxB,CAAC,CAAC;IACL,CAAC;CACF;AAED,IAAI,CAAC,IAAI,CACP;IACE,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,MAAM;QAC9B,UAAU,EAAE,IAAI;KACjB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3B,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE;YACR,OAAO,EAAE;gBACP,GAAG,EAAE,+BAA+B;aACrC;SACF;KACF;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,YAAY,EAAE,MAAM;KACrB;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;CACF,EACD;IACE,SAAS,EAAT,kBAAS;IACT,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,kBAAe,IAAI,CAAC","sourcesContent":["import { DataTypes, Model, Optional } from \"sequelize\";\nimport sequelize from \"../config/database\";\nimport { UserAssociate, UserAttributes } from \"../types/models\";\nimport { Workout, ScheduledWorkout } from \".\";\n\nexport interface UserCreationAttributes\n  extends Optional<UserAttributes, \"id\" | \"createdAt\" | \"updatedAt\"> {}\nclass User\n  extends Model<UserAttributes, UserCreationAttributes>\n  implements UserAttributes\n{\n  public id!: string;\n  public name!: string;\n  public email!: string;\n  public password!: string;\n  public role!: string;\n  public createdAt!: Date;\n  public updatedAt!: Date;\n\n  static associate(models: UserAssociate) {\n    User.hasMany(models.Exercise, {\n      foreignKey: \"userId\",\n      as: \"exercises\",\n    });\n\n\n    User.hasMany(models.Workout, {\n      foreignKey: \"userId\",\n      as: \"workouts\",\n    });\n\n\n    User.hasMany(models.ScheduledWorkout, {\n      foreignKey: \"userId\",\n      as: \"scheduledWorkouts\",\n    });\n  }\n}\n\nUser.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true,\n    },\n    name: {\n      type: DataTypes.STRING(255),\n      allowNull: false,\n    },\n    email: {\n      type: DataTypes.STRING(255),\n      allowNull: false,\n      unique: true,\n      validate: {\n        isEmail: {\n          msg: \"Must be a valid email address\",\n        },\n      },\n    },\n    password: {\n      type: DataTypes.STRING(255),\n      allowNull: false,\n    },\n    role: {\n      type: DataTypes.STRING(50),\n      defaultValue: \"user\",\n    },\n    createdAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n    updatedAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n  },\n  {\n    sequelize,\n    tableName: \"users\",\n    timestamps: true,\n  }\n);\n\nexport default User;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"445a6a604307cc46a62bb825bceba67d310c8f13"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/config/database.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/config/database.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"6":{"start":{"line":9,"column":15},"end":{"line":11,"column":30}},"7":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":45}},"9":{"start":{"line":15,"column":18},"end":{"line":19,"column":2}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":9,"column":15},"end":{"line":11,"column":30}},"type":"cond-expr","locations":[{"start":{"line":10,"column":6},"end":{"line":10,"column":35}},{"start":{"line":11,"column":6},"end":{"line":11,"column":30}}],"line":9},"4":{"loc":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"type":"if","locations":[{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},{"start":{},"end":{}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,0],"4":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/config/database.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/config/database.ts"],"names":[],"mappings":";;;;;AAAA,yCAAsC;AACtC,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,MAAM,GACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM;IAC/B,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB;IAC/B,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;AAE1B,IAAI,CAAC,MAAM,EAAE,CAAC;IACb,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC3C,CAAC;AAED,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,MAAM,EAAE;IACtC,OAAO,EAAE,UAAU;IACnB,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE,KAAK;CACf,CAAC,CAAC;AAEH,kBAAe,SAAS,CAAC","sourcesContent":["import { Sequelize } from \"sequelize\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nconst DB_URL =\nprocess.env.NODE_ENV === \"test\"\n? process.env.DATABASE_URL_TEST\n: process.env.DATABASE_URL;\n\n if (!DB_URL) {\n  throw new Error(\"No database URL found\");\n}\n\nconst sequelize = new Sequelize(DB_URL, {\n  dialect: \"postgres\",\n  protocol: \"postgres\",\n  logging: false,\n});\n\nexport default sequelize;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1342fabb872dbb4a42e4112f6729b9fbc3713939"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":10,"column":8},"end":{"line":13,"column":11}},"6":{"start":{"line":14,"column":8},"end":{"line":19,"column":11}},"7":{"start":{"line":20,"column":8},"end":{"line":23,"column":11}},"8":{"start":{"line":26,"column":0},"end":{"line":68,"column":3}},"9":{"start":{"line":69,"column":0},"end":{"line":69,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":29},"end":{"line":24,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout.ts"],"names":[],"mappings":";;;;;AAAA,yCAAuD;AACvD,kEAA2C;AAO3C,MAAM,OACJ,SAAQ,iBAAmD;IAiB3D,MAAM,CAAC,SAAS,CAAC,MAAwB;QACvC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE;YAC7B,UAAU,EAAE,QAAQ;YACpB,EAAE,EAAE,MAAM;SACX,CAAC,CAAC;QACH,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE;YACrC,OAAO,EAAE,MAAM,CAAC,iBAAiB;YACjC,UAAU,EAAE,WAAW;YACvB,QAAQ,EAAE,YAAY;YACtB,EAAE,EAAE,WAAW;SAChB,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,EAAE;YACvC,UAAU,EAAE,WAAW;YACvB,EAAE,EAAE,mBAAmB;SACxB,CAAC,CAAC;IACL,CAAC;CACF;AAED,OAAO,CAAC,IAAI,CACV;IACE,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,MAAM;QAC9B,UAAU,EAAE,IAAI;KACjB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD,WAAW,EAAE;QACX,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;KACjB;IAED,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,SAAS,EAAE,IAAI;KAChB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE;YACV,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,IAAI;SACV;KACF;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,KAAK;QACrB,SAAS,EAAE,KAAK;KACjB;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;CACF,EACD;IACE,SAAS,EAAT,kBAAS;IACT,SAAS,EAAE,UAAU;IACrB,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,kBAAe,OAAO,CAAC","sourcesContent":["import { DataTypes, Model, Optional } from \"sequelize\";\nimport sequelize from \"../config/database\";\nimport { WorkoutAssociate, WorkoutAttributes } from \"../types/models\";\nimport { Exercise, User } from \".\";\n\nexport interface WorkoutCreationAttributes\n  extends Optional<WorkoutAttributes, \"id\" | \"createdAt\" | \"updatedAt\"> {}\n\nclass Workout\n  extends Model<WorkoutAttributes, WorkoutCreationAttributes>\n  implements WorkoutAttributes\n{\n  public id!: string;\n  public name!: string;\n  public description!: string;\n  public duration?: string;\n  public userId!: string;\n  public createdBy?: {\n    creatorId: string;\n    creatorName: string;\n    originalWorkoutId?: string;\n  }[];\n  public createdAt!: Date;\n  public updatedAt!: Date;\n  public exercises?: Exercise[];\n\n  static associate(models: WorkoutAssociate) {\n    Workout.belongsTo(models.User, {\n      foreignKey: \"userId\",\n      as: \"user\",\n    });\n    Workout.belongsToMany(models.Exercise, {\n      through: models.Workout_exercises,\n      foreignKey: \"workoutId\",\n      otherKey: \"exerciseId\",\n      as: \"exercises\",\n    });\n    Workout.hasMany(models.ScheduledWorkout, {\n      foreignKey: \"workoutId\",\n      as: \"scheduledWorkouts\",\n    });\n  }\n}\n\nWorkout.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true,\n    },\n    name: {\n      type: DataTypes.STRING(255),\n      allowNull: false,\n    },\n    description: {\n      type: DataTypes.TEXT,\n      allowNull: false,\n    },\n\n    duration: {\n      type: DataTypes.INTEGER,\n      allowNull: true,\n    },\n    userId: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: \"users\",\n        key: \"id\",\n      },\n    },\n    createdBy: {\n      type: DataTypes.JSONB,\n      allowNull: false,\n    },\n    createdAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n    updatedAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n  },\n  {\n    sequelize,\n    tableName: \"workouts\",\n    timestamps: true,\n  }\n);\n\nexport default Workout;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"82a1fbb492baf50eec744e95611395c9eebb3211"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/index.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":134}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":57}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"10":{"start":{"line":13,"column":19},"end":{"line":13,"column":65}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}},"12":{"start":{"line":15,"column":28},"end":{"line":15,"column":75}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":56}},"14":{"start":{"line":17,"column":27},"end":{"line":17,"column":73}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"16":{"start":{"line":19,"column":0},"end":{"line":23,"column":3}},"17":{"start":{"line":24,"column":0},"end":{"line":29,"column":3}},"18":{"start":{"line":30,"column":0},"end":{"line":34,"column":3}},"19":{"start":{"line":35,"column":0},"end":{"line":38,"column":3}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":6,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"f":{"0":6},"b":{"0":[1,1,1],"1":[6,0],"2":[6,6]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/index.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/index.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAiCxB,eAjCK,cAAI,CAiCL;AAhCN,wDAAgC;AAiC9B,kBAjCK,iBAAO,CAiCL;AAhCT,0DAAkC;AAiChC,mBAjCK,kBAAQ,CAiCL;AAhCV,kEAA2C;AA6BzC,oBA7BK,kBAAS,CA6BL;AA5BX,4EAAoD;AAgClD,4BAhCK,2BAAiB,CAgCL;AA/BnB,0EAAkD;AAgChD,2BAhCK,0BAAgB,CAgCL;AA9BlB,cAAI,CAAC,SAAS,CAAC;IACb,OAAO,EAAP,iBAAO;IACP,QAAQ,EAAR,kBAAQ;IACR,gBAAgB,EAAhB,0BAAgB;CACjB,CAAC,CAAC;AAEH,iBAAO,CAAC,SAAS,CAAC;IAChB,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,kBAAQ;IACR,iBAAiB,EAAjB,2BAAiB;IACjB,gBAAgB,EAAhB,0BAAgB;CACjB,CAAC,CAAC;AAEH,kBAAQ,CAAC,SAAS,CAAC;IACjB,IAAI,EAAJ,cAAI;IACJ,OAAO,EAAP,iBAAO;IACP,iBAAiB,EAAjB,2BAAiB;CAClB,CAAC,CAAC;AAEH,0BAAgB,CAAC,SAAS,CAAC;IACzB,IAAI,EAAJ,cAAI;IACJ,OAAO,EAAP,iBAAO;CACR,CAAC,CAAC","sourcesContent":["import User from \"./User\";\nimport Workout from \"./Workout\";\nimport Exercise from \"./Exercise\";\nimport sequelize from \"../config/database\";\nimport Workout_exercises from \"./Workout_exercises\";\nimport ScheduledWorkout from \"./ScheduledWorkout\";\n\nUser.associate({\n  Workout,\n  Exercise,\n  ScheduledWorkout,\n});\n\nWorkout.associate({\n  User,\n  Exercise,\n  Workout_exercises,\n  ScheduledWorkout,\n});\n\nExercise.associate({\n  User,\n  Workout,\n  Workout_exercises,\n});\n\nScheduledWorkout.associate({\n  User,\n  Workout,\n});\n\nexport {\n  sequelize,\n  User,\n  Workout,\n  Exercise,\n  Workout_exercises,\n  ScheduledWorkout,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b7695911af455d6570277c41d4b97b4edaaf847f"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Exercise.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Exercise.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":10,"column":8},"end":{"line":13,"column":11}},"6":{"start":{"line":14,"column":8},"end":{"line":19,"column":11}},"7":{"start":{"line":22,"column":0},"end":{"line":76,"column":3}},"8":{"start":{"line":77,"column":0},"end":{"line":77,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":29},"end":{"line":20,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Exercise.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Exercise.ts"],"names":[],"mappings":";;;;;AAAA,yCAAuD;AACvD,kEAA2C;AAO3C,MAAM,QACJ,SAAQ,iBAAqD;IAoB7D,MAAM,CAAC,SAAS,CAAC,MAAyB;QACxC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE;YAC9B,UAAU,EAAE,QAAQ;YACpB,EAAE,EAAE,MAAM;SACX,CAAC,CAAC;QACH,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE;YACrC,OAAO,EAAE,MAAM,CAAC,iBAAiB;YACjC,UAAU,EAAE,YAAY;YACxB,QAAQ,EAAE,WAAW;YACrB,EAAE,EAAE,UAAU;SACf,CAAC,CAAC;IACL,CAAC;CACF;AAED,QAAQ,CAAC,IAAI,CACX;IACE,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,MAAM;QAC9B,UAAU,EAAE,IAAI;KACjB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3B,SAAS,EAAE,KAAK;KACjB;IACD,WAAW,EAAE;QACX,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;KACjB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,SAAS,EAAE,IAAI;KAChB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,SAAS,EAAE,IAAI;KAChB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,SAAS,EAAE,IAAI;KAChB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,IAAI;KAChB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE;YACV,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,IAAI;SACV;KACF;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,KAAK;QACrB,SAAS,EAAE,KAAK;KACjB;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;CACF,EACD;IACE,SAAS,EAAT,kBAAS;IACT,SAAS,EAAE,WAAW;IACtB,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,kBAAe,QAAQ,CAAC","sourcesContent":["import { DataTypes, Model, Optional } from \"sequelize\";\nimport sequelize from \"../config/database\";\nimport { Workout, Workout_exercises, User } from \".\";\nimport { ExerciseAssociate, ExerciseAttributes } from \"../types/models\";\n\nexport interface ExerciseCreationAttributes\n  extends Optional<ExerciseAttributes, \"id\"> {}\n\nclass Exercise\n  extends Model<ExerciseAttributes, ExerciseCreationAttributes>\n  implements ExerciseAttributes\n{\n  public id!: string;\n  public name!: string;\n  public description!: string;\n  public duration?: number;\n  public sets?: number;\n  public reps?: number;\n  public media?: string;\n  public userId!: string;\n  public createdBy?: {\n    creatorId: string;\n    creatorName: string;\n    originalExerciseId?: string;\n  }[];\n  public createdAt!: Date;\n  public updatedAt!: Date;\n  public workoutId?: string;\n\n  static associate(models: ExerciseAssociate) {\n    Exercise.belongsTo(models.User, {\n      foreignKey: \"userId\",\n      as: \"user\",\n    });\n    Exercise.belongsToMany(models.Workout, {\n      through: models.Workout_exercises,\n      foreignKey: \"exerciseId\",\n      otherKey: \"workoutId\",\n      as: \"workouts\",\n    });\n  }\n}\n\nExercise.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true,\n    },\n    name: {\n      type: DataTypes.STRING(255),\n      allowNull: false,\n    },\n    description: {\n      type: DataTypes.TEXT,\n      allowNull: false,\n    },\n    duration: {\n      type: DataTypes.INTEGER,\n      allowNull: true,\n    },\n    sets: {\n      type: DataTypes.INTEGER,\n      allowNull: true,\n    },\n    reps: {\n      type: DataTypes.INTEGER,\n      allowNull: true,\n    },\n    media: {\n      type: DataTypes.TEXT,\n      allowNull: true,\n    },\n    userId: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: \"users\",\n        key: \"id\",\n      },\n    },\n    createdBy: {\n      type: DataTypes.JSONB,\n      allowNull: false,\n    },\n    createdAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n    updatedAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n  },\n  {\n    sequelize,\n    tableName: \"exercises\",\n    timestamps: true,\n  }\n);\n\nexport default Exercise;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b5799c0134fcb86b4a00eee1050a8e0472b34b2a"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout_exercises.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout_exercises.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":10,"column":0},"end":{"line":35,"column":3}},"6":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout_exercises.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/Workout_exercises.ts"],"names":[],"mappings":";;;;;AAAA,yCAA6C;AAC7C,kEAA2C;AAE3C,MAAM,iBAAkB,SAAQ,iBAAK;CAGpC;AAED,iBAAiB,CAAC,IAAI,CACpB;IACE,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE;YACV,KAAK,EAAE,UAAU;YACjB,GAAG,EAAE,IAAI;SACV;QACD,QAAQ,EAAE,SAAS;QACnB,UAAU,EAAE,IAAI;KACjB;IACD,UAAU,EAAE;QACV,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE;YACV,KAAK,EAAE,WAAW;YAClB,GAAG,EAAE,IAAI;SACV;QACD,QAAQ,EAAE,SAAS;QACnB,UAAU,EAAE,IAAI;KACjB;CACF,EACD;IACE,SAAS,EAAT,kBAAS;IACT,SAAS,EAAE,mBAAmB;IAC9B,UAAU,EAAE,KAAK;CAClB,CACF,CAAC;AAEF,kBAAe,iBAAiB,CAAC","sourcesContent":["import { Model, DataTypes } from \"sequelize\";\nimport sequelize from \"../config/database\";\n\nclass Workout_exercises extends Model {\n  public workoutId!: string;\n  public exerciseId!: string;\n}\n\nWorkout_exercises.init(\n  {\n    workoutId: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: \"workouts\",\n        key: \"id\",\n      },\n      onDelete: \"CASCADE\",\n      primaryKey: true,\n    },\n    exerciseId: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: \"exercises\",\n        key: \"id\",\n      },\n      onDelete: \"CASCADE\",\n      primaryKey: true,\n    },\n  },\n  {\n    sequelize,\n    tableName: \"workout_exercises\",\n    timestamps: false,\n  }\n);\n\nexport default Workout_exercises;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"acb19b9212fe91ca58f29b7793b18582753b7315"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/ScheduledWorkout.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/ScheduledWorkout.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":11},"end":{"line":8,"column":23}},"6":{"start":{"line":11,"column":8},"end":{"line":14,"column":11}},"7":{"start":{"line":15,"column":8},"end":{"line":18,"column":11}},"8":{"start":{"line":21,"column":0},"end":{"line":63,"column":3}},"9":{"start":{"line":64,"column":0},"end":{"line":64,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":29},"end":{"line":19,"column":5}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/ScheduledWorkout.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/models/ScheduledWorkout.ts"],"names":[],"mappings":";;;;;AAAA,yCAAuD;AACvD,kEAA2C;AAC3C,wBAAkC;AAQlC,MAAM,gBACJ,SAAQ,iBAAqE;IAW7E,MAAM,CAAC,SAAS,CAAC,MAAiC;QAChD,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE;YACtC,UAAU,EAAE,QAAQ;YACpB,EAAE,EAAE,MAAM;SACX,CAAC,CAAC;QACH,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE;YACzC,UAAU,EAAE,WAAW;YACvB,EAAE,EAAE,SAAS;SACd,CAAC,CAAC;IACL,CAAC;CACF;AAED,gBAAgB,CAAC,IAAI,CACnB;IACE,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,MAAM;QAC9B,UAAU,EAAE,IAAI;KACjB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE;YACV,KAAK,EAAE,OAAI;YACX,GAAG,EAAE,IAAI;SACV;KACF;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE;YACV,KAAK,EAAE,UAAO;YACd,GAAG,EAAE,IAAI;SACV;KACF;IACD,aAAa,EAAE;QACb,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;KACjB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,YAAY,EAAE,KAAK;KACpB;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,YAAY,EAAE,qBAAS,CAAC,GAAG;KAC5B;CACF,EACD;IACE,SAAS,EAAT,kBAAS;IACT,SAAS,EAAE,oBAAoB;IAC/B,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,kBAAe,gBAAgB,CAAC","sourcesContent":["import { DataTypes, Model, Optional } from \"sequelize\";\nimport sequelize from \"../config/database\";\nimport { User, Workout } from \".\";\nimport { ScheduledWorkoutAssociate, ScheduledWorkoutAttributes } from \"../types/models\";\n\n\n\nexport interface ScheduledWorkoutCreationAttributes\n  extends Optional<ScheduledWorkoutAttributes, \"id\"> {}\n\nclass ScheduledWorkout\n  extends Model<ScheduledWorkoutAttributes, ScheduledWorkoutCreationAttributes>\n  implements ScheduledWorkoutAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public workoutId!: string;\n  public scheduledDate!: Date;\n  public isDone!: boolean;\n  public createdAt!: Date;\n  public updatedAt!: Date;\n \n  static associate(models: ScheduledWorkoutAssociate) {\n    ScheduledWorkout.belongsTo(models.User, {\n      foreignKey: \"userId\",\n      as: \"user\",\n    });\n    ScheduledWorkout.belongsTo(models.Workout, {\n      foreignKey: \"workoutId\",\n      as: \"workout\",\n    });\n  }\n}\n\nScheduledWorkout.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true,\n    },\n    userId: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n    workoutId: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Workout,\n        key: \"id\",\n      },\n    },\n    scheduledDate: {\n      type: DataTypes.DATE,\n      allowNull: false,\n    },\n    isDone: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false,\n    },\n    createdAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n    updatedAt: {\n      type: DataTypes.DATE,\n      defaultValue: DataTypes.NOW,\n    },\n  },\n  {\n    sequelize,\n    tableName: \"scheduled_workouts\",\n    timestamps: true,\n  }\n);\n\nexport default ScheduledWorkout;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e2e82cb2f71b9f5b9dc88ef01c7b57be5fa4a321"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/index.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":53}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":64}},"17":{"start":{"line":17,"column":22},"end":{"line":17,"column":61}},"18":{"start":{"line":18,"column":26},"end":{"line":18,"column":82}},"19":{"start":{"line":19,"column":16},"end":{"line":19,"column":41}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}},"21":{"start":{"line":21,"column":15},"end":{"line":21,"column":47}},"22":{"start":{"line":22,"column":21},"end":{"line":22,"column":68}},"23":{"start":{"line":23,"column":24},"end":{"line":23,"column":65}},"24":{"start":{"line":24,"column":12},"end":{"line":24,"column":36}},"25":{"start":{"line":25,"column":13},"end":{"line":25,"column":37}},"26":{"start":{"line":26,"column":23},"end":{"line":26,"column":48}},"27":{"start":{"line":27,"column":0},"end":{"line":39,"column":4}},"28":{"start":{"line":30,"column":8},"end":{"line":31,"column":40}},"29":{"start":{"line":31,"column":12},"end":{"line":31,"column":40}},"30":{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},"31":{"start":{"line":33,"column":24},"end":{"line":33,"column":104}},"32":{"start":{"line":34,"column":12},"end":{"line":34,"column":51}},"33":{"start":{"line":36,"column":8},"end":{"line":36,"column":36}},"34":{"start":{"line":40,"column":0},"end":{"line":40,"column":34}},"35":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"36":{"start":{"line":42,"column":0},"end":{"line":42,"column":40}},"37":{"start":{"line":43,"column":0},"end":{"line":43,"column":41}},"38":{"start":{"line":44,"column":0},"end":{"line":44,"column":43}},"39":{"start":{"line":45,"column":0},"end":{"line":45,"column":35}},"40":{"start":{"line":46,"column":0},"end":{"line":46,"column":47}},"41":{"start":{"line":47,"column":0},"end":{"line":47,"column":50}},"42":{"start":{"line":48,"column":0},"end":{"line":50,"column":3}},"43":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"44":{"start":{"line":51,"column":20},"end":{"line":64,"column":2}},"45":{"start":{"line":51,"column":26},"end":{"line":64,"column":2}},"46":{"start":{"line":52,"column":4},"end":{"line":63,"column":5}},"47":{"start":{"line":53,"column":8},"end":{"line":53,"column":48}},"48":{"start":{"line":54,"column":8},"end":{"line":54,"column":56}},"49":{"start":{"line":55,"column":8},"end":{"line":55,"column":40}},"50":{"start":{"line":56,"column":8},"end":{"line":56,"column":46}},"51":{"start":{"line":57,"column":8},"end":{"line":59,"column":11}},"52":{"start":{"line":58,"column":12},"end":{"line":58,"column":61}},"53":{"start":{"line":62,"column":8},"end":{"line":62,"column":67}},"54":{"start":{"line":65,"column":0},"end":{"line":65,"column":14}},"55":{"start":{"line":66,"column":0},"end":{"line":66,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":28,"column":12},"end":{"line":28,"column":13}},"loc":{"start":{"line":28,"column":40},"end":{"line":37,"column":5}},"line":28},"9":{"name":"(anonymous_9)","decl":{"start":{"line":48,"column":13},"end":{"line":48,"column":14}},"loc":{"start":{"line":48,"column":27},"end":{"line":50,"column":1}},"line":48},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":20},"end":{"line":51,"column":21}},"loc":{"start":{"line":51,"column":26},"end":{"line":64,"column":2}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":60},"end":{"line":51,"column":61}},"loc":{"start":{"line":51,"column":73},"end":{"line":64,"column":1}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":57,"column":25},"end":{"line":57,"column":26}},"loc":{"start":{"line":57,"column":31},"end":{"line":59,"column":9}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":37}},"type":"binary-expr","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":29}},{"start":{"line":25,"column":33},"end":{"line":25,"column":37}}],"line":25},"9":{"loc":{"start":{"line":30,"column":8},"end":{"line":31,"column":40}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":31,"column":40}},{"start":{},"end":{}}],"line":30},"10":{"loc":{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},{"start":{},"end":{}}],"line":32}},"s":{"0":1,"1":2,"2":0,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":3,"11":1,"12":1,"13":7,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":48,"29":48,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":0,"51":0,"52":0,"53":1,"54":1,"55":1},"f":{"0":1,"1":2,"2":0,"3":1,"4":1,"5":1,"6":3,"7":7,"8":48,"9":1,"10":1,"11":1,"12":0},"b":{"0":[1,1,1],"1":[2,0],"2":[1,1],"3":[1,2],"4":[1,1],"5":[1,1,1],"6":[3,4],"7":[7,7],"8":[1,0],"9":[48,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/index.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,sDAAkE;AAClE,iEAA0C;AAC1C,8DAAqC;AACrC,mFAA2D;AAC3D,0CAAyE;AACzE,+BAA6B;AAC7B,gDAAwB;AACxB,qEAA6C;AAC7C,kEAAyC;AAEzC,MAAM,GAAG,GAAgB,IAAA,iBAAO,GAAE,CAAC;AACnC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,MAAM,cAAc,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAEjD,GAAG,CAAC,GAAG,CACL,IAAA,cAAI,EAAC;IACH,MAAM,EAAE,UAAU,MAAM,EAAE,QAAQ;QAChC,oEAAoE;QACpE,IAAI,CAAC,MAAM;YAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YAC1C,MAAM,GAAG,GACP,gFAAgF,CAAC;YACnF,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC;QACD,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IACD,WAAW,EAAE,IAAI;CAClB,CAAC,CACH,CAAC;AAEF,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,GAAE,CAAC,CAAC;AAExB,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,iBAAS,CAAC,CAAC;AAEjC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,oBAAU,CAAC,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,yBAAe,CAAC,CAAC;AAEzB,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,oBAAY,CAAC,CAAC;AACvC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,sBAAc,CAAC,CAAC;AAE1C,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC3C,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AAEH,MAAM,WAAW,GAAG,GAAS,EAAE;IAC7B,IAAI,CAAC;QACH,MAAM,kBAAS,CAAC,YAAY,EAAE,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEhD,MAAM,kBAAS,CAAC,IAAI,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAEtC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,EAAE,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC,CAAA,CAAC;AAEF,WAAW,EAAE,CAAC;AAEd,kBAAe,GAAG,CAAC","sourcesContent":["import express, { Application, Request, Response } from \"express\";\nimport sequelize from \"./config/database\";\nimport bodyParser from \"body-parser\";\nimport errorMiddleware from \"./middleware/errorMiddleware\";\nimport { userRoute, workoutRoute, exerciseRoutes } from \"./routes/index\";\nimport \"../src/models/index\";\nimport cors from \"cors\";\nimport testRoutes from \"./routes/testRoutes\";\nimport cookieParser from \"cookie-parser\";\n\nconst app: Application = express();\nconst PORT = process.env.PORT || 9000;\n\nconst allowedOrigins = [\"http://localhost:3000\"];\n\napp.use(\n  cors({\n    origin: function (origin, callback) {\n      // Allow requests with no origin (like mobile apps or curl requests)\n      if (!origin) return callback(null, true);\n      if (allowedOrigins.indexOf(origin) === -1) {\n        const msg =\n          \"The CORS policy for this site does not allow access from the specified Origin.\";\n        return callback(new Error(msg), false);\n      }\n      return callback(null, true);\n    },\n    credentials: true,\n  })\n);\n\napp.use(express.json());\napp.use(bodyParser.json());\napp.use(cookieParser());\n\napp.use(\"/api/users\", userRoute);\n\napp.use(\"/api/test\", testRoutes);\napp.use(errorMiddleware);\n\napp.use(\"/api/workouts\", workoutRoute);\napp.use(\"/api/exercises\", exerciseRoutes);\n\napp.get(\"/\", (req: Request, res: Response) => {\n  res.send(\"Hello, world!\");\n});\n\nconst startServer = async () => {\n  try {\n    await sequelize.authenticate();\n    console.log(\"Database connected successfully.\");\n\n    await sequelize.sync();\n    console.log(\"Database synchronized.\");\n\n    app.listen(PORT, () => {\n      console.log(`Server is running on port ${PORT}`);\n    });\n  } catch (error) {\n    console.error(\"Unable to connect to the database:\", error);\n  }\n};\n\nstartServer();\n\nexport default app;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d1d256ab728029fa8b226c709351e53fbab5f2ff"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/errorMiddleware.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/errorMiddleware.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":8,"column":1}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":4},"end":{"line":7,"column":65}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":24},"end":{"line":3,"column":25}},"loc":{"start":{"line":3,"column":49},"end":{"line":8,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":23},"end":{"line":4,"column":40}},"type":"binary-expr","locations":[{"start":{"line":4,"column":23},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":40}}],"line":4},"1":{"loc":{"start":{"line":7,"column":23},"end":{"line":7,"column":61}},"type":"binary-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":34}},{"start":{"line":7,"column":38},"end":{"line":7,"column":61}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{"0":[1,1],"1":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/errorMiddleware.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/errorMiddleware.ts"],"names":[],"mappings":";;AAEA,MAAM,eAAe,GAAG,CACtB,GAAQ,EACR,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;IACrC,GAAG;SACA,MAAM,CAAC,UAAU,CAAC;SAClB,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,IAAI,uBAAuB,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\n\nconst errorMiddleware = (\n  err: any,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const statusCode = err.status || 500;\n  res\n    .status(statusCode)\n    .json({ error: err.message || \"Internal Server Error\" });\n};\n\nexport default errorMiddleware;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92d00532ae5a80b782d3776ed7b7c4b857045a36"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/index.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":95}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"6":{"start":{"line":9,"column":24},"end":{"line":9,"column":67}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"8":{"start":{"line":11,"column":25},"end":{"line":11,"column":69}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"10":{"start":{"line":13,"column":21},"end":{"line":13,"column":61}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":4},"b":{"0":[1,1,1],"1":[4,0],"2":[4,4]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/index.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/index.ts"],"names":[],"mappings":";;;;;;AAAA,8DAAqC;AAK5B,oBALF,oBAAS,CAKE;AAJlB,oEAA2C;AAIvB,uBAJb,uBAAY,CAIa;AAHhC,sEAA8C;AAGZ,yBAH3B,wBAAc,CAG2B;AAFhD,8DAAqC;AAEa,oBAF3C,oBAAS,CAE2C","sourcesContent":["import userRoute from \"./userRoutes\";\nimport workoutRoute from \"./workoutRoutes\";\nimport exerciseRoutes from \"./exerciseRoutes\";\nimport testRoute from \"./testRoutes\";\n\nexport { userRoute, workoutRoute, exerciseRoutes, testRoute };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"10081b0cbbfd5e6c28a891eada8f520fec71f554"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/userRoutes.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/userRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":82}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":81}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":38}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":54}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":83}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":93}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":96}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/userRoutes.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/userRoutes.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,mFAA2D;AAC3D,kFAA0D;AAE1D,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,wBAAc,CAAC,UAAU,CAAC,CAAC;AACpD,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,wBAAc,CAAC,KAAK,CAAC,CAAC;AAC5C,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,wBAAc,CAAC,MAAM,CAAC,CAAC;AAC7C,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,wBAAc,EAAE,wBAAc,CAAC,WAAW,CAAC,CAAC;AAC/D,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,wBAAc,EAAE,wBAAc,CAAC,WAAW,CAAC,CAAC;AAC3E,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,wBAAc,EAAE,wBAAc,CAAC,UAAU,CAAC,CAAC;AACzE,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,wBAAc,EAAE,wBAAc,CAAC,UAAU,CAAC,CAAC;AAE5E,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport UserController from \"../controllers/userController\";\nimport authMiddleware from \"../middleware/authMiddleware\";\n\nconst router = Router();\n\nrouter.post(\"/register\", UserController.createUser);\nrouter.post(\"/login\", UserController.login);\nrouter.get(\"/logout\", UserController.logout);\nrouter.get(\"/all\", authMiddleware, UserController.getAllUsers);\nrouter.get(\"/getUserById/:id\", authMiddleware, UserController.getUserById);\nrouter.put(\"/updateUser/:id\", authMiddleware, UserController.updateUser);\nrouter.delete(\"/deleteUser/:id\", authMiddleware, UserController.deleteUser);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"001ccb138bf34b52b4afe49890fa0be1ab241780"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/userController.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/userController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":13},"end":{"line":21,"column":1}},"13":{"start":{"line":12,"column":12},"end":{"line":12,"column":14}},"14":{"start":{"line":13,"column":4},"end":{"line":14,"column":20}},"15":{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},"16":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}},"17":{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},"18":{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},"19":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"20":{"start":{"line":16,"column":28},"end":{"line":16,"column":59}},"21":{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},"22":{"start":{"line":18,"column":16},"end":{"line":18,"column":34}},"23":{"start":{"line":20,"column":4},"end":{"line":20,"column":13}},"24":{"start":{"line":22,"column":22},"end":{"line":24,"column":1}},"25":{"start":{"line":23,"column":4},"end":{"line":23,"column":62}},"26":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"27":{"start":{"line":26,"column":22},"end":{"line":26,"column":73}},"28":{"start":{"line":27,"column":15},"end":{"line":27,"column":30}},"29":{"start":{"line":30,"column":8},"end":{"line":50,"column":11}},"30":{"start":{"line":31,"column":12},"end":{"line":49,"column":13}},"31":{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},"32":{"start":{"line":33,"column":20},"end":{"line":33,"column":81}},"33":{"start":{"line":35,"column":29},"end":{"line":35,"column":77}},"34":{"start":{"line":36,"column":16},"end":{"line":40,"column":19}},"35":{"start":{"line":41,"column":34},"end":{"line":41,"column":38}},"36":{"start":{"line":41,"column":51},"end":{"line":41,"column":74}},"37":{"start":{"line":42,"column":16},"end":{"line":42,"column":47}},"38":{"start":{"line":45,"column":16},"end":{"line":47,"column":17}},"39":{"start":{"line":46,"column":20},"end":{"line":46,"column":69}},"40":{"start":{"line":48,"column":16},"end":{"line":48,"column":37}},"41":{"start":{"line":53,"column":8},"end":{"line":70,"column":11}},"42":{"start":{"line":54,"column":12},"end":{"line":69,"column":13}},"43":{"start":{"line":55,"column":44},"end":{"line":55,"column":52}},"44":{"start":{"line":56,"column":50},"end":{"line":56,"column":111}},"45":{"start":{"line":57,"column":16},"end":{"line":61,"column":19}},"46":{"start":{"line":62,"column":16},"end":{"line":62,"column":57}},"47":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"48":{"start":{"line":66,"column":20},"end":{"line":66,"column":69}},"49":{"start":{"line":68,"column":16},"end":{"line":68,"column":37}},"50":{"start":{"line":73,"column":8},"end":{"line":89,"column":11}},"51":{"start":{"line":74,"column":12},"end":{"line":88,"column":13}},"52":{"start":{"line":75,"column":16},"end":{"line":80,"column":19}},"53":{"start":{"line":81,"column":16},"end":{"line":81,"column":71}},"54":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"55":{"start":{"line":85,"column":20},"end":{"line":85,"column":69}},"56":{"start":{"line":87,"column":16},"end":{"line":87,"column":37}},"57":{"start":{"line":92,"column":8},"end":{"line":110,"column":11}},"58":{"start":{"line":93,"column":27},"end":{"line":93,"column":40}},"59":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"60":{"start":{"line":95,"column":16},"end":{"line":95,"column":73}},"61":{"start":{"line":97,"column":12},"end":{"line":109,"column":13}},"62":{"start":{"line":98,"column":29},"end":{"line":98,"column":76}},"63":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"64":{"start":{"line":100,"column":20},"end":{"line":100,"column":72}},"65":{"start":{"line":102,"column":16},"end":{"line":102,"column":43}},"66":{"start":{"line":105,"column":16},"end":{"line":107,"column":17}},"67":{"start":{"line":106,"column":20},"end":{"line":106,"column":69}},"68":{"start":{"line":108,"column":16},"end":{"line":108,"column":37}},"69":{"start":{"line":113,"column":8},"end":{"line":124,"column":11}},"70":{"start":{"line":114,"column":12},"end":{"line":123,"column":13}},"71":{"start":{"line":115,"column":30},"end":{"line":115,"column":71}},"72":{"start":{"line":116,"column":16},"end":{"line":116,"column":44}},"73":{"start":{"line":119,"column":16},"end":{"line":121,"column":17}},"74":{"start":{"line":120,"column":20},"end":{"line":120,"column":69}},"75":{"start":{"line":122,"column":16},"end":{"line":122,"column":37}},"76":{"start":{"line":127,"column":8},"end":{"line":143,"column":11}},"77":{"start":{"line":128,"column":25},"end":{"line":128,"column":33}},"78":{"start":{"line":129,"column":12},"end":{"line":132,"column":13}},"79":{"start":{"line":130,"column":16},"end":{"line":130,"column":73}},"80":{"start":{"line":131,"column":16},"end":{"line":131,"column":23}},"81":{"start":{"line":133,"column":12},"end":{"line":142,"column":13}},"82":{"start":{"line":134,"column":36},"end":{"line":134,"column":89}},"83":{"start":{"line":135,"column":16},"end":{"line":135,"column":38}},"84":{"start":{"line":138,"column":16},"end":{"line":140,"column":17}},"85":{"start":{"line":139,"column":20},"end":{"line":139,"column":69}},"86":{"start":{"line":141,"column":16},"end":{"line":141,"column":37}},"87":{"start":{"line":146,"column":8},"end":{"line":170,"column":11}},"88":{"start":{"line":147,"column":27},"end":{"line":147,"column":37}},"89":{"start":{"line":148,"column":12},"end":{"line":151,"column":13}},"90":{"start":{"line":149,"column":16},"end":{"line":149,"column":73}},"91":{"start":{"line":150,"column":16},"end":{"line":150,"column":23}},"92":{"start":{"line":152,"column":12},"end":{"line":169,"column":13}},"93":{"start":{"line":153,"column":32},"end":{"line":153,"column":74}},"94":{"start":{"line":154,"column":16},"end":{"line":157,"column":17}},"95":{"start":{"line":155,"column":20},"end":{"line":155,"column":72}},"96":{"start":{"line":156,"column":20},"end":{"line":156,"column":27}},"97":{"start":{"line":158,"column":16},"end":{"line":160,"column":17}},"98":{"start":{"line":159,"column":20},"end":{"line":159,"column":45}},"99":{"start":{"line":161,"column":16},"end":{"line":161,"column":39}},"100":{"start":{"line":164,"column":16},"end":{"line":167,"column":17}},"101":{"start":{"line":165,"column":20},"end":{"line":165,"column":84}},"102":{"start":{"line":166,"column":20},"end":{"line":166,"column":69}},"103":{"start":{"line":168,"column":16},"end":{"line":168,"column":37}},"104":{"start":{"line":173,"column":0},"end":{"line":173,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":38},"end":{"line":11,"column":39}},"loc":{"start":{"line":11,"column":54},"end":{"line":21,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":56},"end":{"line":22,"column":57}},"loc":{"start":{"line":22,"column":71},"end":{"line":24,"column":1}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":25},"end":{"line":51,"column":5}},"line":29},"10":{"name":"(anonymous_10)","decl":{"start":{"line":30,"column":47},"end":{"line":30,"column":48}},"loc":{"start":{"line":30,"column":60},"end":{"line":50,"column":9}},"line":30},"11":{"name":"(anonymous_11)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":20},"end":{"line":71,"column":5}},"line":52},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":47},"end":{"line":53,"column":48}},"loc":{"start":{"line":53,"column":60},"end":{"line":70,"column":9}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":21},"end":{"line":90,"column":5}},"line":72},"14":{"name":"(anonymous_14)","decl":{"start":{"line":73,"column":47},"end":{"line":73,"column":48}},"loc":{"start":{"line":73,"column":60},"end":{"line":89,"column":9}},"line":73},"15":{"name":"(anonymous_15)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":26},"end":{"line":111,"column":5}},"line":91},"16":{"name":"(anonymous_16)","decl":{"start":{"line":92,"column":47},"end":{"line":92,"column":48}},"loc":{"start":{"line":92,"column":60},"end":{"line":110,"column":9}},"line":92},"17":{"name":"(anonymous_17)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":26},"end":{"line":125,"column":5}},"line":112},"18":{"name":"(anonymous_18)","decl":{"start":{"line":113,"column":47},"end":{"line":113,"column":48}},"loc":{"start":{"line":113,"column":60},"end":{"line":124,"column":9}},"line":113},"19":{"name":"(anonymous_19)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":25},"end":{"line":144,"column":5}},"line":126},"20":{"name":"(anonymous_20)","decl":{"start":{"line":127,"column":47},"end":{"line":127,"column":48}},"loc":{"start":{"line":127,"column":60},"end":{"line":143,"column":9}},"line":127},"21":{"name":"(anonymous_21)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":25},"end":{"line":171,"column":5}},"line":145},"22":{"name":"(anonymous_22)","decl":{"start":{"line":146,"column":47},"end":{"line":146,"column":48}},"loc":{"start":{"line":146,"column":60},"end":{"line":170,"column":9}},"line":146}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":13},"end":{"line":21,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":14},"end":{"line":11,"column":18}},{"start":{"line":11,"column":22},"end":{"line":11,"column":33}},{"start":{"line":11,"column":38},"end":{"line":21,"column":1}}],"line":11},"6":{"loc":{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},"type":"if","locations":[{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},{"start":{},"end":{}}],"line":13},"7":{"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":87}},"type":"binary-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":67}},{"start":{"line":13,"column":71},"end":{"line":13,"column":87}}],"line":13},"8":{"loc":{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},{"start":{},"end":{}}],"line":15},"9":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":71}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":17}},{"start":{"line":15,"column":21},"end":{"line":15,"column":71}}],"line":15},"10":{"loc":{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},{"start":{},"end":{}}],"line":17},"11":{"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":90}},"type":"binary-expr","locations":[{"start":{"line":17,"column":16},"end":{"line":17,"column":35}},{"start":{"line":17,"column":39},"end":{"line":17,"column":90}}],"line":17},"12":{"loc":{"start":{"line":22,"column":22},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":51}},{"start":{"line":22,"column":56},"end":{"line":24,"column":1}}],"line":22},"13":{"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":61}},"type":"cond-expr","locations":[{"start":{"line":23,"column":37},"end":{"line":23,"column":40}},{"start":{"line":23,"column":43},"end":{"line":23,"column":61}}],"line":23},"14":{"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":33}},"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":15}},{"start":{"line":23,"column":19},"end":{"line":23,"column":33}}],"line":23},"15":{"loc":{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},{"start":{},"end":{}}],"line":32},"16":{"loc":{"start":{"line":32,"column":20},"end":{"line":32,"column":75}},"type":"binary-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":35}},{"start":{"line":32,"column":39},"end":{"line":32,"column":57}},{"start":{"line":32,"column":61},"end":{"line":32,"column":75}}],"line":32},"17":{"loc":{"start":{"line":45,"column":16},"end":{"line":47,"column":17}},"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":47,"column":17}},{"start":{},"end":{}}],"line":45},"18":{"loc":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},{"start":{},"end":{}}],"line":65},"19":{"loc":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"type":"if","locations":[{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},{"start":{},"end":{}}],"line":84},"20":{"loc":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},{"start":{},"end":{}}],"line":94},"21":{"loc":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},{"start":{},"end":{}}],"line":99},"22":{"loc":{"start":{"line":105,"column":16},"end":{"line":107,"column":17}},"type":"if","locations":[{"start":{"line":105,"column":16},"end":{"line":107,"column":17}},{"start":{},"end":{}}],"line":105},"23":{"loc":{"start":{"line":119,"column":16},"end":{"line":121,"column":17}},"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":121,"column":17}},{"start":{},"end":{}}],"line":119},"24":{"loc":{"start":{"line":129,"column":12},"end":{"line":132,"column":13}},"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":132,"column":13}},{"start":{},"end":{}}],"line":129},"25":{"loc":{"start":{"line":138,"column":16},"end":{"line":140,"column":17}},"type":"if","locations":[{"start":{"line":138,"column":16},"end":{"line":140,"column":17}},{"start":{},"end":{}}],"line":138},"26":{"loc":{"start":{"line":148,"column":12},"end":{"line":151,"column":13}},"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":151,"column":13}},{"start":{},"end":{}}],"line":148},"27":{"loc":{"start":{"line":154,"column":16},"end":{"line":157,"column":17}},"type":"if","locations":[{"start":{"line":154,"column":16},"end":{"line":157,"column":17}},{"start":{},"end":{}}],"line":154},"28":{"loc":{"start":{"line":158,"column":16},"end":{"line":160,"column":17}},"type":"if","locations":[{"start":{"line":158,"column":16},"end":{"line":160,"column":17}},{"start":{},"end":{}}],"line":158},"29":{"loc":{"start":{"line":164,"column":16},"end":{"line":167,"column":17}},"type":"if","locations":[{"start":{"line":164,"column":16},"end":{"line":167,"column":17}},{"start":{},"end":{}}],"line":164}},"s":{"0":1,"1":9,"2":0,"3":12,"4":4,"5":4,"6":0,"7":5,"8":5,"9":4,"10":17,"11":12,"12":1,"13":1,"14":1,"15":5,"16":4,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":3,"30":3,"31":3,"32":2,"33":3,"34":1,"35":1,"36":1,"37":1,"38":2,"39":2,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":4,"58":4,"59":4,"60":2,"61":4,"62":4,"63":1,"64":0,"65":1,"66":3,"67":3,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":1,"78":1,"79":1,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":4,"88":4,"89":4,"90":2,"91":2,"92":2,"93":2,"94":2,"95":1,"96":1,"97":1,"98":1,"99":1,"100":0,"101":0,"102":0,"103":0,"104":1},"f":{"0":12,"1":9,"2":0,"3":12,"4":4,"5":5,"6":17,"7":1,"8":1,"9":3,"10":3,"11":0,"12":0,"13":0,"14":0,"15":4,"16":4,"17":0,"18":0,"19":1,"20":1,"21":4,"22":4},"b":{"0":[1,1,1],"1":[9,0],"2":[12,12],"3":[8,9],"4":[12,12],"5":[1,1,1],"6":[4,1],"7":[5,5],"8":[1,0],"9":[1,1],"10":[0,0],"11":[0,0],"12":[1,1,1],"13":[1,0],"14":[1,1],"15":[2,1],"16":[3,3,1],"17":[2,0],"18":[0,0],"19":[0,0],"20":[2,2],"21":[0,1],"22":[3,0],"23":[0,0],"24":[1,0],"25":[0,0],"26":[2,2],"27":[1,1],"28":[1,0],"29":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/userController.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/userController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport UserService from \"../services/userService\";\nimport { validate as validateUUID } from \"uuid\";\n\nclass UserController {\n  public async createUser(req: Request, res: Response): Promise<void> {\n    try {\n      if (!req.body.email || !req.body.password || !req.body.name) {\n        res.status(400).json({ message: \"All fields are required\" });\n      }\n\n      const user = await UserService.createUser(req.body);\n\n      res.cookie(\"token\", user.token, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === \"production\",\n        sameSite: \"strict\",\n      });\n\n      const { token, ...userData } = user;\n\n      res.status(201).json(userData);\n    } catch (error: any) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      }\n      console.error(error);\n    }\n  }\n\n  public async login(req: Request, res: Response): Promise<void> {\n    try {\n      const { email, password } = req.body;\n\n      const { id, name, role, token } = await UserService.authenticateUser(\n        email,\n        password\n      );\n\n      res.cookie(\"token\", token, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === \"production\",\n        sameSite: \"strict\",\n      });\n\n      res.status(200).json({ id, name, role });\n    } catch (error: any) {\n      if (error instanceof Error) {\n        res.status(401).json({ message: error.message });\n      }\n      console.error(error);\n    }\n  }\n\n  public async logout(req: Request, res: Response): Promise<void> {\n    try {\n      res.cookie(\"token\", \"\", {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === \"production\",\n        sameSite: \"strict\",\n        expires: new Date(0),\n      });\n\n      res.status(200).json({ message: \"Logout successful\" });\n    } catch (error: any) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      }\n      console.error(error);\n    }\n  }\n\n  public async getUserById(req: Request, res: Response): Promise<void> {\n    const userId = req.params.id;\n\n    if (!validateUUID(userId)) {\n      res.status(400).json({ message: \"Invalid UUID format\" });\n    }\n    try {\n      const user = await UserService.getUserById(userId);\n\n      if (!user) {\n        res.status(404).json({ message: \"User not found\" });\n      }\n\n      res.status(200).json(user);\n    } catch (error: any) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      }\n      console.error(error);\n    }\n  }\n\n  public async getAllUsers(req: Request, res: Response): Promise<void> {\n    try {\n      const users = await UserService.getAllUsers();\n      res.status(200).json(users);\n    } catch (error: any) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      }\n      console.error(error);\n    }\n  }\n\n  public async updateUser(req: Request, res: Response): Promise<void> {\n    const data = req.body;\n\n    if (!validateUUID(data.id)) {\n      res.status(400).json({ message: \"Invalid UUID format\" });\n      return;\n    }\n\n    try {\n      const updatedUser = await UserService.updateUser(data.id, data);\n      res.json(updatedUser);\n    } catch (error: any) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      }\n      console.error(error);\n    }\n  }\n\n  public async deleteUser(req: Request, res: Response): Promise<void> {\n    const { id } = req.params;\n    if (!validateUUID(id)) {\n      res.status(400).json({ message: \"Invalid UUID format\" });\n      return;\n    }\n    try {\n      const deleted = await UserService.deleteUser(id);\n      if (deleted === 0) {\n        res.status(404).json({ message: \"User not found\" });\n        return;\n      }\n\n      if (res) {\n        res.clearCookie(\"token\");\n      }\n\n      res.status(204).json();\n    } catch (error: any) {\n      if (error instanceof Error) {\n        console.error(\"Delete user error:\", error.message, error.stack); // Added logging\n        res.status(400).json({ message: error.message });\n      }\n      console.error(error);\n    }\n  }\n}\n\nexport default new UserController();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9e53ed43665f47218ba8c8fa3447efa3a40d864c"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/userService.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/userService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":57}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":55}},"17":{"start":{"line":17,"column":23},"end":{"line":17,"column":63}},"18":{"start":{"line":18,"column":15},"end":{"line":18,"column":30}},"19":{"start":{"line":19,"column":16},"end":{"line":19,"column":42}},"20":{"start":{"line":22,"column":8},"end":{"line":52,"column":11}},"21":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"22":{"start":{"line":24,"column":16},"end":{"line":24,"column":59}},"23":{"start":{"line":26,"column":31},"end":{"line":26,"column":59}},"24":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"25":{"start":{"line":28,"column":16},"end":{"line":28,"column":56}},"26":{"start":{"line":30,"column":34},"end":{"line":30,"column":57}},"27":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"28":{"start":{"line":32,"column":16},"end":{"line":32,"column":111}},"29":{"start":{"line":34,"column":30},"end":{"line":34,"column":49}},"30":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"31":{"start":{"line":36,"column":16},"end":{"line":36,"column":112}},"32":{"start":{"line":38,"column":33},"end":{"line":38,"column":95}},"33":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"34":{"start":{"line":40,"column":16},"end":{"line":40,"column":56}},"35":{"start":{"line":42,"column":35},"end":{"line":42,"column":83}},"36":{"start":{"line":43,"column":25},"end":{"line":43,"column":122}},"37":{"start":{"line":44,"column":26},"end":{"line":44,"column":168}},"38":{"start":{"line":45,"column":12},"end":{"line":51,"column":14}},"39":{"start":{"line":55,"column":8},"end":{"line":78,"column":11}},"40":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"41":{"start":{"line":57,"column":16},"end":{"line":57,"column":55}},"42":{"start":{"line":59,"column":25},"end":{"line":59,"column":58}},"43":{"start":{"line":60,"column":35},"end":{"line":62,"column":14}},"44":{"start":{"line":63,"column":33},"end":{"line":65,"column":14}},"45":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"46":{"start":{"line":67,"column":16},"end":{"line":67,"column":50}},"47":{"start":{"line":69,"column":12},"end":{"line":77,"column":14}},"48":{"start":{"line":81,"column":8},"end":{"line":83,"column":11}},"49":{"start":{"line":82,"column":12},"end":{"line":82,"column":44}},"50":{"start":{"line":86,"column":8},"end":{"line":113,"column":11}},"51":{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},"52":{"start":{"line":88,"column":16},"end":{"line":88,"column":55}},"53":{"start":{"line":90,"column":25},"end":{"line":90,"column":58}},"54":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"55":{"start":{"line":92,"column":16},"end":{"line":92,"column":50}},"56":{"start":{"line":94,"column":12},"end":{"line":105,"column":13}},"57":{"start":{"line":95,"column":38},"end":{"line":97,"column":18}},"58":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"59":{"start":{"line":99,"column":20},"end":{"line":99,"column":60}},"60":{"start":{"line":101,"column":35},"end":{"line":101,"column":63}},"61":{"start":{"line":102,"column":16},"end":{"line":104,"column":17}},"62":{"start":{"line":103,"column":20},"end":{"line":103,"column":60}},"63":{"start":{"line":106,"column":12},"end":{"line":111,"column":13}},"64":{"start":{"line":107,"column":34},"end":{"line":107,"column":53}},"65":{"start":{"line":108,"column":16},"end":{"line":110,"column":17}},"66":{"start":{"line":109,"column":20},"end":{"line":109,"column":116}},"67":{"start":{"line":112,"column":12},"end":{"line":112,"column":43}},"68":{"start":{"line":116,"column":8},"end":{"line":138,"column":11}},"69":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"70":{"start":{"line":118,"column":16},"end":{"line":118,"column":55}},"71":{"start":{"line":120,"column":32},"end":{"line":120,"column":69}},"72":{"start":{"line":121,"column":12},"end":{"line":137,"column":13}},"73":{"start":{"line":122,"column":29},"end":{"line":122,"column":79}},"74":{"start":{"line":123,"column":16},"end":{"line":126,"column":17}},"75":{"start":{"line":124,"column":20},"end":{"line":124,"column":49}},"76":{"start":{"line":125,"column":20},"end":{"line":125,"column":29}},"77":{"start":{"line":127,"column":16},"end":{"line":127,"column":86}},"78":{"start":{"line":128,"column":16},"end":{"line":128,"column":87}},"79":{"start":{"line":129,"column":16},"end":{"line":129,"column":52}},"80":{"start":{"line":130,"column":16},"end":{"line":130,"column":43}},"81":{"start":{"line":131,"column":16},"end":{"line":131,"column":25}},"82":{"start":{"line":134,"column":16},"end":{"line":134,"column":45}},"83":{"start":{"line":135,"column":16},"end":{"line":135,"column":37}},"84":{"start":{"line":136,"column":16},"end":{"line":136,"column":47}},"85":{"start":{"line":141,"column":8},"end":{"line":167,"column":11}},"86":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"87":{"start":{"line":143,"column":16},"end":{"line":143,"column":59}},"88":{"start":{"line":145,"column":31},"end":{"line":145,"column":59}},"89":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"90":{"start":{"line":147,"column":16},"end":{"line":147,"column":56}},"91":{"start":{"line":149,"column":34},"end":{"line":149,"column":57}},"92":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"93":{"start":{"line":151,"column":16},"end":{"line":151,"column":111}},"94":{"start":{"line":153,"column":25},"end":{"line":153,"column":75}},"95":{"start":{"line":154,"column":12},"end":{"line":155,"column":50}},"96":{"start":{"line":155,"column":16},"end":{"line":155,"column":50}},"97":{"start":{"line":156,"column":36},"end":{"line":156,"column":93}},"98":{"start":{"line":157,"column":12},"end":{"line":158,"column":52}},"99":{"start":{"line":158,"column":16},"end":{"line":158,"column":52}},"100":{"start":{"line":159,"column":26},"end":{"line":159,"column":132}},"101":{"start":{"line":160,"column":12},"end":{"line":166,"column":14}},"102":{"start":{"line":170,"column":0},"end":{"line":170,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":21},"end":{"line":53,"column":5}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":47},"end":{"line":22,"column":48}},"loc":{"start":{"line":22,"column":60},"end":{"line":52,"column":9}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":20},"end":{"line":79,"column":5}},"line":54},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":47},"end":{"line":55,"column":48}},"loc":{"start":{"line":55,"column":60},"end":{"line":78,"column":9}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":18},"end":{"line":84,"column":5}},"line":80},"13":{"name":"(anonymous_13)","decl":{"start":{"line":81,"column":47},"end":{"line":81,"column":48}},"loc":{"start":{"line":81,"column":60},"end":{"line":83,"column":9}},"line":81},"14":{"name":"(anonymous_14)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":25},"end":{"line":114,"column":5}},"line":85},"15":{"name":"(anonymous_15)","decl":{"start":{"line":86,"column":47},"end":{"line":86,"column":48}},"loc":{"start":{"line":86,"column":60},"end":{"line":113,"column":9}},"line":86},"16":{"name":"(anonymous_16)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":19},"end":{"line":139,"column":5}},"line":115},"17":{"name":"(anonymous_17)","decl":{"start":{"line":116,"column":47},"end":{"line":116,"column":48}},"loc":{"start":{"line":116,"column":60},"end":{"line":138,"column":9}},"line":116},"18":{"name":"(anonymous_18)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":38},"end":{"line":168,"column":5}},"line":140},"19":{"name":"(anonymous_19)","decl":{"start":{"line":141,"column":47},"end":{"line":141,"column":48}},"loc":{"start":{"line":141,"column":60},"end":{"line":167,"column":9}},"line":141}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},{"start":{},"end":{}}],"line":23},"9":{"loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":59}},"type":"binary-expr","locations":[{"start":{"line":23,"column":16},"end":{"line":23,"column":27}},{"start":{"line":23,"column":31},"end":{"line":23,"column":45}},{"start":{"line":23,"column":49},"end":{"line":23,"column":59}}],"line":23},"10":{"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},{"start":{},"end":{}}],"line":27},"11":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{},"end":{}}],"line":31},"12":{"loc":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},{"start":{},"end":{}}],"line":35},"13":{"loc":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},{"start":{},"end":{}}],"line":39},"14":{"loc":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},{"start":{},"end":{}}],"line":56},"15":{"loc":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},{"start":{},"end":{}}],"line":66},"16":{"loc":{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},{"start":{},"end":{}}],"line":87},"17":{"loc":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},{"start":{},"end":{}}],"line":91},"18":{"loc":{"start":{"line":94,"column":12},"end":{"line":105,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":105,"column":13}},{"start":{},"end":{}}],"line":94},"19":{"loc":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},{"start":{},"end":{}}],"line":98},"20":{"loc":{"start":{"line":98,"column":20},"end":{"line":98,"column":60}},"type":"binary-expr","locations":[{"start":{"line":98,"column":20},"end":{"line":98,"column":33}},{"start":{"line":98,"column":37},"end":{"line":98,"column":60}}],"line":98},"21":{"loc":{"start":{"line":102,"column":16},"end":{"line":104,"column":17}},"type":"if","locations":[{"start":{"line":102,"column":16},"end":{"line":104,"column":17}},{"start":{},"end":{}}],"line":102},"22":{"loc":{"start":{"line":106,"column":12},"end":{"line":111,"column":13}},"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":111,"column":13}},{"start":{},"end":{}}],"line":106},"23":{"loc":{"start":{"line":108,"column":16},"end":{"line":110,"column":17}},"type":"if","locations":[{"start":{"line":108,"column":16},"end":{"line":110,"column":17}},{"start":{},"end":{}}],"line":108},"24":{"loc":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},{"start":{},"end":{}}],"line":117},"25":{"loc":{"start":{"line":123,"column":16},"end":{"line":126,"column":17}},"type":"if","locations":[{"start":{"line":123,"column":16},"end":{"line":126,"column":17}},{"start":{},"end":{}}],"line":123},"26":{"loc":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},{"start":{},"end":{}}],"line":142},"27":{"loc":{"start":{"line":142,"column":16},"end":{"line":142,"column":35}},"type":"binary-expr","locations":[{"start":{"line":142,"column":16},"end":{"line":142,"column":22}},{"start":{"line":142,"column":26},"end":{"line":142,"column":35}}],"line":142},"28":{"loc":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},{"start":{},"end":{}}],"line":146},"29":{"loc":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},{"start":{},"end":{}}],"line":150},"30":{"loc":{"start":{"line":154,"column":12},"end":{"line":155,"column":50}},"type":"if","locations":[{"start":{"line":154,"column":12},"end":{"line":155,"column":50}},{"start":{},"end":{}}],"line":154},"31":{"loc":{"start":{"line":157,"column":12},"end":{"line":158,"column":52}},"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":158,"column":52}},{"start":{},"end":{}}],"line":157}},"s":{"0":1,"1":58,"2":0,"3":30,"4":58,"5":58,"6":3,"7":0,"8":0,"9":0,"10":75,"11":30,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":13,"21":13,"22":3,"23":10,"24":10,"25":1,"26":9,"27":9,"28":1,"29":8,"30":8,"31":0,"32":8,"33":8,"34":0,"35":8,"36":8,"37":8,"38":8,"39":6,"40":6,"41":3,"42":3,"43":3,"44":3,"45":3,"46":1,"47":2,"48":1,"49":1,"50":2,"51":2,"52":1,"53":1,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":1,"66":0,"67":1,"68":4,"69":4,"70":0,"71":4,"72":4,"73":4,"74":4,"75":2,"76":2,"77":2,"78":2,"79":2,"80":2,"81":2,"82":0,"83":0,"84":0,"85":4,"86":4,"87":0,"88":4,"89":4,"90":1,"91":3,"92":3,"93":0,"94":3,"95":3,"96":1,"97":2,"98":2,"99":1,"100":1,"101":1,"102":1},"f":{"0":30,"1":58,"2":0,"3":30,"4":58,"5":0,"6":75,"7":3,"8":13,"9":13,"10":6,"11":6,"12":1,"13":1,"14":2,"15":2,"16":4,"17":4,"18":4,"19":4},"b":{"0":[1,1,1],"1":[58,0],"2":[30,30],"3":[17,58],"4":[30,30],"5":[1,1,1],"6":[1,2],"7":[3,3],"8":[3,10],"9":[13,13,10],"10":[1,9],"11":[1,8],"12":[0,8],"13":[0,8],"14":[3,3],"15":[1,2],"16":[1,1],"17":[0,1],"18":[0,1],"19":[0,0],"20":[0,0],"21":[0,0],"22":[1,0],"23":[0,1],"24":[0,4],"25":[2,2],"26":[0,4],"27":[4,4],"28":[1,3],"29":[0,3],"30":[1,2],"31":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/userService.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/userService.ts"],"names":[],"mappings":"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","sourcesContent":["import User, { UserCreationAttributes } from \"../models/User\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport { validate as validateUUID } from \"uuid\";\nimport { Exercise, Workout, sequelize } from \"../models/index\";\n\nclass UserService {\n  async createUser(data: UserCreationAttributes) {\n    if (!data.email || !data.password || !data.name) {\n      throw new Error(\"All fields are required\");\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(data.email)) {\n      throw new Error(\"Invalid email format\");\n    }\n\n    const passwordRegex = /^(?=.*[A-Za-z]).{8,}$/;\n    if (!passwordRegex.test(data.password)) {\n      throw new Error(\n        \"Password must be at least 8 characters long and include at least one letter\"\n      );\n    }\n\n    const nameRegex = /^[a-zA-Z ]{2,30}$/;\n    if (!nameRegex.test(data.name)) {\n      throw new Error(\n        \"Name must be between 2 and 30 characters and contain only letters and spaces\"\n      );\n    }\n\n    const existingUser = await User.findOne({ where: { email: data.email } });\n\n    if (existingUser) {\n      throw new Error(\"Email already exists\");\n    }\n\n    const hashedPassword = await bcrypt.hash(data.password, 10);\n    const user = await User.create({\n      ...data,\n      password: hashedPassword,\n    });\n    const token = jwt.sign(\n      { id: user.id, email: user.email, name: user.name, role: user.role },\n      process.env.JWT_SECRET as string,\n      { expiresIn: \"1h\" }\n    );\n\n    return {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      role: user.role,\n      token,\n    };\n  }\n\n  async getUserById(id: string) {\n    \n    if (!validateUUID(id)) {\n      throw new Error(\"Invalid UUID format\");\n    }\n\n    const user = await User.findByPk(id);\n\n    const exercisesCount = await Exercise.count({\n      where: { userId: id },\n    });\n\n    const workoutCount = await Workout.count({\n      where: { userId: id },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    return {\n      id,\n      name: user.name,\n      email: user.email,\n      exercisesCount,\n      workoutCount,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt,\n    };\n  }\n\n  async getAllUsers() {\n    return User.findAll();\n  }\n\n  async updateUser(id: string, data: any) {\n    if (!validateUUID(id)) {\n      throw new Error(\"Invalid UUID format\");\n    }\n\n    const user = await User.findByPk(id);\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    if (data.email !== undefined) {\n      const isEmailExists = await User.findOne({\n        where: { email: data.email },\n      });\n\n      if (isEmailExists && isEmailExists.id !== id) {\n        throw new Error(\"Email already exists\");\n      }\n\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n      if (!emailRegex.test(data.email)) {\n        throw new Error(\"Invalid email format\");\n      }\n    }\n\n    if (data.name !== undefined) {\n      const nameRegex = /^[a-zA-Z ]{2,30}$/;\n\n      if (!nameRegex.test(data.name)) {\n        throw new Error(\n          \"Name must be between 2 and 30 characters and contain only letters and spaces\"\n        );\n      }\n    }\n\n    return await user.update(data);\n  }\n\n  async deleteUser(id: string) {\n    if (!validateUUID(id)) {\n      throw new Error(\"Invalid UUID format\");\n    }\n    const transaction = await sequelize.transaction();\n    try {\n      const user = await User.findByPk(id, { transaction });\n\n      if (!user) {\n        await transaction.rollback();\n        return 0;\n      }\n\n      await Workout.destroy({ where: { userId: id }, transaction });\n      await Exercise.destroy({ where: { userId: id }, transaction });\n\n      await user.destroy({ transaction });\n      await transaction.commit();\n\n      return 1;\n    } catch (error: any) {\n      await transaction.rollback();\n      console.error(error);\n      throw new Error(error.message);\n    }\n  }\n\n  async authenticateUser(email: string, password: string) {\n    if (!email || !password) {\n      throw new Error(\"All fields are required\");\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      throw new Error(\"Invalid email format\");\n    }\n    const passwordRegex = /^(?=.*[A-Za-z]).{8,}$/;\n    if (!passwordRegex.test(password)) {\n      throw new Error(\n        \"Password must be at least 8 characters long and include at least one letter\"\n      );\n    }\n\n    const user = await User.findOne({ where: { email } });\n    if (!user) throw new Error(\"User not found\");\n\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n    if (!isPasswordValid) throw new Error(\"Invalid password\");\n\n    const token = jwt.sign(\n      { id: user.id, role: user.role },\n      process.env.JWT_SECRET as string,\n      { expiresIn: \"1h\" }\n    );\n\n    return {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      role: user.role,\n      token,\n    };\n  }\n}\n\nexport default new UserService();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4970403c591192af2750655caf5b568fefcc197e"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/authMiddleware.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/authMiddleware.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":63}},"4":{"start":{"line":7,"column":23},"end":{"line":23,"column":1}},"5":{"start":{"line":9,"column":24},"end":{"line":9,"column":41}},"6":{"start":{"line":10,"column":24},"end":{"line":10,"column":121}},"7":{"start":{"line":11,"column":18},"end":{"line":11,"column":44}},"8":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":71}},"10":{"start":{"line":15,"column":4},"end":{"line":22,"column":5}},"11":{"start":{"line":16,"column":24},"end":{"line":16,"column":84}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":15}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":64}},"15":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":23},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":43},"end":{"line":23,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":121}},"type":"cond-expr","locations":[{"start":{"line":10,"column":87},"end":{"line":10,"column":93}},{"start":{"line":10,"column":96},"end":{"line":10,"column":121}}],"line":10},"4":{"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":84}},"type":"binary-expr","locations":[{"start":{"line":10,"column":24},"end":{"line":10,"column":67}},{"start":{"line":10,"column":71},"end":{"line":10,"column":84}}],"line":10},"5":{"loc":{"start":{"line":11,"column":18},"end":{"line":11,"column":44}},"type":"binary-expr","locations":[{"start":{"line":11,"column":18},"end":{"line":11,"column":29}},{"start":{"line":11,"column":33},"end":{"line":11,"column":44}}],"line":11},"6":{"loc":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},{"start":{},"end":{}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":35,"6":35,"7":35,"8":35,"9":1,"10":34,"11":34,"12":33,"13":33,"14":1,"15":1},"f":{"0":1,"1":35},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,34],"4":[35,35],"5":[35,35],"6":[1,34]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/authMiddleware.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/authMiddleware.ts"],"names":[],"mappings":";;;;;AACA,gEAA+B;AAM/B,MAAM,cAAc,GAAG,CACrB,GAAkB,EAClB,GAAa,EACb,IAAkB,EAClB,EAAE;;IACF,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;IACtC,MAAM,WAAW,GAAG,MAAA,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,0CAAE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAExE,MAAM,KAAK,GAAG,WAAW,IAAI,WAAW,CAAC;IAEzC,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAoB,CAAC,CAAC;QACpE,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC;QACnB,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;IAC1D,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,cAAc,CAAC","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport jwt from \"jsonwebtoken\";\n\ninterface CustomRequest extends Request {\n  user?: string | jwt.JwtPayload;\n}\n\nconst authMiddleware = (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  const cookieToken = req.cookies.token;\n  const headerToken = req.header(\"Authorization\")?.replace(\"Bearer \", \"\");\n\n  const token = cookieToken || headerToken;\n\n  if (!token) {\n    return res.status(401).json({ message: \"Token not provided\" });\n  }\n\n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET as string);\n    req.user = decoded;\n    next();\n  } catch (err) {\n    return res.status(401).json({ error: \"Invalid token\" });\n  }\n};\n\nexport default authMiddleware;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4c419dc6c8baef33556d392611d202cea12408c4"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/workoutRoutes.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/workoutRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":28},"end":{"line":7,"column":88}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":60}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":81}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":38}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":110}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":99}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":100}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":63}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":104}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":140}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":131}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":134}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/workoutRoutes.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/workoutRoutes.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,yFAAiE;AACjE,6DAA0D;AAC1D,kFAA0D;AAE1D,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,IAAI,CACT,8BAA8B,EAC9B,wBAAc,EACd,2BAAiB,CAAC,UAAU,CAC7B,CAAC;AACF,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,wBAAc,EAAE,2BAAiB,CAAC,aAAa,CAAC,CAAC;AAE/E,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,wBAAc,EAAE,2BAAiB,CAAC,cAAc,CAAC,CAAC;AAChF,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,2BAAiB,CAAC,cAAc,CAAC,CAAC;AACrD,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,2BAAY,EAAE,2BAAiB,CAAC,cAAc,CAAC,CAAC;AAC/E,MAAM,CAAC,GAAG,CACR,uBAAuB,EACvB,2BAAY,EACZ,wBAAc,EACd,2BAAiB,CAAC,mBAAmB,CACtC,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,oBAAoB,EACpB,2BAAY,EACZ,wBAAc,EACd,2BAAiB,CAAC,aAAa,CAChC,CAAC;AACF,MAAM,CAAC,MAAM,CACX,oBAAoB,EACpB,2BAAY,EACZ,wBAAc,EACd,2BAAiB,CAAC,aAAa,CAChC,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport WorkoutController from \"../controllers/workoutController\";\nimport { validateUUID } from \"../middleware/validateUUID\";\nimport authMiddleware from \"../middleware/authMiddleware\";\n\nconst router = Router();\n\nrouter.post(\n  \"/addWorkout/:id/user/:userId\",\n  authMiddleware,\n  WorkoutController.addWorkout\n);\nrouter.post(\"/createWorkout\", authMiddleware, WorkoutController.createWorkout);\n\nrouter.get(\"/isWorkoutExist\", authMiddleware, WorkoutController.isWorkoutExist);\nrouter.get(\"/all\", WorkoutController.getAllWorkouts);\nrouter.get(\"/WorkoutById/:id\", validateUUID, WorkoutController.getWorkoutById);\nrouter.get(\n  \"/WorkoutsByUserId/:id\",\n  validateUUID,\n  authMiddleware,\n  WorkoutController.getWorkoutsByUserId\n);\n\nrouter.put(\n  \"/updateWorkout/:id\",\n  validateUUID,\n  authMiddleware,\n  WorkoutController.updateWorkout\n);\nrouter.delete(\n  \"/deleteWorkout/:id\",\n  validateUUID,\n  authMiddleware,\n  WorkoutController.deleteWorkout\n);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e8590f3ec1c412ea6f01cd3b0858dca43d62ee2c"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/workoutController.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/workoutController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":25},"end":{"line":15,"column":79}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"17":{"start":{"line":19,"column":8},"end":{"line":34,"column":11}},"18":{"start":{"line":20,"column":42},"end":{"line":20,"column":51}},"19":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"20":{"start":{"line":22,"column":16},"end":{"line":22,"column":80}},"21":{"start":{"line":24,"column":12},"end":{"line":33,"column":13}},"22":{"start":{"line":25,"column":31},"end":{"line":25,"column":95}},"23":{"start":{"line":26,"column":16},"end":{"line":28,"column":17}},"24":{"start":{"line":27,"column":20},"end":{"line":27,"column":82}},"25":{"start":{"line":29,"column":16},"end":{"line":29,"column":52}},"26":{"start":{"line":32,"column":16},"end":{"line":32,"column":72}},"27":{"start":{"line":37,"column":8},"end":{"line":50,"column":11}},"28":{"start":{"line":38,"column":12},"end":{"line":49,"column":13}},"29":{"start":{"line":39,"column":39},"end":{"line":39,"column":49}},"30":{"start":{"line":40,"column":16},"end":{"line":42,"column":17}},"31":{"start":{"line":41,"column":20},"end":{"line":41,"column":84}},"32":{"start":{"line":43,"column":32},"end":{"line":43,"column":85}},"33":{"start":{"line":44,"column":16},"end":{"line":44,"column":53}},"34":{"start":{"line":47,"column":16},"end":{"line":47,"column":69}},"35":{"start":{"line":48,"column":16},"end":{"line":48,"column":72}},"36":{"start":{"line":53,"column":8},"end":{"line":70,"column":11}},"37":{"start":{"line":54,"column":35},"end":{"line":54,"column":45}},"38":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"39":{"start":{"line":56,"column":16},"end":{"line":56,"column":76}},"40":{"start":{"line":58,"column":25},"end":{"line":58,"column":58}},"41":{"start":{"line":59,"column":26},"end":{"line":59,"column":61}},"42":{"start":{"line":60,"column":12},"end":{"line":69,"column":13}},"43":{"start":{"line":61,"column":31},"end":{"line":61,"column":102}},"44":{"start":{"line":62,"column":16},"end":{"line":62,"column":52}},"45":{"start":{"line":65,"column":16},"end":{"line":65,"column":78}},"46":{"start":{"line":66,"column":16},"end":{"line":68,"column":87}},"47":{"start":{"line":73,"column":8},"end":{"line":90,"column":11}},"48":{"start":{"line":74,"column":12},"end":{"line":89,"column":13}},"49":{"start":{"line":75,"column":99},"end":{"line":75,"column":107}},"50":{"start":{"line":76,"column":32},"end":{"line":83,"column":18}},"51":{"start":{"line":84,"column":16},"end":{"line":84,"column":53}},"52":{"start":{"line":87,"column":16},"end":{"line":87,"column":72}},"53":{"start":{"line":88,"column":16},"end":{"line":88,"column":72}},"54":{"start":{"line":93,"column":8},"end":{"line":108,"column":11}},"55":{"start":{"line":94,"column":12},"end":{"line":107,"column":13}},"56":{"start":{"line":95,"column":31},"end":{"line":95,"column":41}},"57":{"start":{"line":96,"column":16},"end":{"line":98,"column":17}},"58":{"start":{"line":97,"column":20},"end":{"line":97,"column":84}},"59":{"start":{"line":99,"column":32},"end":{"line":99,"column":81}},"60":{"start":{"line":100,"column":16},"end":{"line":102,"column":17}},"61":{"start":{"line":101,"column":20},"end":{"line":101,"column":82}},"62":{"start":{"line":103,"column":16},"end":{"line":103,"column":53}},"63":{"start":{"line":106,"column":16},"end":{"line":106,"column":72}},"64":{"start":{"line":111,"column":8},"end":{"line":124,"column":11}},"65":{"start":{"line":112,"column":12},"end":{"line":123,"column":13}},"66":{"start":{"line":113,"column":29},"end":{"line":113,"column":62}},"67":{"start":{"line":114,"column":30},"end":{"line":114,"column":65}},"68":{"start":{"line":115,"column":31},"end":{"line":115,"column":89}},"69":{"start":{"line":116,"column":16},"end":{"line":116,"column":52}},"70":{"start":{"line":119,"column":16},"end":{"line":119,"column":73}},"71":{"start":{"line":120,"column":16},"end":{"line":122,"column":87}},"72":{"start":{"line":127,"column":8},"end":{"line":153,"column":11}},"73":{"start":{"line":128,"column":12},"end":{"line":152,"column":13}},"74":{"start":{"line":129,"column":31},"end":{"line":129,"column":41}},"75":{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},"76":{"start":{"line":131,"column":20},"end":{"line":131,"column":84}},"77":{"start":{"line":133,"column":67},"end":{"line":133,"column":75}},"78":{"start":{"line":134,"column":32},"end":{"line":139,"column":18}},"79":{"start":{"line":140,"column":16},"end":{"line":142,"column":17}},"80":{"start":{"line":141,"column":20},"end":{"line":141,"column":82}},"81":{"start":{"line":143,"column":16},"end":{"line":143,"column":53}},"82":{"start":{"line":146,"column":16},"end":{"line":148,"column":17}},"83":{"start":{"line":147,"column":20},"end":{"line":147,"column":48}},"84":{"start":{"line":149,"column":16},"end":{"line":151,"column":89}},"85":{"start":{"line":156,"column":8},"end":{"line":173,"column":11}},"86":{"start":{"line":157,"column":12},"end":{"line":172,"column":13}},"87":{"start":{"line":158,"column":31},"end":{"line":158,"column":41}},"88":{"start":{"line":159,"column":16},"end":{"line":161,"column":17}},"89":{"start":{"line":160,"column":20},"end":{"line":160,"column":84}},"90":{"start":{"line":162,"column":31},"end":{"line":162,"column":79}},"91":{"start":{"line":163,"column":16},"end":{"line":165,"column":17}},"92":{"start":{"line":164,"column":20},"end":{"line":164,"column":82}},"93":{"start":{"line":166,"column":16},"end":{"line":166,"column":46}},"94":{"start":{"line":169,"column":16},"end":{"line":171,"column":89}},"95":{"start":{"line":176,"column":0},"end":{"line":176,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":29},"end":{"line":35,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":34,"column":9}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":25},"end":{"line":51,"column":5}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":37,"column":47},"end":{"line":37,"column":48}},"loc":{"start":{"line":37,"column":60},"end":{"line":50,"column":9}},"line":37},"12":{"name":"(anonymous_12)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":34},"end":{"line":71,"column":5}},"line":52},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":47},"end":{"line":53,"column":48}},"loc":{"start":{"line":53,"column":60},"end":{"line":70,"column":9}},"line":53},"14":{"name":"(anonymous_14)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":28},"end":{"line":91,"column":5}},"line":72},"15":{"name":"(anonymous_15)","decl":{"start":{"line":73,"column":47},"end":{"line":73,"column":48}},"loc":{"start":{"line":73,"column":60},"end":{"line":90,"column":9}},"line":73},"16":{"name":"(anonymous_16)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":29},"end":{"line":109,"column":5}},"line":92},"17":{"name":"(anonymous_17)","decl":{"start":{"line":93,"column":47},"end":{"line":93,"column":48}},"loc":{"start":{"line":93,"column":60},"end":{"line":108,"column":9}},"line":93},"18":{"name":"(anonymous_18)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":29},"end":{"line":125,"column":5}},"line":110},"19":{"name":"(anonymous_19)","decl":{"start":{"line":111,"column":47},"end":{"line":111,"column":48}},"loc":{"start":{"line":111,"column":60},"end":{"line":124,"column":9}},"line":111},"20":{"name":"(anonymous_20)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":28},"end":{"line":154,"column":5}},"line":126},"21":{"name":"(anonymous_21)","decl":{"start":{"line":127,"column":47},"end":{"line":127,"column":48}},"loc":{"start":{"line":127,"column":60},"end":{"line":153,"column":9}},"line":127},"22":{"name":"(anonymous_22)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":28},"end":{"line":174,"column":5}},"line":155},"23":{"name":"(anonymous_23)","decl":{"start":{"line":156,"column":47},"end":{"line":156,"column":48}},"loc":{"start":{"line":156,"column":60},"end":{"line":173,"column":9}},"line":156}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{},"end":{}}],"line":21},"9":{"loc":{"start":{"line":21,"column":16},"end":{"line":21,"column":81}},"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":48}},{"start":{"line":21,"column":52},"end":{"line":21,"column":81}}],"line":21},"10":{"loc":{"start":{"line":26,"column":16},"end":{"line":28,"column":17}},"type":"if","locations":[{"start":{"line":26,"column":16},"end":{"line":28,"column":17}},{"start":{},"end":{}}],"line":26},"11":{"loc":{"start":{"line":40,"column":16},"end":{"line":42,"column":17}},"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":42,"column":17}},{"start":{},"end":{}}],"line":40},"12":{"loc":{"start":{"line":40,"column":20},"end":{"line":40,"column":78}},"type":"binary-expr","locations":[{"start":{"line":40,"column":20},"end":{"line":40,"column":45}},{"start":{"line":40,"column":49},"end":{"line":40,"column":78}}],"line":40},"13":{"loc":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},{"start":{},"end":{}}],"line":55},"14":{"loc":{"start":{"line":58,"column":25},"end":{"line":58,"column":58}},"type":"binary-expr","locations":[{"start":{"line":58,"column":25},"end":{"line":58,"column":53}},{"start":{"line":58,"column":57},"end":{"line":58,"column":58}}],"line":58},"15":{"loc":{"start":{"line":59,"column":26},"end":{"line":59,"column":61}},"type":"binary-expr","locations":[{"start":{"line":59,"column":26},"end":{"line":59,"column":55}},{"start":{"line":59,"column":59},"end":{"line":59,"column":61}}],"line":59},"16":{"loc":{"start":{"line":75,"column":32},"end":{"line":75,"column":53}},"type":"default-arg","locations":[{"start":{"line":75,"column":37},"end":{"line":75,"column":53}}],"line":75},"17":{"loc":{"start":{"line":96,"column":16},"end":{"line":98,"column":17}},"type":"if","locations":[{"start":{"line":96,"column":16},"end":{"line":98,"column":17}},{"start":{},"end":{}}],"line":96},"18":{"loc":{"start":{"line":100,"column":16},"end":{"line":102,"column":17}},"type":"if","locations":[{"start":{"line":100,"column":16},"end":{"line":102,"column":17}},{"start":{},"end":{}}],"line":100},"19":{"loc":{"start":{"line":113,"column":29},"end":{"line":113,"column":62}},"type":"binary-expr","locations":[{"start":{"line":113,"column":29},"end":{"line":113,"column":57}},{"start":{"line":113,"column":61},"end":{"line":113,"column":62}}],"line":113},"20":{"loc":{"start":{"line":114,"column":30},"end":{"line":114,"column":65}},"type":"binary-expr","locations":[{"start":{"line":114,"column":30},"end":{"line":114,"column":59}},{"start":{"line":114,"column":63},"end":{"line":114,"column":65}}],"line":114},"21":{"loc":{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},{"start":{},"end":{}}],"line":130},"22":{"loc":{"start":{"line":140,"column":16},"end":{"line":142,"column":17}},"type":"if","locations":[{"start":{"line":140,"column":16},"end":{"line":142,"column":17}},{"start":{},"end":{}}],"line":140},"23":{"loc":{"start":{"line":146,"column":16},"end":{"line":148,"column":17}},"type":"if","locations":[{"start":{"line":146,"column":16},"end":{"line":148,"column":17}},{"start":{},"end":{}}],"line":146},"24":{"loc":{"start":{"line":159,"column":16},"end":{"line":161,"column":17}},"type":"if","locations":[{"start":{"line":159,"column":16},"end":{"line":161,"column":17}},{"start":{},"end":{}}],"line":159},"25":{"loc":{"start":{"line":163,"column":16},"end":{"line":165,"column":17}},"type":"if","locations":[{"start":{"line":163,"column":16},"end":{"line":165,"column":17}},{"start":{},"end":{}}],"line":163}},"s":{"0":1,"1":14,"2":0,"3":15,"4":13,"5":13,"6":0,"7":1,"8":1,"9":0,"10":29,"11":15,"12":1,"13":1,"14":1,"15":1,"16":1,"17":2,"18":2,"19":2,"20":0,"21":2,"22":2,"23":1,"24":0,"25":1,"26":1,"27":2,"28":2,"29":2,"30":2,"31":1,"32":1,"33":1,"34":0,"35":0,"36":1,"37":1,"38":1,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":0,"47":4,"48":4,"49":4,"50":4,"51":4,"52":0,"53":0,"54":2,"55":2,"56":2,"57":2,"58":0,"59":2,"60":2,"61":1,"62":1,"63":0,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":0,"71":0,"72":2,"73":2,"74":2,"75":2,"76":0,"77":2,"78":2,"79":2,"80":1,"81":1,"82":0,"83":0,"84":0,"85":1,"86":1,"87":1,"88":1,"89":0,"90":1,"91":1,"92":0,"93":1,"94":0,"95":1},"f":{"0":15,"1":14,"2":0,"3":15,"4":13,"5":1,"6":29,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1,"13":1,"14":4,"15":4,"16":2,"17":2,"18":1,"19":1,"20":2,"21":2,"22":1,"23":1},"b":{"0":[1,1,1],"1":[14,0],"2":[15,15],"3":[15,14],"4":[15,15],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,2],"9":[2,2],"10":[0,1],"11":[1,1],"12":[2,1],"13":[0,1],"14":[1,0],"15":[1,0],"16":[4],"17":[0,2],"18":[1,1],"19":[1,0],"20":[1,0],"21":[0,2],"22":[1,1],"23":[0,0],"24":[0,1],"25":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/workoutController.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/workoutController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport WorkoutService from \"../services/workoutService\";\nimport { v4 as uuidv4, validate as uuidValidate } from \"uuid\";\n\nclass WorkoutController {\n  public async isWorkoutExist(req: Request, res: Response): Promise<Response> {\n    const { workoutId, userId } = req.query;\n\n    if (!uuidValidate(workoutId as string) || !uuidValidate(userId as string)) {\n      return res.status(400).json({ message: \"Invalid UUID format\" });\n    }\n\n    try {\n      const exists = await WorkoutService.isWorkoutExist(\n        workoutId as string,\n        userId as string\n      );\n\n      if (!exists) {\n        return res.status(404).json({ message: \"Workout not found\" });\n      }\n\n      return res.status(200).json(exists);\n    } catch (error:any) {\n      return res.status(500).json({ message: error.message });\n    }\n  }\n  public async addWorkout(req: Request, res: Response): Promise<Response> {\n    try {\n      const { id, userId } = req.params;\n\n      if (!uuidValidate(id) || !uuidValidate(userId)) {\n        return res.status(400).json({ message: \"Invalid UUID format\" });\n      }\n\n      const workout = await WorkoutService.addWorkout(id, userId);\n\n      return res.status(200).json(workout);\n    } catch (error: any) {\n      console.error(\"Error in addWorkout:\", error.message);\n      return res.status(400).json({ message: error.message });\n    }\n  }\n\n  public async getWorkoutsByUserId(\n    req: Request,\n    res: Response\n  ): Promise<Response> {\n    const { id: userId } = req.params;\n\n    if (!uuidValidate(userId)) {\n      return res.status(400).json({ message: \"Invalid user ID\" });\n    }\n\n    const page = parseInt(req.query.page as string, 10) || 1;\n    const limit = parseInt(req.query.limit as string, 10) || 10;\n\n    try {\n      const result = await WorkoutService.getWorkoutsByUserId(\n        userId,\n        page,\n        limit\n      );\n\n      return res.status(200).json(result);\n    } catch (error: any) {\n      console.error(\"Error in getWorkoutsByUserId:\", error.message);\n      return res\n        .status(500)\n        .json({ message: \"Failed to get workouts\", error: error.message });\n    }\n  }\n\n  public async createWorkout(req: Request, res: Response): Promise<Response> {\n    try {\n      const {\n        userId,\n        id = uuidv4(),\n        duration,\n        description,\n        name,\n        createdBy,\n      } = req.body;\n\n      const workout = await WorkoutService.createWorkout({\n        userId,\n        id,\n        duration,\n        description,\n        name,\n        createdBy,\n      });\n\n      return res.status(201).json(workout);\n    } catch (error: any) {\n      console.error(\"Error in createWorkout:\", error.message);\n      return res.status(400).json({ message: error.message });\n    }\n  }\n\n  public async getWorkoutById(req: Request, res: Response): Promise<Response> {\n    try {\n      const { id } = req.params;\n\n      if (!uuidValidate(id)) {\n        return res.status(400).json({ message: \"Invalid UUID format\" });\n      }\n\n      const workout = await WorkoutService.getWorkoutById(id);\n\n      if (!workout) {\n        return res.status(404).json({ message: \"Workout not found\" });\n      }\n\n      return res.status(200).json(workout);\n    } catch (error: any) {\n      return res.status(500).json({ message: error.message });\n    }\n  }\n\n  public async getAllWorkouts(req: Request, res: Response): Promise<Response> {\n    try {\n      const page = parseInt(req.query.page as string, 10) || 1;\n      const limit = parseInt(req.query.limit as string, 10) || 10;\n\n      const result = await WorkoutService.getAllWorkouts(page, limit);\n      return res.status(200).json(result);\n    } catch (error: any) {\n      console.error(\"Error in getAllWorkouts:\", error.message);\n      return res\n        .status(500)\n        .json({ message: \"Failed to get workouts\", error: error.message });\n    }\n  }\n\n  public async updateWorkout(req: Request, res: Response): Promise<Response> {\n    try {\n      const { id } = req.params;\n\n      if (!uuidValidate(id)) {\n        return res.status(400).json({ message: \"Invalid UUID format\" });\n      }\n\n      const { duration, description, name, exercises } = req.body;\n\n      const workout = await WorkoutService.updateWorkout(id, {\n        duration,\n        description,\n        name,\n        exercises,\n      });\n\n      if (!workout) {\n        return res.status(404).json({ message: \"Workout not found\" });\n      }\n      return res.status(200).json(workout);\n    } catch (error: any) {\n      if (process.env.NODE_ENV === \"test\") {\n        console.log(\"sgsfgsfgsgsf\");\n      }\n      return res\n        .status(500)\n        .json({ message: \"Failed to update workout\", error: error.message });\n    }\n  }\n\n  public async deleteWorkout(req: Request, res: Response): Promise<Response> {\n    try {\n      const { id } = req.params;\n      if (!uuidValidate(id)) {\n        return res.status(400).json({ message: \"Invalid UUID format\" });\n      }\n      const result = await WorkoutService.deleteWorkout(id);\n      if (result === 0) {\n        return res.status(404).json({ message: \"Workout not found\" });\n      }\n      return res.status(204).send();\n    } catch (error: any) {\n      return res\n        .status(400)\n        .json({ message: \"Failed to delete workout\", error: error.message });\n    }\n  }\n}\n\nexport default new WorkoutController();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9b17b79980fd11df7442722dbf5b7274c0d5d5ff"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/workoutService.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/workoutService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":13},"end":{"line":21,"column":1}},"13":{"start":{"line":12,"column":12},"end":{"line":12,"column":14}},"14":{"start":{"line":13,"column":4},"end":{"line":14,"column":20}},"15":{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},"16":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}},"17":{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},"18":{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},"19":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"20":{"start":{"line":16,"column":28},"end":{"line":16,"column":59}},"21":{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},"22":{"start":{"line":18,"column":16},"end":{"line":18,"column":34}},"23":{"start":{"line":20,"column":4},"end":{"line":20,"column":13}},"24":{"start":{"line":22,"column":22},"end":{"line":24,"column":1}},"25":{"start":{"line":23,"column":4},"end":{"line":23,"column":62}},"26":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"27":{"start":{"line":26,"column":16},"end":{"line":26,"column":42}},"28":{"start":{"line":27,"column":15},"end":{"line":27,"column":30}},"29":{"start":{"line":28,"column":15},"end":{"line":28,"column":30}},"30":{"start":{"line":29,"column":31},"end":{"line":29,"column":88}},"31":{"start":{"line":30,"column":20},"end":{"line":30,"column":40}},"32":{"start":{"line":33,"column":8},"end":{"line":55,"column":11}},"33":{"start":{"line":35,"column":12},"end":{"line":54,"column":13}},"34":{"start":{"line":36,"column":32},"end":{"line":36,"column":73}},"35":{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},"36":{"start":{"line":38,"column":20},"end":{"line":38,"column":57}},"37":{"start":{"line":40,"column":42},"end":{"line":40,"column":189}},"38":{"start":{"line":41,"column":38},"end":{"line":48,"column":18}},"39":{"start":{"line":49,"column":16},"end":{"line":49,"column":39}},"40":{"start":{"line":52,"column":16},"end":{"line":52,"column":79}},"41":{"start":{"line":53,"column":16},"end":{"line":53,"column":28}},"42":{"start":{"line":58,"column":8},"end":{"line":118,"column":11}},"43":{"start":{"line":60,"column":12},"end":{"line":117,"column":13}},"44":{"start":{"line":61,"column":32},"end":{"line":81,"column":18}},"45":{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},"46":{"start":{"line":83,"column":20},"end":{"line":83,"column":57}},"47":{"start":{"line":85,"column":42},"end":{"line":85,"column":189}},"48":{"start":{"line":86,"column":38},"end":{"line":93,"column":18}},"49":{"start":{"line":94,"column":16},"end":{"line":96,"column":17}},"50":{"start":{"line":95,"column":20},"end":{"line":95,"column":78}},"51":{"start":{"line":97,"column":35},"end":{"line":97,"column":179}},"52":{"start":{"line":98,"column":38},"end":{"line":100,"column":18}},"53":{"start":{"line":101,"column":34},"end":{"line":101,"column":60}},"54":{"start":{"line":102,"column":16},"end":{"line":111,"column":17}},"55":{"start":{"line":103,"column":20},"end":{"line":110,"column":21}},"56":{"start":{"line":104,"column":39},"end":{"line":104,"column":47}},"57":{"start":{"line":104,"column":64},"end":{"line":104,"column":88}},"58":{"start":{"line":105,"column":44},"end":{"line":105,"column":224}},"59":{"start":{"line":106,"column":24},"end":{"line":109,"column":27}},"60":{"start":{"line":112,"column":16},"end":{"line":112,"column":34}},"61":{"start":{"line":115,"column":16},"end":{"line":115,"column":70}},"62":{"start":{"line":116,"column":16},"end":{"line":116,"column":47}},"63":{"start":{"line":121,"column":8},"end":{"line":201,"column":11}},"64":{"start":{"line":122,"column":12},"end":{"line":200,"column":13}},"65":{"start":{"line":123,"column":16},"end":{"line":125,"column":17}},"66":{"start":{"line":124,"column":20},"end":{"line":124,"column":33}},"67":{"start":{"line":126,"column":31},"end":{"line":126,"column":49}},"68":{"start":{"line":127,"column":50},"end":{"line":155,"column":18}},"69":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"70":{"start":{"line":157,"column":20},"end":{"line":157,"column":58}},"71":{"start":{"line":159,"column":42},"end":{"line":189,"column":18}},"72":{"start":{"line":161,"column":40},"end":{"line":161,"column":56}},"73":{"start":{"line":162,"column":42},"end":{"line":162,"column":217}},"74":{"start":{"line":162,"column":145},"end":{"line":162,"column":177}},"75":{"start":{"line":163,"column":42},"end":{"line":163,"column":92}},"76":{"start":{"line":164,"column":20},"end":{"line":188,"column":22}},"77":{"start":{"line":171,"column":122},"end":{"line":174,"column":25}},"78":{"start":{"line":175,"column":124},"end":{"line":185,"column":25}},"79":{"start":{"line":190,"column":16},"end":{"line":195,"column":18}},"80":{"start":{"line":198,"column":16},"end":{"line":198,"column":79}},"81":{"start":{"line":199,"column":16},"end":{"line":199,"column":60}},"82":{"start":{"line":204,"column":8},"end":{"line":227,"column":11}},"83":{"start":{"line":206,"column":12},"end":{"line":208,"column":13}},"84":{"start":{"line":207,"column":16},"end":{"line":207,"column":55}},"85":{"start":{"line":209,"column":12},"end":{"line":226,"column":13}},"86":{"start":{"line":210,"column":27},"end":{"line":210,"column":43}},"87":{"start":{"line":211,"column":16},"end":{"line":213,"column":17}},"88":{"start":{"line":212,"column":20},"end":{"line":212,"column":59}},"89":{"start":{"line":214,"column":32},"end":{"line":220,"column":25}},"90":{"start":{"line":221,"column":16},"end":{"line":221,"column":31}},"91":{"start":{"line":224,"column":16},"end":{"line":224,"column":70}},"92":{"start":{"line":225,"column":16},"end":{"line":225,"column":47}},"93":{"start":{"line":230,"column":8},"end":{"line":315,"column":11}},"94":{"start":{"line":231,"column":12},"end":{"line":314,"column":13}},"95":{"start":{"line":232,"column":31},"end":{"line":232,"column":49}},"96":{"start":{"line":233,"column":50},"end":{"line":260,"column":18}},"97":{"start":{"line":261,"column":35},"end":{"line":261,"column":44}},"98":{"start":{"line":262,"column":39},"end":{"line":262,"column":41}},"99":{"start":{"line":263,"column":16},"end":{"line":271,"column":19}},"100":{"start":{"line":265,"column":40},"end":{"line":265,"column":56}},"101":{"start":{"line":266,"column":32},"end":{"line":266,"column":141}},"102":{"start":{"line":267,"column":20},"end":{"line":270,"column":21}},"103":{"start":{"line":268,"column":24},"end":{"line":268,"column":50}},"104":{"start":{"line":269,"column":24},"end":{"line":269,"column":53}},"105":{"start":{"line":272,"column":42},"end":{"line":303,"column":18}},"106":{"start":{"line":274,"column":40},"end":{"line":274,"column":56}},"107":{"start":{"line":275,"column":42},"end":{"line":275,"column":217}},"108":{"start":{"line":275,"column":145},"end":{"line":275,"column":177}},"109":{"start":{"line":276,"column":42},"end":{"line":276,"column":92}},"110":{"start":{"line":277,"column":20},"end":{"line":302,"column":22}},"111":{"start":{"line":284,"column":119},"end":{"line":288,"column":25}},"112":{"start":{"line":289,"column":124},"end":{"line":299,"column":25}},"113":{"start":{"line":304,"column":16},"end":{"line":309,"column":18}},"114":{"start":{"line":312,"column":16},"end":{"line":312,"column":72}},"115":{"start":{"line":313,"column":16},"end":{"line":313,"column":60}},"116":{"start":{"line":318,"column":8},"end":{"line":348,"column":11}},"117":{"start":{"line":320,"column":12},"end":{"line":347,"column":13}},"118":{"start":{"line":321,"column":32},"end":{"line":334,"column":18}},"119":{"start":{"line":335,"column":16},"end":{"line":337,"column":17}},"120":{"start":{"line":336,"column":20},"end":{"line":336,"column":32}},"121":{"start":{"line":338,"column":36},"end":{"line":338,"column":52}},"122":{"start":{"line":339,"column":38},"end":{"line":339,"column":213}},"123":{"start":{"line":339,"column":141},"end":{"line":339,"column":173}},"124":{"start":{"line":340,"column":38},"end":{"line":340,"column":88}},"125":{"start":{"line":341,"column":16},"end":{"line":341,"column":49}},"126":{"start":{"line":342,"column":16},"end":{"line":342,"column":31}},"127":{"start":{"line":345,"column":16},"end":{"line":345,"column":73}},"128":{"start":{"line":346,"column":16},"end":{"line":346,"column":53}},"129":{"start":{"line":351,"column":8},"end":{"line":369,"column":11}},"130":{"start":{"line":352,"column":12},"end":{"line":352,"column":34}},"131":{"start":{"line":353,"column":12},"end":{"line":368,"column":13}},"132":{"start":{"line":354,"column":16},"end":{"line":356,"column":17}},"133":{"start":{"line":355,"column":20},"end":{"line":355,"column":59}},"134":{"start":{"line":357,"column":16},"end":{"line":357,"column":90}},"135":{"start":{"line":358,"column":32},"end":{"line":358,"column":66}},"136":{"start":{"line":359,"column":16},"end":{"line":361,"column":17}},"137":{"start":{"line":360,"column":20},"end":{"line":360,"column":33}},"138":{"start":{"line":362,"column":16},"end":{"line":362,"column":43}},"139":{"start":{"line":363,"column":16},"end":{"line":363,"column":31}},"140":{"start":{"line":366,"column":16},"end":{"line":366,"column":70}},"141":{"start":{"line":367,"column":16},"end":{"line":367,"column":28}},"142":{"start":{"line":372,"column":8},"end":{"line":389,"column":11}},"143":{"start":{"line":373,"column":12},"end":{"line":388,"column":13}},"144":{"start":{"line":374,"column":16},"end":{"line":376,"column":17}},"145":{"start":{"line":375,"column":20},"end":{"line":375,"column":59}},"146":{"start":{"line":377,"column":16},"end":{"line":377,"column":70}},"147":{"start":{"line":378,"column":32},"end":{"line":378,"column":66}},"148":{"start":{"line":379,"column":16},"end":{"line":381,"column":17}},"149":{"start":{"line":380,"column":20},"end":{"line":380,"column":29}},"150":{"start":{"line":382,"column":16},"end":{"line":382,"column":40}},"151":{"start":{"line":383,"column":16},"end":{"line":383,"column":25}},"152":{"start":{"line":386,"column":16},"end":{"line":386,"column":70}},"153":{"start":{"line":387,"column":16},"end":{"line":387,"column":60}},"154":{"start":{"line":392,"column":0},"end":{"line":392,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":38},"end":{"line":11,"column":39}},"loc":{"start":{"line":11,"column":54},"end":{"line":21,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":56},"end":{"line":22,"column":57}},"loc":{"start":{"line":22,"column":71},"end":{"line":24,"column":1}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":38},"end":{"line":56,"column":5}},"line":32},"10":{"name":"(anonymous_10)","decl":{"start":{"line":33,"column":47},"end":{"line":33,"column":48}},"loc":{"start":{"line":33,"column":60},"end":{"line":55,"column":9}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":34},"end":{"line":119,"column":5}},"line":57},"12":{"name":"(anonymous_12)","decl":{"start":{"line":58,"column":47},"end":{"line":58,"column":48}},"loc":{"start":{"line":58,"column":60},"end":{"line":118,"column":9}},"line":58},"13":{"name":"(anonymous_13)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":34},"end":{"line":202,"column":5}},"line":120},"14":{"name":"(anonymous_14)","decl":{"start":{"line":121,"column":50},"end":{"line":121,"column":51}},"loc":{"start":{"line":121,"column":91},"end":{"line":201,"column":9}},"line":121},"15":{"name":"(anonymous_15)","decl":{"start":{"line":159,"column":55},"end":{"line":159,"column":56}},"loc":{"start":{"line":159,"column":68},"end":{"line":189,"column":17}},"line":159},"16":{"name":"(anonymous_16)","decl":{"start":{"line":162,"column":124},"end":{"line":162,"column":125}},"loc":{"start":{"line":162,"column":145},"end":{"line":162,"column":177}},"line":162},"17":{"name":"(anonymous_17)","decl":{"start":{"line":171,"column":108},"end":{"line":171,"column":109}},"loc":{"start":{"line":171,"column":122},"end":{"line":174,"column":25}},"line":171},"18":{"name":"(anonymous_18)","decl":{"start":{"line":175,"column":109},"end":{"line":175,"column":110}},"loc":{"start":{"line":175,"column":124},"end":{"line":185,"column":25}},"line":175},"19":{"name":"(anonymous_19)","decl":{"start":{"line":203,"column":4},"end":{"line":203,"column":5}},"loc":{"start":{"line":203,"column":31},"end":{"line":228,"column":5}},"line":203},"20":{"name":"(anonymous_20)","decl":{"start":{"line":204,"column":47},"end":{"line":204,"column":48}},"loc":{"start":{"line":204,"column":60},"end":{"line":227,"column":9}},"line":204},"21":{"name":"(anonymous_21)","decl":{"start":{"line":229,"column":4},"end":{"line":229,"column":5}},"loc":{"start":{"line":229,"column":21},"end":{"line":316,"column":5}},"line":229},"22":{"name":"(anonymous_22)","decl":{"start":{"line":230,"column":50},"end":{"line":230,"column":51}},"loc":{"start":{"line":230,"column":83},"end":{"line":315,"column":9}},"line":230},"23":{"name":"(anonymous_23)","decl":{"start":{"line":263,"column":33},"end":{"line":263,"column":34}},"loc":{"start":{"line":263,"column":46},"end":{"line":271,"column":17}},"line":263},"24":{"name":"(anonymous_24)","decl":{"start":{"line":272,"column":61},"end":{"line":272,"column":62}},"loc":{"start":{"line":272,"column":74},"end":{"line":303,"column":17}},"line":272},"25":{"name":"(anonymous_25)","decl":{"start":{"line":275,"column":124},"end":{"line":275,"column":125}},"loc":{"start":{"line":275,"column":145},"end":{"line":275,"column":177}},"line":275},"26":{"name":"(anonymous_26)","decl":{"start":{"line":284,"column":108},"end":{"line":284,"column":109}},"loc":{"start":{"line":284,"column":119},"end":{"line":288,"column":25}},"line":284},"27":{"name":"(anonymous_27)","decl":{"start":{"line":289,"column":109},"end":{"line":289,"column":110}},"loc":{"start":{"line":289,"column":124},"end":{"line":299,"column":25}},"line":289},"28":{"name":"(anonymous_28)","decl":{"start":{"line":317,"column":4},"end":{"line":317,"column":5}},"loc":{"start":{"line":317,"column":23},"end":{"line":349,"column":5}},"line":317},"29":{"name":"(anonymous_29)","decl":{"start":{"line":318,"column":47},"end":{"line":318,"column":48}},"loc":{"start":{"line":318,"column":60},"end":{"line":348,"column":9}},"line":318},"30":{"name":"(anonymous_30)","decl":{"start":{"line":339,"column":120},"end":{"line":339,"column":121}},"loc":{"start":{"line":339,"column":141},"end":{"line":339,"column":173}},"line":339},"31":{"name":"(anonymous_31)","decl":{"start":{"line":350,"column":4},"end":{"line":350,"column":5}},"loc":{"start":{"line":350,"column":28},"end":{"line":370,"column":5}},"line":350},"32":{"name":"(anonymous_32)","decl":{"start":{"line":351,"column":47},"end":{"line":351,"column":48}},"loc":{"start":{"line":351,"column":60},"end":{"line":369,"column":9}},"line":351},"33":{"name":"(anonymous_33)","decl":{"start":{"line":371,"column":4},"end":{"line":371,"column":5}},"loc":{"start":{"line":371,"column":22},"end":{"line":390,"column":5}},"line":371},"34":{"name":"(anonymous_34)","decl":{"start":{"line":372,"column":47},"end":{"line":372,"column":48}},"loc":{"start":{"line":372,"column":60},"end":{"line":389,"column":9}},"line":372}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":13},"end":{"line":21,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":14},"end":{"line":11,"column":18}},{"start":{"line":11,"column":22},"end":{"line":11,"column":33}},{"start":{"line":11,"column":38},"end":{"line":21,"column":1}}],"line":11},"6":{"loc":{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},"type":"if","locations":[{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},{"start":{},"end":{}}],"line":13},"7":{"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":87}},"type":"binary-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":67}},{"start":{"line":13,"column":71},"end":{"line":13,"column":87}}],"line":13},"8":{"loc":{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},{"start":{},"end":{}}],"line":15},"9":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":71}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":17}},{"start":{"line":15,"column":21},"end":{"line":15,"column":71}}],"line":15},"10":{"loc":{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},{"start":{},"end":{}}],"line":17},"11":{"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":90}},"type":"binary-expr","locations":[{"start":{"line":17,"column":16},"end":{"line":17,"column":35}},{"start":{"line":17,"column":39},"end":{"line":17,"column":90}}],"line":17},"12":{"loc":{"start":{"line":22,"column":22},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":51}},{"start":{"line":22,"column":56},"end":{"line":24,"column":1}}],"line":22},"13":{"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":61}},"type":"cond-expr","locations":[{"start":{"line":23,"column":37},"end":{"line":23,"column":40}},{"start":{"line":23,"column":43},"end":{"line":23,"column":61}}],"line":23},"14":{"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":33}},"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":15}},{"start":{"line":23,"column":19},"end":{"line":23,"column":33}}],"line":23},"15":{"loc":{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},{"start":{},"end":{}}],"line":37},"16":{"loc":{"start":{"line":40,"column":42},"end":{"line":40,"column":189}},"type":"binary-expr","locations":[{"start":{"line":40,"column":43},"end":{"line":40,"column":175}},{"start":{"line":40,"column":180},"end":{"line":40,"column":189}}],"line":40},"17":{"loc":{"start":{"line":40,"column":43},"end":{"line":40,"column":175}},"type":"cond-expr","locations":[{"start":{"line":40,"column":146},"end":{"line":40,"column":152}},{"start":{"line":40,"column":155},"end":{"line":40,"column":175}}],"line":40},"18":{"loc":{"start":{"line":40,"column":43},"end":{"line":40,"column":143}},"type":"binary-expr","locations":[{"start":{"line":40,"column":43},"end":{"line":40,"column":126}},{"start":{"line":40,"column":130},"end":{"line":40,"column":143}}],"line":40},"19":{"loc":{"start":{"line":40,"column":49},"end":{"line":40,"column":116}},"type":"cond-expr","locations":[{"start":{"line":40,"column":102},"end":{"line":40,"column":108}},{"start":{"line":40,"column":111},"end":{"line":40,"column":116}}],"line":40},"20":{"loc":{"start":{"line":40,"column":49},"end":{"line":40,"column":99}},"type":"binary-expr","locations":[{"start":{"line":40,"column":49},"end":{"line":40,"column":82}},{"start":{"line":40,"column":86},"end":{"line":40,"column":99}}],"line":40},"21":{"loc":{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},{"start":{},"end":{}}],"line":82},"22":{"loc":{"start":{"line":85,"column":42},"end":{"line":85,"column":189}},"type":"binary-expr","locations":[{"start":{"line":85,"column":43},"end":{"line":85,"column":175}},{"start":{"line":85,"column":180},"end":{"line":85,"column":189}}],"line":85},"23":{"loc":{"start":{"line":85,"column":43},"end":{"line":85,"column":175}},"type":"cond-expr","locations":[{"start":{"line":85,"column":146},"end":{"line":85,"column":152}},{"start":{"line":85,"column":155},"end":{"line":85,"column":175}}],"line":85},"24":{"loc":{"start":{"line":85,"column":43},"end":{"line":85,"column":143}},"type":"binary-expr","locations":[{"start":{"line":85,"column":43},"end":{"line":85,"column":126}},{"start":{"line":85,"column":130},"end":{"line":85,"column":143}}],"line":85},"25":{"loc":{"start":{"line":85,"column":49},"end":{"line":85,"column":116}},"type":"cond-expr","locations":[{"start":{"line":85,"column":102},"end":{"line":85,"column":108}},{"start":{"line":85,"column":111},"end":{"line":85,"column":116}}],"line":85},"26":{"loc":{"start":{"line":85,"column":49},"end":{"line":85,"column":99}},"type":"binary-expr","locations":[{"start":{"line":85,"column":49},"end":{"line":85,"column":82}},{"start":{"line":85,"column":86},"end":{"line":85,"column":99}}],"line":85},"27":{"loc":{"start":{"line":94,"column":16},"end":{"line":96,"column":17}},"type":"if","locations":[{"start":{"line":94,"column":16},"end":{"line":96,"column":17}},{"start":{},"end":{}}],"line":94},"28":{"loc":{"start":{"line":102,"column":16},"end":{"line":111,"column":17}},"type":"if","locations":[{"start":{"line":102,"column":16},"end":{"line":111,"column":17}},{"start":{},"end":{}}],"line":102},"29":{"loc":{"start":{"line":102,"column":20},"end":{"line":102,"column":46}},"type":"binary-expr","locations":[{"start":{"line":102,"column":20},"end":{"line":102,"column":33}},{"start":{"line":102,"column":37},"end":{"line":102,"column":46}}],"line":102},"30":{"loc":{"start":{"line":121,"column":69},"end":{"line":121,"column":77}},"type":"default-arg","locations":[{"start":{"line":121,"column":76},"end":{"line":121,"column":77}}],"line":121},"31":{"loc":{"start":{"line":121,"column":79},"end":{"line":121,"column":89}},"type":"default-arg","locations":[{"start":{"line":121,"column":87},"end":{"line":121,"column":89}}],"line":121},"32":{"loc":{"start":{"line":123,"column":16},"end":{"line":125,"column":17}},"type":"if","locations":[{"start":{"line":123,"column":16},"end":{"line":125,"column":17}},{"start":{},"end":{}}],"line":123},"33":{"loc":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},{"start":{},"end":{}}],"line":156},"34":{"loc":{"start":{"line":162,"column":42},"end":{"line":162,"column":217}},"type":"cond-expr","locations":[{"start":{"line":162,"column":211},"end":{"line":162,"column":213}},{"start":{"line":162,"column":216},"end":{"line":162,"column":217}}],"line":162},"35":{"loc":{"start":{"line":162,"column":42},"end":{"line":162,"column":208}},"type":"binary-expr","locations":[{"start":{"line":162,"column":42},"end":{"line":162,"column":191}},{"start":{"line":162,"column":195},"end":{"line":162,"column":208}}],"line":162},"36":{"loc":{"start":{"line":162,"column":48},"end":{"line":162,"column":181}},"type":"cond-expr","locations":[{"start":{"line":162,"column":105},"end":{"line":162,"column":111}},{"start":{"line":162,"column":114},"end":{"line":162,"column":181}}],"line":162},"37":{"loc":{"start":{"line":162,"column":48},"end":{"line":162,"column":102}},"type":"binary-expr","locations":[{"start":{"line":162,"column":48},"end":{"line":162,"column":85}},{"start":{"line":162,"column":89},"end":{"line":162,"column":102}}],"line":162},"38":{"loc":{"start":{"line":162,"column":154},"end":{"line":162,"column":176}},"type":"binary-expr","locations":[{"start":{"line":162,"column":154},"end":{"line":162,"column":171}},{"start":{"line":162,"column":175},"end":{"line":162,"column":176}}],"line":162},"39":{"loc":{"start":{"line":168,"column":34},"end":{"line":168,"column":102}},"type":"cond-expr","locations":[{"start":{"line":168,"column":86},"end":{"line":168,"column":92}},{"start":{"line":168,"column":95},"end":{"line":168,"column":102}}],"line":168},"40":{"loc":{"start":{"line":168,"column":34},"end":{"line":168,"column":83}},"type":"binary-expr","locations":[{"start":{"line":168,"column":34},"end":{"line":168,"column":66}},{"start":{"line":168,"column":70},"end":{"line":168,"column":83}}],"line":168},"41":{"loc":{"start":{"line":171,"column":35},"end":{"line":174,"column":27}},"type":"cond-expr","locations":[{"start":{"line":171,"column":92},"end":{"line":171,"column":98}},{"start":{"line":171,"column":101},"end":{"line":174,"column":27}}],"line":171},"42":{"loc":{"start":{"line":171,"column":35},"end":{"line":171,"column":89}},"type":"binary-expr","locations":[{"start":{"line":171,"column":35},"end":{"line":171,"column":72}},{"start":{"line":171,"column":76},"end":{"line":171,"column":89}}],"line":171},"43":{"loc":{"start":{"line":175,"column":35},"end":{"line":185,"column":34}},"type":"binary-expr","locations":[{"start":{"line":175,"column":36},"end":{"line":185,"column":27}},{"start":{"line":185,"column":32},"end":{"line":185,"column":34}}],"line":175},"44":{"loc":{"start":{"line":175,"column":36},"end":{"line":185,"column":27}},"type":"cond-expr","locations":[{"start":{"line":175,"column":93},"end":{"line":175,"column":99}},{"start":{"line":175,"column":102},"end":{"line":185,"column":27}}],"line":175},"45":{"loc":{"start":{"line":175,"column":36},"end":{"line":175,"column":90}},"type":"binary-expr","locations":[{"start":{"line":175,"column":36},"end":{"line":175,"column":73}},{"start":{"line":175,"column":77},"end":{"line":175,"column":90}}],"line":175},"46":{"loc":{"start":{"line":206,"column":12},"end":{"line":208,"column":13}},"type":"if","locations":[{"start":{"line":206,"column":12},"end":{"line":208,"column":13}},{"start":{},"end":{}}],"line":206},"47":{"loc":{"start":{"line":211,"column":16},"end":{"line":213,"column":17}},"type":"if","locations":[{"start":{"line":211,"column":16},"end":{"line":213,"column":17}},{"start":{},"end":{}}],"line":211},"48":{"loc":{"start":{"line":216,"column":41},"end":{"line":216,"column":124}},"type":"cond-expr","locations":[{"start":{"line":216,"column":98},"end":{"line":216,"column":104}},{"start":{"line":216,"column":107},"end":{"line":216,"column":124}}],"line":216},"49":{"loc":{"start":{"line":216,"column":41},"end":{"line":216,"column":95}},"type":"binary-expr","locations":[{"start":{"line":216,"column":41},"end":{"line":216,"column":78}},{"start":{"line":216,"column":82},"end":{"line":216,"column":95}}],"line":216},"50":{"loc":{"start":{"line":230,"column":61},"end":{"line":230,"column":69}},"type":"default-arg","locations":[{"start":{"line":230,"column":68},"end":{"line":230,"column":69}}],"line":230},"51":{"loc":{"start":{"line":230,"column":71},"end":{"line":230,"column":81}},"type":"default-arg","locations":[{"start":{"line":230,"column":79},"end":{"line":230,"column":81}}],"line":230},"52":{"loc":{"start":{"line":266,"column":32},"end":{"line":266,"column":141}},"type":"binary-expr","locations":[{"start":{"line":266,"column":33},"end":{"line":266,"column":122}},{"start":{"line":266,"column":127},"end":{"line":266,"column":141}}],"line":266},"53":{"loc":{"start":{"line":266,"column":33},"end":{"line":266,"column":122}},"type":"cond-expr","locations":[{"start":{"line":266,"column":90},"end":{"line":266,"column":96}},{"start":{"line":266,"column":99},"end":{"line":266,"column":122}}],"line":266},"54":{"loc":{"start":{"line":266,"column":33},"end":{"line":266,"column":87}},"type":"binary-expr","locations":[{"start":{"line":266,"column":33},"end":{"line":266,"column":70}},{"start":{"line":266,"column":74},"end":{"line":266,"column":87}}],"line":266},"55":{"loc":{"start":{"line":267,"column":20},"end":{"line":270,"column":21}},"type":"if","locations":[{"start":{"line":267,"column":20},"end":{"line":270,"column":21}},{"start":{},"end":{}}],"line":267},"56":{"loc":{"start":{"line":275,"column":42},"end":{"line":275,"column":217}},"type":"cond-expr","locations":[{"start":{"line":275,"column":211},"end":{"line":275,"column":213}},{"start":{"line":275,"column":216},"end":{"line":275,"column":217}}],"line":275},"57":{"loc":{"start":{"line":275,"column":42},"end":{"line":275,"column":208}},"type":"binary-expr","locations":[{"start":{"line":275,"column":42},"end":{"line":275,"column":191}},{"start":{"line":275,"column":195},"end":{"line":275,"column":208}}],"line":275},"58":{"loc":{"start":{"line":275,"column":48},"end":{"line":275,"column":181}},"type":"cond-expr","locations":[{"start":{"line":275,"column":105},"end":{"line":275,"column":111}},{"start":{"line":275,"column":114},"end":{"line":275,"column":181}}],"line":275},"59":{"loc":{"start":{"line":275,"column":48},"end":{"line":275,"column":102}},"type":"binary-expr","locations":[{"start":{"line":275,"column":48},"end":{"line":275,"column":85}},{"start":{"line":275,"column":89},"end":{"line":275,"column":102}}],"line":275},"60":{"loc":{"start":{"line":275,"column":154},"end":{"line":275,"column":176}},"type":"binary-expr","locations":[{"start":{"line":275,"column":154},"end":{"line":275,"column":171}},{"start":{"line":275,"column":175},"end":{"line":275,"column":176}}],"line":275},"61":{"loc":{"start":{"line":281,"column":34},"end":{"line":281,"column":102}},"type":"cond-expr","locations":[{"start":{"line":281,"column":86},"end":{"line":281,"column":92}},{"start":{"line":281,"column":95},"end":{"line":281,"column":102}}],"line":281},"62":{"loc":{"start":{"line":281,"column":34},"end":{"line":281,"column":83}},"type":"binary-expr","locations":[{"start":{"line":281,"column":34},"end":{"line":281,"column":66}},{"start":{"line":281,"column":70},"end":{"line":281,"column":83}}],"line":281},"63":{"loc":{"start":{"line":284,"column":35},"end":{"line":288,"column":27}},"type":"cond-expr","locations":[{"start":{"line":284,"column":92},"end":{"line":284,"column":98}},{"start":{"line":284,"column":101},"end":{"line":288,"column":27}}],"line":284},"64":{"loc":{"start":{"line":284,"column":35},"end":{"line":284,"column":89}},"type":"binary-expr","locations":[{"start":{"line":284,"column":35},"end":{"line":284,"column":72}},{"start":{"line":284,"column":76},"end":{"line":284,"column":89}}],"line":284},"65":{"loc":{"start":{"line":289,"column":35},"end":{"line":299,"column":34}},"type":"binary-expr","locations":[{"start":{"line":289,"column":36},"end":{"line":299,"column":27}},{"start":{"line":299,"column":32},"end":{"line":299,"column":34}}],"line":289},"66":{"loc":{"start":{"line":289,"column":36},"end":{"line":299,"column":27}},"type":"cond-expr","locations":[{"start":{"line":289,"column":93},"end":{"line":289,"column":99}},{"start":{"line":289,"column":102},"end":{"line":299,"column":27}}],"line":289},"67":{"loc":{"start":{"line":289,"column":36},"end":{"line":289,"column":90}},"type":"binary-expr","locations":[{"start":{"line":289,"column":36},"end":{"line":289,"column":73}},{"start":{"line":289,"column":77},"end":{"line":289,"column":90}}],"line":289},"68":{"loc":{"start":{"line":335,"column":16},"end":{"line":337,"column":17}},"type":"if","locations":[{"start":{"line":335,"column":16},"end":{"line":337,"column":17}},{"start":{},"end":{}}],"line":335},"69":{"loc":{"start":{"line":339,"column":38},"end":{"line":339,"column":213}},"type":"cond-expr","locations":[{"start":{"line":339,"column":207},"end":{"line":339,"column":209}},{"start":{"line":339,"column":212},"end":{"line":339,"column":213}}],"line":339},"70":{"loc":{"start":{"line":339,"column":38},"end":{"line":339,"column":204}},"type":"binary-expr","locations":[{"start":{"line":339,"column":38},"end":{"line":339,"column":187}},{"start":{"line":339,"column":191},"end":{"line":339,"column":204}}],"line":339},"71":{"loc":{"start":{"line":339,"column":44},"end":{"line":339,"column":177}},"type":"cond-expr","locations":[{"start":{"line":339,"column":101},"end":{"line":339,"column":107}},{"start":{"line":339,"column":110},"end":{"line":339,"column":177}}],"line":339},"72":{"loc":{"start":{"line":339,"column":44},"end":{"line":339,"column":98}},"type":"binary-expr","locations":[{"start":{"line":339,"column":44},"end":{"line":339,"column":81}},{"start":{"line":339,"column":85},"end":{"line":339,"column":98}}],"line":339},"73":{"loc":{"start":{"line":339,"column":150},"end":{"line":339,"column":172}},"type":"binary-expr","locations":[{"start":{"line":339,"column":150},"end":{"line":339,"column":167}},{"start":{"line":339,"column":171},"end":{"line":339,"column":172}}],"line":339},"74":{"loc":{"start":{"line":354,"column":16},"end":{"line":356,"column":17}},"type":"if","locations":[{"start":{"line":354,"column":16},"end":{"line":356,"column":17}},{"start":{},"end":{}}],"line":354},"75":{"loc":{"start":{"line":359,"column":16},"end":{"line":361,"column":17}},"type":"if","locations":[{"start":{"line":359,"column":16},"end":{"line":361,"column":17}},{"start":{},"end":{}}],"line":359},"76":{"loc":{"start":{"line":374,"column":16},"end":{"line":376,"column":17}},"type":"if","locations":[{"start":{"line":374,"column":16},"end":{"line":376,"column":17}},{"start":{},"end":{}}],"line":374},"77":{"loc":{"start":{"line":379,"column":16},"end":{"line":381,"column":17}},"type":"if","locations":[{"start":{"line":379,"column":16},"end":{"line":381,"column":17}},{"start":{},"end":{}}],"line":379}},"s":{"0":1,"1":50,"2":0,"3":33,"4":50,"5":50,"6":2,"7":0,"8":0,"9":0,"10":80,"11":33,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":4,"33":4,"34":4,"35":4,"36":2,"37":2,"38":2,"39":2,"40":2,"41":2,"42":4,"43":4,"44":4,"45":4,"46":0,"47":4,"48":4,"49":4,"50":0,"51":4,"52":4,"53":4,"54":4,"55":0,"56":0,"57":0,"58":0,"59":0,"60":4,"61":0,"62":0,"63":3,"64":3,"65":3,"66":0,"67":3,"68":3,"69":3,"70":0,"71":3,"72":7,"73":7,"74":0,"75":7,"76":7,"77":7,"78":0,"79":3,"80":0,"81":0,"82":6,"83":6,"84":1,"85":5,"86":5,"87":5,"88":0,"89":5,"90":5,"91":0,"92":0,"93":3,"94":3,"95":3,"96":3,"97":3,"98":3,"99":3,"100":15,"101":15,"102":15,"103":13,"104":13,"105":3,"106":13,"107":13,"108":0,"109":13,"110":13,"111":13,"112":0,"113":3,"114":0,"115":0,"116":6,"117":6,"118":6,"119":6,"120":3,"121":3,"122":3,"123":0,"124":3,"125":3,"126":3,"127":0,"128":0,"129":4,"130":4,"131":4,"132":4,"133":0,"134":4,"135":4,"136":4,"137":2,"138":2,"139":2,"140":0,"141":0,"142":3,"143":3,"144":3,"145":0,"146":3,"147":3,"148":3,"149":1,"150":2,"151":2,"152":0,"153":0,"154":1},"f":{"0":33,"1":50,"2":0,"3":33,"4":50,"5":0,"6":80,"7":0,"8":1,"9":4,"10":4,"11":4,"12":4,"13":3,"14":3,"15":7,"16":0,"17":7,"18":0,"19":6,"20":6,"21":3,"22":3,"23":15,"24":13,"25":0,"26":13,"27":0,"28":6,"29":6,"30":0,"31":4,"32":4,"33":3,"34":3},"b":{"0":[1,1,1],"1":[50,0],"2":[33,33],"3":[30,50],"4":[33,27],"5":[1,1,1],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[1,1,1],"13":[1,0],"14":[1,1],"15":[2,2],"16":[2,0],"17":[0,2],"18":[2,2],"19":[0,2],"20":[2,2],"21":[0,4],"22":[4,3],"23":[0,4],"24":[4,4],"25":[0,4],"26":[4,4],"27":[0,4],"28":[0,4],"29":[4,0],"30":[0],"31":[0],"32":[0,3],"33":[0,3],"34":[7,0],"35":[7,7],"36":[0,7],"37":[7,7],"38":[0,0],"39":[0,7],"40":[7,7],"41":[0,7],"42":[7,7],"43":[7,0],"44":[0,7],"45":[7,7],"46":[1,5],"47":[0,5],"48":[0,5],"49":[5,5],"50":[0],"51":[0],"52":[15,10],"53":[0,15],"54":[15,15],"55":[13,2],"56":[13,0],"57":[13,13],"58":[0,13],"59":[13,13],"60":[0,0],"61":[0,13],"62":[13,13],"63":[0,13],"64":[13,13],"65":[13,0],"66":[0,13],"67":[13,13],"68":[3,3],"69":[3,0],"70":[3,3],"71":[0,3],"72":[3,3],"73":[0,0],"74":[0,4],"75":[2,2],"76":[0,3],"77":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/workoutService.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/workoutService.ts"],"names":[],"mappings":"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","sourcesContent":["import { Workout_exercises, Exercise, User, Workout } from \"../models/index\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { validate as isValidUUID } from \"uuid\";\nimport { ExerciseAttributes, WorkoutAttributes } from \"../types/models\";\nimport formatMinutesToHours from \"../utils/formatMinutesToHours\";\nimport { CreatedByType } from \"../types/services/index\";\nimport { Op } from \"sequelize\";\n\nclass WorkoutService {\n  async isWorkoutExist(workoutId: string, userId: string): Promise<boolean> {\n    try {\n      const workout = await Workout.findByPk(workoutId);\n\n      if (!workout) {\n        throw new Error(\"Workout not found\");\n      }\n\n      const originalWorkoutId =\n        workout.createdBy?.[0]?.originalWorkoutId || workoutId;\n\n      const existingEntry = await Workout.findOne({\n        where: {\n          userId: userId,\n          createdBy: {\n            [Op.contains]: [{ originalWorkoutId }],\n          },\n        },\n      });\n\n      return !!existingEntry;\n    } catch (error: any) {\n      console.error(\"Check Workout Existence Error:\", error.message);\n      throw error;\n    }\n  }\n\n  async addWorkout(workoutId: string, userId: string) {\n    try {\n      const workout = await Workout.findByPk(workoutId, {\n        include: [\n          {\n            model: Exercise,\n            as: \"exercises\",\n            through: { attributes: [] },\n            attributes: [\n              \"id\",\n              \"name\",\n              \"sets\",\n              \"reps\",\n              \"duration\",\n              \"description\",\n              \"media\",\n              \"createdBy\",\n              \"userId\",\n            ],\n          },\n        ],\n        order: [[\"createdAt\", \"DESC\"]],\n      });\n\n      if (!workout) {\n        throw new Error(\"Workout not found\");\n      }\n\n      const originalWorkoutId =\n        workout.createdBy?.[0]?.originalWorkoutId || workoutId;\n\n      const existingEntry = await Workout.findOne({\n        where: {\n          userId: userId,\n          createdBy: {\n            [Op.contains]: [{ originalWorkoutId: originalWorkoutId }],\n          },\n        },\n      });\n\n      if (existingEntry) {\n        throw new Error(\"Workout already added to your workouts\");\n      }\n\n      const newWorkout = await Workout.create({\n        ...workout.toJSON(),\n        id: uuidv4(),\n        userId,\n        createdBy: workout.createdBy,\n      });\n\n      const checkExercise = await Workout_exercises.findOne({\n        where: { workoutId },\n      });\n\n      const exercises = workout.toJSON().exercises;\n\n      if (checkExercise && exercises) {\n        for (const exercise of exercises) {\n          const { id, ...exerciseData } = exercise;\n\n          const newExercise = await Exercise.create({\n            ...exerciseData,\n            id: uuidv4(),\n            workoutId: newWorkout.id,\n            userId: userId,\n            createdBy: exerciseData.createdBy,\n          });\n\n          await Workout_exercises.create({\n            workoutId: newWorkout.id,\n            exerciseId: newExercise.id,\n          });\n        }\n      }\n\n      return newWorkout;\n    } catch (error: any) {\n      console.error(\"Create Workout Service Error:\", error);\n      throw new Error(error.message);\n    }\n  }\n\n  async getWorkoutsByUserId(\n    userId: string,\n    page: number = 1,\n    limit: number = 10\n  ) {\n    try {\n      if (!isValidUUID(userId)) {\n        return false;\n      }\n\n      const offset = (page - 1) * limit;\n\n      const { rows: workouts, count } = await Workout.findAndCountAll({\n        where: { userId },\n        include: [\n          {\n            model: User,\n            as: \"user\",\n            attributes: [\"id\", \"name\"],\n          },\n          {\n            model: Exercise,\n            as: \"exercises\",\n            through: { attributes: [] },\n            attributes: [\n              \"id\",\n              \"name\",\n              \"sets\",\n              \"reps\",\n              \"duration\",\n              \"description\",\n              \"media\",\n              \"createdBy\",\n              \"userId\",\n            ],\n          },\n        ],\n        order: [[\"createdAt\", \"DESC\"]],\n        limit,\n        offset,\n      });\n\n      if (!workouts) {\n        throw new Error(\"Workouts not found\");\n      }\n\n      const formattedWorkouts = workouts.map((workout) => {\n        const workoutJSON = workout.toJSON();\n\n        const totalDuration =\n          workoutJSON.exercises?.reduce(\n            (total, exercise) => total + (exercise.duration || 0),\n            0\n          ) ?? 0;\n\n        const formattedTime = formatMinutesToHours(totalDuration);\n\n        return {\n          id: workoutJSON.id,\n          duration: formattedTime,\n          userId: workoutJSON.userId,\n          userName: workoutJSON.user?.name,\n          description: workoutJSON.description,\n          name: workoutJSON.name,\n          createdBy: workoutJSON.createdBy?.map((creator) => ({\n            creatorId: creator.creatorId,\n            creatorName: creator.creatorName,\n          })),\n          exercises:\n            workoutJSON.exercises?.map((exercise: Exercise) => ({\n              id: exercise.id,\n              userId: exercise.userId,\n              name: exercise.name,\n              sets: exercise.sets,\n              reps: exercise.reps,\n              duration: exercise.duration,\n              media: exercise.media,\n              description: exercise.description,\n              createBy: exercise.createdBy,\n            })) || [],\n          createdAt: workoutJSON.createdAt,\n          updatedAt: workoutJSON.updatedAt,\n        };\n      });\n\n      return {\n        total: count,\n        page,\n        limit,\n        workouts: formattedWorkouts,\n      };\n    } catch (error) {\n      console.error(\"Get Workouts By User ID Service Error:\", error);\n      throw new Error(\"Failed to fetch workouts\");\n    }\n  }\n\n  async createWorkout(workoutData: WorkoutAttributes) {\n    if (!isValidUUID(workoutData.userId)) {\n      throw new Error(\"Invalid UUID format\");\n    }\n\n    try {\n      const id = uuidv4();\n\n      if (!isValidUUID(id)) {\n        throw new Error(\"Invalid UUID format\");\n      }\n\n      const workout = await Workout.create({\n        ...workoutData,\n        id,\n        createdBy: [\n          {\n            creatorName: workoutData.createdBy?.[0].creatorName as string,\n            creatorId: workoutData.userId,\n            originalWorkoutId: id,\n          },\n        ],\n      });\n\n      return workout;\n    } catch (error: any) {\n      console.error(\"Create Workout Service Error:\", error);\n      throw new Error(error.message);\n    }\n  }\n\n  async getAllWorkouts(page: number = 1, limit: number = 10) {\n    try {\n      const offset = (page - 1) * limit;\n\n      const { rows: workouts, count } = await Workout.findAndCountAll({\n        include: [\n          {\n            model: User,\n            as: \"user\",\n            attributes: [\"id\", \"name\"],\n          },\n          {\n            model: Exercise,\n            as: \"exercises\",\n            through: { attributes: [] },\n            attributes: [\n              \"id\",\n              \"name\",\n              \"sets\",\n              \"reps\",\n              \"duration\",\n              \"description\",\n              \"media\",\n              \"createdBy\",\n              \"userId\",\n            ],\n          },\n        ],\n        order: [[\"createdAt\", \"DESC\"]],\n        limit,\n        offset,\n      });\n\n      const workoutMap = new Map<string, boolean>();\n      const uniqueWorkouts: Workout[] = [];\n\n      workouts.forEach((workout: Workout) => {\n        const workoutJSON = workout.toJSON() as WorkoutAttributes;\n        const key =\n          workoutJSON.createdBy?.[0].originalWorkoutId || workoutJSON.id;\n\n        if (!workoutMap.has(key)) {\n          workoutMap.set(key, true);\n          uniqueWorkouts.push(workout);\n        }\n      });\n\n      const formattedWorkouts = uniqueWorkouts.map((workout: Workout) => {\n        const workoutJSON = workout.toJSON() as WorkoutAttributes;\n\n        const totalDuration =\n          workoutJSON.exercises?.reduce(\n            (total: number, exercise: ExerciseAttributes) =>\n              total + (exercise.duration || 0),\n            0\n          ) ?? 0;\n\n        const formattedTime = formatMinutesToHours(totalDuration);\n\n        return {\n          id: workoutJSON.id,\n          duration: formattedTime,\n          userId: workoutJSON.userId,\n          userName: workoutJSON.user?.name,\n          description: workoutJSON.description,\n          name: workoutJSON.name,\n          createdBy: workoutJSON.createdBy?.map((user: CreatedByType) => ({\n            creatorId: user.creatorId,\n            creatorName: user.creatorName,\n            originalWorkoutId: user.originalWorkoutId,\n          })),\n          exercises:\n            workoutJSON.exercises?.map((exercise: ExerciseAttributes) => ({\n              id: exercise.id,\n              userId: exercise.userId,\n              name: exercise.name,\n              sets: exercise.sets,\n              reps: exercise.reps,\n              duration: exercise.duration,\n              media: exercise.media,\n              description: exercise.description,\n              createdBy: exercise.createdBy,\n            })) || [],\n          createdAt: workoutJSON.createdAt,\n          updatedAt: workoutJSON.updatedAt,\n        };\n      });\n\n      return {\n        total: count,\n        page,\n        limit,\n        workouts: formattedWorkouts,\n      };\n    } catch (error) {\n      console.error(\"Get All Workouts Service Error:\", error);\n      throw new Error(\"Failed to fetch workouts\");\n    }\n  }\n\n  async getWorkoutById(id: string) {\n    try {\n      const workout = await Workout.findByPk(id, {\n        include: [\n          {\n            model: User,\n            as: \"user\",\n            attributes: [\"id\", \"name\"],\n          },\n          {\n            model: Exercise,\n            as: \"exercises\",\n            attributes: [\"id\", \"name\", \"sets\", \"reps\", \"duration\", \"userId\"],\n          },\n        ],\n      });\n\n      if (!workout) {\n        return null;\n      }\n      const workoutJSON = workout.toJSON();\n\n      const totalDuration =\n        workoutJSON.exercises?.reduce(\n          (total, exercise) => total + (exercise.duration || 0),\n          0\n        ) ?? 0;\n\n      const formattedTime = formatMinutesToHours(totalDuration);\n\n      workout.duration = formattedTime;\n\n      return workout;\n    } catch (error) {\n      console.error(\"Get Workout By ID Service Error:\", error);\n      throw new Error(\"Workout not found\");\n    }\n  }\n\n  async updateWorkout(id: string, data: Partial<WorkoutAttributes>) {\n    console.log(id, data);\n\n    try {\n      if (!isValidUUID(id)) {\n        throw new Error(\"Invalid UUID format\");\n      }\n\n      console.log(\"Service: Updating workout with ID:\", id, \"with data:\", data);\n\n      const workout = await Workout.findByPk(id);\n\n      if (!workout) {\n        return false;\n      }\n\n      await workout.update(data);\n\n      return workout;\n    } catch (error) {\n      console.error(\"Update Workout Service Error:\", error);\n      throw error;\n    }\n  }\n\n  async deleteWorkout(id: string) {\n    try {\n      if (!isValidUUID(id)) {\n        throw new Error(\"Invalid UUID format\");\n      }\n      console.log(\"Service: Deleting workout with ID:\", id);\n      const workout = await Workout.findByPk(id);\n      if (!workout) {\n        return 0;\n      }\n      await workout.destroy();\n      return 1;\n    } catch (error) {\n      console.error(\"Delete Workout Service Error:\", error);\n      throw new Error(\"Failed to delete workout\");\n    }\n  }\n}\n\nexport default new WorkoutService();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"59048980d4799519558c4e2ff7ac703921c05642"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/utils/formatMinutesToHours.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/utils/formatMinutesToHours.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":19}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":36}},"6":{"start":{"line":11,"column":4},"end":{"line":18,"column":5}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":36}},"8":{"start":{"line":15,"column":22},"end":{"line":15,"column":46}},"9":{"start":{"line":16,"column":33},"end":{"line":16,"column":45}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":102}}},"fnMap":{"0":{"name":"formatMinutesToHours","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":29}},"loc":{"start":{"line":4,"column":39},"end":{"line":19,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{},"end":{}}],"line":5},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{},"end":{}}],"line":8},"2":{"loc":{"start":{"line":11,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":18,"column":5}},{"start":{"line":14,"column":9},"end":{"line":18,"column":5}}],"line":11}},"s":{"0":1,"1":1,"2":30,"3":24,"4":6,"5":1,"6":5,"7":1,"8":4,"9":4,"10":4},"f":{"0":30},"b":{"0":[24,6],"1":[1,5],"2":[1,4]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/utils/formatMinutesToHours.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/utils/formatMinutesToHours.ts"],"names":[],"mappings":";;AAAA,uCAgBC;AAhBD,SAAwB,oBAAoB,CAAC,OAAe;IAC1D,IAAI,OAAO,KAAK,CAAC,EAAE,CAAC;QAClB,OAAO,GAAG,CAAC;IACb,CAAC;IACD,IAAI,OAAO,GAAG,EAAE,EAAE,CAAC;QACjB,OAAO,GAAG,OAAO,UAAU,CAAC;IAC9B,CAAC;IACD,IAAI,OAAO,GAAG,EAAE,EAAE,CAAC;QACjB,OAAO,GAAG,OAAO,UAAU,CAAC;IAC9B,CAAC;SAAM,CAAC;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QACvC,MAAM,gBAAgB,GAAG,OAAO,GAAG,EAAE,CAAC;QACtC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,MAAM,CAChD,gBAAgB,CACjB,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC;IAC7B,CAAC;AACH,CAAC","sourcesContent":["export default function formatMinutesToHours(minutes: number) {\n  if (minutes === 0) {\n    return \"0\";\n  }\n  if (minutes < 10) {\n    return `${minutes} minutes`;\n  }\n  if (minutes < 60) {\n    return `${minutes} minutes`;\n  } else {\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n    return `${String(hours).padStart(2, \"0\")}:${String(\n      remainingMinutes\n    ).padStart(2, \"0\")} hours`;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5e69a10f30fa18ddde646d9414ec084c13a2f564"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/validateUUID.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/validateUUID.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":21},"end":{"line":11,"column":1}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":29}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":98}},"5":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":72}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":11}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":21},"end":{"line":4,"column":22}},"loc":{"start":{"line":4,"column":41},"end":{"line":11,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{},"end":{}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":13,"4":13,"5":13,"6":6,"7":7,"8":1},"f":{"0":13},"b":{"0":[6,7]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/validateUUID.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/middleware/validateUUID.ts"],"names":[],"mappings":";;;AAEO,MAAM,YAAY,GAAG,CAC1B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,SAAS,GACb,4EAA4E,CAAC;IAC/E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;QACxB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;IAClE,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC;AAZW,QAAA,YAAY,gBAYvB","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\n\nexport const validateUUID = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const { id } = req.params;\n  const uuidRegex =\n    /^[0-9a-f]{8}-[0-9a-f]{4}-[4-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  if (!uuidRegex.test(id)) {\n    return res.status(400).json({ message: \"Invalid UUID format\" });\n  }\n  next();\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c61bd384784feda603df893be98cb722e02601d5"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/exerciseRoutes.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/exerciseRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":29},"end":{"line":7,"column":90}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":81}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":38}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":87}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":103}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":76}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":65}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":79}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":81}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":110}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":102}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":79}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":82}},"18":{"start":{"line":21,"column":0},"end":{"line":21,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/exerciseRoutes.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/exerciseRoutes.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,2FAAmE;AACnE,kFAA0D;AAE1D,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,wBAAc,CAAC,CAAC;AAE3B,MAAM,CAAC,IAAI,CAAC,+BAA+B,EAAE,4BAAkB,CAAC,WAAW,CAAC,CAAC;AAC7E,MAAM,CAAC,IAAI,CACT,sCAAsC,EACtC,4BAAkB,CAAC,oBAAoB,CACxC,CAAC;AACF,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,4BAAkB,CAAC,cAAc,CAAC,CAAC;AAElE,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,4BAAkB,CAAC,eAAe,CAAC,CAAC;AACvD,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,4BAAkB,CAAC,oBAAoB,CAAC,CAAC;AACrE,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,4BAAkB,CAAC,eAAe,CAAC,CAAC;AACvE,MAAM,CAAC,GAAG,CACR,+CAA+C,EAC/C,4BAAkB,CAAC,mBAAmB,CACvC,CAAC;AACF,MAAM,CAAC,GAAG,CACR,2CAA2C,EAC3C,4BAAkB,CAAC,eAAe,CACnC,CAAC;AAEF,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,4BAAkB,CAAC,cAAc,CAAC,CAAC;AAErE,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,4BAAkB,CAAC,cAAc,CAAC,CAAC;AAExE,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport ExerciseController from \"../controllers/exerciseController\";\nimport authMiddleware from \"../middleware/authMiddleware\";\n\nconst router = Router();\n\nrouter.use(authMiddleware);\n\nrouter.post(\"/:exerciseId/user/:userId/add\", ExerciseController.addExercise);\nrouter.post(\n  \"/:exerciseId/workouts/:workoutId/add\",\n  ExerciseController.addExerciseToWorkout\n);\nrouter.post(\"/createExercise\", ExerciseController.createExercise);\n\nrouter.get(\"/all\", ExerciseController.getAllExercises);\nrouter.get(\"/user/:userId\", ExerciseController.getExercisesByUserId);\nrouter.get(\"/getExerciseById/:id\", ExerciseController.getExerciseById);\nrouter.get(\n  \"/isExerciseInWorkout/:exerciseId/user/:userId\",\n  ExerciseController.isExerciseInWorkout\n);\nrouter.get(\n  \"/isExerciseExist/:exerciseId/user/:userId\",\n  ExerciseController.isExerciseExist\n);\n\nrouter.put(\"/updateExercise/:id\", ExerciseController.updateExercise);\n\nrouter.delete(\"/deleteExercise/:id\", ExerciseController.deleteExercise);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6b85c708523b3dcac6dab5c84e9cbf6cddbd340e"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/exerciseController.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/exerciseController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":26},"end":{"line":15,"column":81}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"17":{"start":{"line":19,"column":8},"end":{"line":37,"column":11}},"18":{"start":{"line":20,"column":43},"end":{"line":20,"column":53}},"19":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"20":{"start":{"line":22,"column":16},"end":{"line":22,"column":88}},"21":{"start":{"line":24,"column":12},"end":{"line":36,"column":13}},"22":{"start":{"line":25,"column":39},"end":{"line":28,"column":18}},"23":{"start":{"line":29,"column":16},"end":{"line":29,"column":60}},"24":{"start":{"line":32,"column":16},"end":{"line":32,"column":79}},"25":{"start":{"line":33,"column":16},"end":{"line":35,"column":19}},"26":{"start":{"line":40,"column":8},"end":{"line":58,"column":11}},"27":{"start":{"line":41,"column":43},"end":{"line":41,"column":53}},"28":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"29":{"start":{"line":43,"column":16},"end":{"line":43,"column":88}},"30":{"start":{"line":45,"column":12},"end":{"line":57,"column":13}},"31":{"start":{"line":46,"column":39},"end":{"line":49,"column":18}},"32":{"start":{"line":50,"column":16},"end":{"line":50,"column":60}},"33":{"start":{"line":53,"column":16},"end":{"line":53,"column":79}},"34":{"start":{"line":54,"column":16},"end":{"line":56,"column":19}},"35":{"start":{"line":61,"column":8},"end":{"line":79,"column":11}},"36":{"start":{"line":62,"column":43},"end":{"line":62,"column":53}},"37":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"38":{"start":{"line":64,"column":16},"end":{"line":64,"column":80}},"39":{"start":{"line":66,"column":12},"end":{"line":78,"column":13}},"40":{"start":{"line":67,"column":40},"end":{"line":70,"column":18}},"41":{"start":{"line":71,"column":16},"end":{"line":71,"column":61}},"42":{"start":{"line":74,"column":16},"end":{"line":74,"column":79}},"43":{"start":{"line":75,"column":16},"end":{"line":77,"column":19}},"44":{"start":{"line":82,"column":8},"end":{"line":102,"column":11}},"45":{"start":{"line":83,"column":46},"end":{"line":83,"column":56}},"46":{"start":{"line":84,"column":12},"end":{"line":88,"column":13}},"47":{"start":{"line":85,"column":16},"end":{"line":87,"column":73}},"48":{"start":{"line":89,"column":12},"end":{"line":101,"column":13}},"49":{"start":{"line":90,"column":40},"end":{"line":93,"column":18}},"50":{"start":{"line":94,"column":16},"end":{"line":94,"column":61}},"51":{"start":{"line":97,"column":16},"end":{"line":97,"column":79}},"52":{"start":{"line":98,"column":16},"end":{"line":100,"column":19}},"53":{"start":{"line":105,"column":8},"end":{"line":114,"column":11}},"54":{"start":{"line":106,"column":12},"end":{"line":113,"column":13}},"55":{"start":{"line":107,"column":33},"end":{"line":107,"column":89}},"56":{"start":{"line":108,"column":16},"end":{"line":108,"column":54}},"57":{"start":{"line":111,"column":16},"end":{"line":111,"column":73}},"58":{"start":{"line":112,"column":16},"end":{"line":112,"column":72}},"59":{"start":{"line":117,"column":8},"end":{"line":128,"column":11}},"60":{"start":{"line":118,"column":25},"end":{"line":118,"column":58}},"61":{"start":{"line":119,"column":26},"end":{"line":119,"column":61}},"62":{"start":{"line":120,"column":12},"end":{"line":127,"column":13}},"63":{"start":{"line":121,"column":31},"end":{"line":121,"column":91}},"64":{"start":{"line":122,"column":16},"end":{"line":122,"column":52}},"65":{"start":{"line":125,"column":16},"end":{"line":125,"column":74}},"66":{"start":{"line":126,"column":16},"end":{"line":126,"column":79}},"67":{"start":{"line":131,"column":8},"end":{"line":143,"column":11}},"68":{"start":{"line":132,"column":31},"end":{"line":132,"column":41}},"69":{"start":{"line":133,"column":25},"end":{"line":133,"column":58}},"70":{"start":{"line":134,"column":26},"end":{"line":134,"column":61}},"71":{"start":{"line":135,"column":12},"end":{"line":142,"column":13}},"72":{"start":{"line":136,"column":31},"end":{"line":136,"column":104}},"73":{"start":{"line":137,"column":16},"end":{"line":137,"column":52}},"74":{"start":{"line":140,"column":16},"end":{"line":140,"column":79}},"75":{"start":{"line":141,"column":16},"end":{"line":141,"column":72}},"76":{"start":{"line":146,"column":8},"end":{"line":162,"column":11}},"77":{"start":{"line":147,"column":12},"end":{"line":161,"column":13}},"78":{"start":{"line":148,"column":31},"end":{"line":148,"column":41}},"79":{"start":{"line":149,"column":16},"end":{"line":151,"column":17}},"80":{"start":{"line":150,"column":20},"end":{"line":150,"column":84}},"81":{"start":{"line":152,"column":33},"end":{"line":152,"column":84}},"82":{"start":{"line":153,"column":16},"end":{"line":155,"column":17}},"83":{"start":{"line":154,"column":20},"end":{"line":154,"column":83}},"84":{"start":{"line":156,"column":16},"end":{"line":156,"column":54}},"85":{"start":{"line":159,"column":16},"end":{"line":159,"column":74}},"86":{"start":{"line":160,"column":16},"end":{"line":160,"column":79}},"87":{"start":{"line":165,"column":8},"end":{"line":181,"column":11}},"88":{"start":{"line":166,"column":12},"end":{"line":180,"column":13}},"89":{"start":{"line":167,"column":31},"end":{"line":167,"column":41}},"90":{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},"91":{"start":{"line":169,"column":20},"end":{"line":169,"column":84}},"92":{"start":{"line":171,"column":33},"end":{"line":171,"column":93}},"93":{"start":{"line":172,"column":16},"end":{"line":174,"column":17}},"94":{"start":{"line":173,"column":20},"end":{"line":173,"column":83}},"95":{"start":{"line":175,"column":16},"end":{"line":175,"column":54}},"96":{"start":{"line":178,"column":16},"end":{"line":178,"column":73}},"97":{"start":{"line":179,"column":16},"end":{"line":179,"column":79}},"98":{"start":{"line":184,"column":8},"end":{"line":200,"column":11}},"99":{"start":{"line":185,"column":12},"end":{"line":199,"column":13}},"100":{"start":{"line":186,"column":31},"end":{"line":186,"column":41}},"101":{"start":{"line":187,"column":16},"end":{"line":189,"column":17}},"102":{"start":{"line":188,"column":20},"end":{"line":188,"column":84}},"103":{"start":{"line":190,"column":32},"end":{"line":190,"column":82}},"104":{"start":{"line":191,"column":16},"end":{"line":193,"column":17}},"105":{"start":{"line":192,"column":20},"end":{"line":192,"column":83}},"106":{"start":{"line":194,"column":16},"end":{"line":194,"column":46}},"107":{"start":{"line":197,"column":16},"end":{"line":197,"column":73}},"108":{"start":{"line":198,"column":16},"end":{"line":198,"column":79}},"109":{"start":{"line":203,"column":0},"end":{"line":203,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":37},"end":{"line":38,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":37,"column":9}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":41},"end":{"line":59,"column":5}},"line":39},"11":{"name":"(anonymous_11)","decl":{"start":{"line":40,"column":47},"end":{"line":40,"column":48}},"loc":{"start":{"line":40,"column":60},"end":{"line":58,"column":9}},"line":40},"12":{"name":"(anonymous_12)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":33},"end":{"line":80,"column":5}},"line":60},"13":{"name":"(anonymous_13)","decl":{"start":{"line":61,"column":47},"end":{"line":61,"column":48}},"loc":{"start":{"line":61,"column":60},"end":{"line":79,"column":9}},"line":61},"14":{"name":"(anonymous_14)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":42},"end":{"line":103,"column":5}},"line":81},"15":{"name":"(anonymous_15)","decl":{"start":{"line":82,"column":47},"end":{"line":82,"column":48}},"loc":{"start":{"line":82,"column":60},"end":{"line":102,"column":9}},"line":82},"16":{"name":"(anonymous_16)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":36},"end":{"line":115,"column":5}},"line":104},"17":{"name":"(anonymous_17)","decl":{"start":{"line":105,"column":47},"end":{"line":105,"column":48}},"loc":{"start":{"line":105,"column":60},"end":{"line":114,"column":9}},"line":105},"18":{"name":"(anonymous_18)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":37},"end":{"line":129,"column":5}},"line":116},"19":{"name":"(anonymous_19)","decl":{"start":{"line":117,"column":47},"end":{"line":117,"column":48}},"loc":{"start":{"line":117,"column":60},"end":{"line":128,"column":9}},"line":117},"20":{"name":"(anonymous_20)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":42},"end":{"line":144,"column":5}},"line":130},"21":{"name":"(anonymous_21)","decl":{"start":{"line":131,"column":47},"end":{"line":131,"column":48}},"loc":{"start":{"line":131,"column":60},"end":{"line":143,"column":9}},"line":131},"22":{"name":"(anonymous_22)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":37},"end":{"line":163,"column":5}},"line":145},"23":{"name":"(anonymous_23)","decl":{"start":{"line":146,"column":47},"end":{"line":146,"column":48}},"loc":{"start":{"line":146,"column":60},"end":{"line":162,"column":9}},"line":146},"24":{"name":"(anonymous_24)","decl":{"start":{"line":164,"column":4},"end":{"line":164,"column":5}},"loc":{"start":{"line":164,"column":36},"end":{"line":182,"column":5}},"line":164},"25":{"name":"(anonymous_25)","decl":{"start":{"line":165,"column":47},"end":{"line":165,"column":48}},"loc":{"start":{"line":165,"column":60},"end":{"line":181,"column":9}},"line":165},"26":{"name":"(anonymous_26)","decl":{"start":{"line":183,"column":4},"end":{"line":183,"column":5}},"loc":{"start":{"line":183,"column":36},"end":{"line":201,"column":5}},"line":183},"27":{"name":"(anonymous_27)","decl":{"start":{"line":184,"column":47},"end":{"line":184,"column":48}},"loc":{"start":{"line":184,"column":60},"end":{"line":200,"column":9}},"line":184}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{},"end":{}}],"line":21},"9":{"loc":{"start":{"line":21,"column":16},"end":{"line":21,"column":82}},"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":82}}],"line":21},"10":{"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},{"start":{},"end":{}}],"line":42},"11":{"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":82}},"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":49}},{"start":{"line":42,"column":53},"end":{"line":42,"column":82}}],"line":42},"12":{"loc":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},{"start":{},"end":{}}],"line":63},"13":{"loc":{"start":{"line":84,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":88,"column":13}},{"start":{},"end":{}}],"line":84},"14":{"loc":{"start":{"line":84,"column":16},"end":{"line":84,"column":85}},"type":"binary-expr","locations":[{"start":{"line":84,"column":16},"end":{"line":84,"column":49}},{"start":{"line":84,"column":53},"end":{"line":84,"column":85}}],"line":84},"15":{"loc":{"start":{"line":118,"column":25},"end":{"line":118,"column":58}},"type":"binary-expr","locations":[{"start":{"line":118,"column":25},"end":{"line":118,"column":53}},{"start":{"line":118,"column":57},"end":{"line":118,"column":58}}],"line":118},"16":{"loc":{"start":{"line":119,"column":26},"end":{"line":119,"column":61}},"type":"binary-expr","locations":[{"start":{"line":119,"column":26},"end":{"line":119,"column":55}},{"start":{"line":119,"column":59},"end":{"line":119,"column":61}}],"line":119},"17":{"loc":{"start":{"line":133,"column":25},"end":{"line":133,"column":58}},"type":"binary-expr","locations":[{"start":{"line":133,"column":25},"end":{"line":133,"column":53}},{"start":{"line":133,"column":57},"end":{"line":133,"column":58}}],"line":133},"18":{"loc":{"start":{"line":134,"column":26},"end":{"line":134,"column":61}},"type":"binary-expr","locations":[{"start":{"line":134,"column":26},"end":{"line":134,"column":55}},{"start":{"line":134,"column":59},"end":{"line":134,"column":61}}],"line":134},"19":{"loc":{"start":{"line":149,"column":16},"end":{"line":151,"column":17}},"type":"if","locations":[{"start":{"line":149,"column":16},"end":{"line":151,"column":17}},{"start":{},"end":{}}],"line":149},"20":{"loc":{"start":{"line":153,"column":16},"end":{"line":155,"column":17}},"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":155,"column":17}},{"start":{},"end":{}}],"line":153},"21":{"loc":{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},"type":"if","locations":[{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},{"start":{},"end":{}}],"line":168},"22":{"loc":{"start":{"line":172,"column":16},"end":{"line":174,"column":17}},"type":"if","locations":[{"start":{"line":172,"column":16},"end":{"line":174,"column":17}},{"start":{},"end":{}}],"line":172},"23":{"loc":{"start":{"line":187,"column":16},"end":{"line":189,"column":17}},"type":"if","locations":[{"start":{"line":187,"column":16},"end":{"line":189,"column":17}},{"start":{},"end":{}}],"line":187},"24":{"loc":{"start":{"line":191,"column":16},"end":{"line":193,"column":17}},"type":"if","locations":[{"start":{"line":191,"column":16},"end":{"line":193,"column":17}},{"start":{},"end":{}}],"line":191}},"s":{"0":1,"1":8,"2":0,"3":11,"4":4,"5":4,"6":0,"7":4,"8":4,"9":0,"10":19,"11":11,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":2,"54":2,"55":2,"56":1,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":3,"77":3,"78":3,"79":3,"80":1,"81":2,"82":1,"83":0,"84":1,"85":1,"86":1,"87":3,"88":3,"89":3,"90":3,"91":1,"92":2,"93":1,"94":0,"95":1,"96":1,"97":1,"98":3,"99":3,"100":3,"101":3,"102":1,"103":2,"104":1,"105":0,"106":1,"107":1,"108":1,"109":1},"f":{"0":11,"1":8,"2":0,"3":11,"4":4,"5":4,"6":19,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":2,"17":2,"18":0,"19":0,"20":0,"21":0,"22":3,"23":3,"24":3,"25":3,"26":3,"27":3},"b":{"0":[1,1,1],"1":[8,0],"2":[11,11],"3":[11,8],"4":[11,11],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[1,2],"20":[0,1],"21":[1,2],"22":[0,1],"23":[1,2],"24":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/exerciseController.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/controllers/exerciseController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport ExerciseService from \"../services/exerciseService\";\nimport { validate as isValidUUID } from \"uuid\";\n\nclass ExerciseController {\n  static async isExerciseExist(req: Request, res: Response): Promise<Response> {\n    const { exerciseId, userId } = req.params;\n\n    if (!isValidUUID(exerciseId) || !isValidUUID(userId)) {\n      return res.status(400).json({ message: \"Invalid exercise or user ID\" });\n    }\n\n    try {\n      const exerciseExists = await ExerciseService.isExerciseExist({\n        exerciseId,\n        userId,\n      });\n\n      return res.status(200).json(exerciseExists);\n    } catch (error: any) {\n      console.error(\"Error in addExerciseToWorkout:\", error.message);\n      return res.status(500).json({\n        message: error.message,\n      });\n    }\n  }\n\n  static async isExerciseInWorkout(\n    req: Request,\n    res: Response\n  ): Promise<Response> {\n    const { exerciseId, userId } = req.params;\n\n    if (!isValidUUID(exerciseId) || !isValidUUID(userId)) {\n      return res.status(400).json({ message: \"Invalid exercise or user ID\" });\n    }\n\n    try {\n      const exerciseExists = await ExerciseService.isExerciseInWorkout({\n        exerciseId,\n        userId,\n      });\n\n      return res.status(200).json(exerciseExists);\n    } catch (error: any) {\n      console.error(\"Error in addExerciseToWorkout:\", error.message);\n      return res.status(500).json({\n        message: error.message,\n      });\n    }\n  }\n\n  static async addExercise(req: Request, res: Response): Promise<Response> {\n    const { exerciseId, userId } = req.params;\n\n    if (!isValidUUID(exerciseId)) {\n      return res.status(400).json({ message: \"Invalid exercise ID\" });\n    }\n\n    try {\n      const updatedExercise = await ExerciseService.addExercise({\n        exerciseId,\n        userId,\n      });\n\n      return res.status(200).json(updatedExercise);\n    } catch (error: any) {\n      console.error(\"Error in addExerciseToWorkout:\", error.message);\n      return res.status(500).json({\n        message: error.message,\n      });\n    }\n  }\n\n  static async addExerciseToWorkout(\n    req: Request,\n    res: Response\n  ): Promise<Response> {\n    const { exerciseId, workoutId } = req.params;\n\n    if (!isValidUUID(exerciseId) || !isValidUUID(workoutId)) {\n      return res\n        .status(400)\n        .json({ message: \"Invalid exercise or workout ID\" });\n    }\n\n    try {\n      const updatedExercise = await ExerciseService.addExerciseToWorkout({\n        exerciseId,\n        workoutId,\n      });\n      return res.status(200).json(updatedExercise);\n    } catch (error: any) {\n      console.error(\"Error in addExerciseToWorkout:\", error.message);\n      return res.status(500).json({\n        message: error.message,\n      });\n    }\n  }\n\n  static async createExercise(req: Request, res: Response) {\n    try {\n      const exercise = await ExerciseService.createExercise(req.body);\n      return res.status(201).json(exercise);\n    } catch (error: any) {\n      console.error(\"Error in createExercise:\", error.message);\n      return res.status(400).json({ message: error.message });\n    }\n  }\n\n  static async getAllExercises(req: Request, res: Response) {\n    const page = parseInt(req.query.page as string, 10) || 1;\n    const limit = parseInt(req.query.limit as string, 10) || 10;\n\n    try {\n      const result = await ExerciseService.getAllExercises(page, limit);\n      return res.status(200).json(result);\n    } catch (error: any) {\n      console.error(\"Error in getAllExercises:\", error.message);\n      return res.status(500).json({ message: error.message, error });\n    }\n  }\n\n  static async getExercisesByUserId(\n    req: Request,\n    res: Response\n  ): Promise<Response> {\n    const { userId } = req.params;\n\n    const page = parseInt(req.query.page as string, 10) || 1;\n    const limit = parseInt(req.query.limit as string, 10) || 10;\n\n    try {\n      const result = await ExerciseService.getExercisesByUserId(\n        userId,\n        page,\n        limit\n      );\n\n      return res.status(200).json(result);\n    } catch (error: any) {\n      console.error(\"Error in getExercisesByUserId:\", error.message);\n\n      return res.status(500).json({ message: error.message });\n    }\n  }\n\n  static async getExerciseById(req: Request, res: Response) {\n    try {\n      const { id } = req.params;\n\n      if (!isValidUUID(id)) {\n        return res.status(400).json({ message: \"Invalid UUID format\" });\n      }\n\n      const exercise = await ExerciseService.getExerciseById(id);\n\n      if (!exercise) {\n        return res.status(404).json({ message: \"Exercise not found\" });\n      }\n\n      return res.status(200).json(exercise);\n    } catch (error: any) {\n      console.error(\"Error in getExerciseById:\", error.message);\n      return res.status(400).json({ message: error.message, error });\n    }\n  }\n\n  static async updateExercise(req: Request, res: Response) {\n    try {\n      const { id } = req.params;\n      if (!isValidUUID(id)) {\n        return res.status(400).json({ message: \"Invalid UUID format\" });\n      }\n\n      const exercise = await ExerciseService.updateExercise(id, req.body);\n      if (!exercise) {\n        return res.status(404).json({ message: \"Exercise not found\" });\n      }\n      return res.status(200).json(exercise);\n    } catch (error: any) {\n      console.error(\"Error in updateExercise:\", error.message);\n      return res.status(400).json({ message: error.message, error });\n    }\n  }\n\n  static async deleteExercise(req: Request, res: Response) {\n    try {\n      const { id } = req.params;\n      if (!isValidUUID(id)) {\n        return res.status(400).json({ message: \"Invalid UUID format\" });\n      }\n\n      const deleted = await ExerciseService.deleteExercise(id);\n      if (!deleted) {\n        return res.status(404).json({ message: \"Exercise not found\" });\n      }\n      return res.status(204).send();\n    } catch (error: any) {\n      console.error(\"Error in deleteExercise:\", error.message);\n      return res.status(400).json({ message: error.message, error });\n    }\n  }\n}\n\nexport default ExerciseController;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab15882ff98460435b3002667b8f28f99f1f231f"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/exerciseService.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/exerciseService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":42}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"18":{"start":{"line":18,"column":31},"end":{"line":18,"column":88}},"19":{"start":{"line":19,"column":20},"end":{"line":19,"column":40}},"20":{"start":{"line":22,"column":8},"end":{"line":48,"column":11}},"21":{"start":{"line":24,"column":12},"end":{"line":47,"column":13}},"22":{"start":{"line":25,"column":47},"end":{"line":25,"column":51}},"23":{"start":{"line":26,"column":33},"end":{"line":26,"column":76}},"24":{"start":{"line":27,"column":16},"end":{"line":29,"column":17}},"25":{"start":{"line":28,"column":20},"end":{"line":28,"column":58}},"26":{"start":{"line":30,"column":43},"end":{"line":30,"column":193}},"27":{"start":{"line":31,"column":40},"end":{"line":38,"column":18}},"28":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"29":{"start":{"line":40,"column":20},"end":{"line":40,"column":33}},"30":{"start":{"line":42,"column":16},"end":{"line":42,"column":28}},"31":{"start":{"line":45,"column":16},"end":{"line":45,"column":72}},"32":{"start":{"line":46,"column":16},"end":{"line":46,"column":28}},"33":{"start":{"line":51,"column":8},"end":{"line":91,"column":11}},"34":{"start":{"line":53,"column":12},"end":{"line":90,"column":13}},"35":{"start":{"line":54,"column":47},"end":{"line":54,"column":51}},"36":{"start":{"line":55,"column":33},"end":{"line":55,"column":76}},"37":{"start":{"line":56,"column":16},"end":{"line":58,"column":17}},"38":{"start":{"line":57,"column":20},"end":{"line":57,"column":58}},"39":{"start":{"line":59,"column":43},"end":{"line":59,"column":193}},"40":{"start":{"line":60,"column":40},"end":{"line":71,"column":18}},"41":{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},"42":{"start":{"line":73,"column":20},"end":{"line":73,"column":76}},"43":{"start":{"line":75,"column":36},"end":{"line":81,"column":25}},"44":{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},"45":{"start":{"line":83,"column":20},"end":{"line":83,"column":65}},"46":{"start":{"line":85,"column":16},"end":{"line":85,"column":35}},"47":{"start":{"line":88,"column":16},"end":{"line":88,"column":79}},"48":{"start":{"line":89,"column":16},"end":{"line":89,"column":47}},"49":{"start":{"line":94,"column":8},"end":{"line":137,"column":11}},"50":{"start":{"line":95,"column":12},"end":{"line":136,"column":13}},"51":{"start":{"line":96,"column":47},"end":{"line":96,"column":51}},"52":{"start":{"line":97,"column":33},"end":{"line":97,"column":76}},"53":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"54":{"start":{"line":99,"column":20},"end":{"line":99,"column":58}},"55":{"start":{"line":101,"column":33},"end":{"line":113,"column":18}},"56":{"start":{"line":114,"column":16},"end":{"line":116,"column":17}},"57":{"start":{"line":115,"column":20},"end":{"line":115,"column":58}},"58":{"start":{"line":117,"column":41},"end":{"line":124,"column":18}},"59":{"start":{"line":118,"column":51},"end":{"line":118,"column":161}},"60":{"start":{"line":118,"column":138},"end":{"line":118,"column":158}},"61":{"start":{"line":120,"column":20},"end":{"line":123,"column":22}},"62":{"start":{"line":125,"column":16},"end":{"line":127,"column":17}},"63":{"start":{"line":126,"column":20},"end":{"line":126,"column":33}},"64":{"start":{"line":128,"column":16},"end":{"line":128,"column":40}},"65":{"start":{"line":131,"column":16},"end":{"line":131,"column":72}},"66":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"67":{"start":{"line":133,"column":20},"end":{"line":133,"column":58}},"68":{"start":{"line":135,"column":16},"end":{"line":135,"column":70}},"69":{"start":{"line":140,"column":8},"end":{"line":170,"column":11}},"70":{"start":{"line":141,"column":46},"end":{"line":141,"column":50}},"71":{"start":{"line":142,"column":12},"end":{"line":169,"column":13}},"72":{"start":{"line":143,"column":33},"end":{"line":143,"column":76}},"73":{"start":{"line":144,"column":16},"end":{"line":146,"column":17}},"74":{"start":{"line":145,"column":20},"end":{"line":145,"column":58}},"75":{"start":{"line":147,"column":32},"end":{"line":147,"column":73}},"76":{"start":{"line":148,"column":16},"end":{"line":150,"column":17}},"77":{"start":{"line":149,"column":20},"end":{"line":149,"column":57}},"78":{"start":{"line":151,"column":38},"end":{"line":156,"column":18}},"79":{"start":{"line":157,"column":16},"end":{"line":159,"column":17}},"80":{"start":{"line":158,"column":20},"end":{"line":158,"column":78}},"81":{"start":{"line":160,"column":36},"end":{"line":163,"column":18}},"82":{"start":{"line":164,"column":16},"end":{"line":164,"column":35}},"83":{"start":{"line":167,"column":16},"end":{"line":167,"column":79}},"84":{"start":{"line":168,"column":16},"end":{"line":168,"column":47}},"85":{"start":{"line":173,"column":8},"end":{"line":220,"column":11}},"86":{"start":{"line":175,"column":12},"end":{"line":219,"column":13}},"87":{"start":{"line":176,"column":16},"end":{"line":178,"column":17}},"88":{"start":{"line":177,"column":20},"end":{"line":177,"column":63}},"89":{"start":{"line":179,"column":27},"end":{"line":179,"column":43}},"90":{"start":{"line":180,"column":16},"end":{"line":182,"column":17}},"91":{"start":{"line":181,"column":20},"end":{"line":181,"column":59}},"92":{"start":{"line":183,"column":43},"end":{"line":191,"column":17}},"93":{"start":{"line":184,"column":20},"end":{"line":185,"column":36}},"94":{"start":{"line":185,"column":24},"end":{"line":185,"column":36}},"95":{"start":{"line":186,"column":35},"end":{"line":186,"column":100}},"96":{"start":{"line":187,"column":34},"end":{"line":187,"column":51}},"97":{"start":{"line":188,"column":20},"end":{"line":190,"column":31}},"98":{"start":{"line":192,"column":16},"end":{"line":194,"column":17}},"99":{"start":{"line":193,"column":20},"end":{"line":193,"column":59}},"100":{"start":{"line":195,"column":36},"end":{"line":201,"column":25}},"101":{"start":{"line":202,"column":16},"end":{"line":204,"column":17}},"102":{"start":{"line":203,"column":20},"end":{"line":203,"column":65}},"103":{"start":{"line":205,"column":16},"end":{"line":210,"column":17}},"104":{"start":{"line":206,"column":20},"end":{"line":209,"column":23}},"105":{"start":{"line":211,"column":16},"end":{"line":211,"column":35}},"106":{"start":{"line":214,"column":16},"end":{"line":214,"column":71}},"107":{"start":{"line":215,"column":16},"end":{"line":217,"column":17}},"108":{"start":{"line":216,"column":20},"end":{"line":216,"column":59}},"109":{"start":{"line":218,"column":16},"end":{"line":218,"column":47}},"110":{"start":{"line":223,"column":8},"end":{"line":274,"column":11}},"111":{"start":{"line":224,"column":12},"end":{"line":273,"column":13}},"112":{"start":{"line":225,"column":31},"end":{"line":225,"column":49}},"113":{"start":{"line":226,"column":51},"end":{"line":230,"column":18}},"114":{"start":{"line":231,"column":36},"end":{"line":231,"column":45}},"115":{"start":{"line":232,"column":40},"end":{"line":232,"column":42}},"116":{"start":{"line":233,"column":16},"end":{"line":241,"column":19}},"117":{"start":{"line":235,"column":41},"end":{"line":235,"column":58}},"118":{"start":{"line":236,"column":32},"end":{"line":236,"column":144}},"119":{"start":{"line":237,"column":20},"end":{"line":240,"column":21}},"120":{"start":{"line":238,"column":24},"end":{"line":238,"column":51}},"121":{"start":{"line":239,"column":24},"end":{"line":239,"column":55}},"122":{"start":{"line":242,"column":43},"end":{"line":262,"column":18}},"123":{"start":{"line":244,"column":41},"end":{"line":244,"column":58}},"124":{"start":{"line":245,"column":20},"end":{"line":261,"column":22}},"125":{"start":{"line":254,"column":120},"end":{"line":258,"column":25}},"126":{"start":{"line":263,"column":16},"end":{"line":268,"column":18}},"127":{"start":{"line":271,"column":16},"end":{"line":271,"column":73}},"128":{"start":{"line":272,"column":16},"end":{"line":272,"column":61}},"129":{"start":{"line":277,"column":8},"end":{"line":328,"column":11}},"130":{"start":{"line":278,"column":12},"end":{"line":327,"column":13}},"131":{"start":{"line":279,"column":31},"end":{"line":279,"column":49}},"132":{"start":{"line":280,"column":51},"end":{"line":292,"column":18}},"133":{"start":{"line":293,"column":43},"end":{"line":316,"column":18}},"134":{"start":{"line":295,"column":41},"end":{"line":295,"column":58}},"135":{"start":{"line":296,"column":42},"end":{"line":298,"column":30}},"136":{"start":{"line":299,"column":20},"end":{"line":315,"column":22}},"137":{"start":{"line":308,"column":123},"end":{"line":312,"column":25}},"138":{"start":{"line":317,"column":16},"end":{"line":322,"column":18}},"139":{"start":{"line":325,"column":16},"end":{"line":325,"column":80}},"140":{"start":{"line":326,"column":16},"end":{"line":326,"column":61}},"141":{"start":{"line":331,"column":8},"end":{"line":347,"column":11}},"142":{"start":{"line":332,"column":12},"end":{"line":332,"column":76}},"143":{"start":{"line":333,"column":12},"end":{"line":346,"column":13}},"144":{"start":{"line":334,"column":16},"end":{"line":336,"column":17}},"145":{"start":{"line":335,"column":20},"end":{"line":335,"column":59}},"146":{"start":{"line":337,"column":33},"end":{"line":337,"column":68}},"147":{"start":{"line":338,"column":16},"end":{"line":340,"column":17}},"148":{"start":{"line":339,"column":20},"end":{"line":339,"column":58}},"149":{"start":{"line":341,"column":16},"end":{"line":341,"column":32}},"150":{"start":{"line":344,"column":16},"end":{"line":344,"column":74}},"151":{"start":{"line":345,"column":16},"end":{"line":345,"column":28}},"152":{"start":{"line":350,"column":8},"end":{"line":366,"column":11}},"153":{"start":{"line":351,"column":12},"end":{"line":365,"column":13}},"154":{"start":{"line":352,"column":16},"end":{"line":354,"column":17}},"155":{"start":{"line":353,"column":20},"end":{"line":353,"column":59}},"156":{"start":{"line":355,"column":33},"end":{"line":355,"column":68}},"157":{"start":{"line":356,"column":16},"end":{"line":358,"column":17}},"158":{"start":{"line":357,"column":20},"end":{"line":357,"column":58}},"159":{"start":{"line":359,"column":40},"end":{"line":359,"column":67}},"160":{"start":{"line":360,"column":16},"end":{"line":360,"column":39}},"161":{"start":{"line":363,"column":16},"end":{"line":363,"column":71}},"162":{"start":{"line":364,"column":16},"end":{"line":364,"column":28}},"163":{"start":{"line":369,"column":8},"end":{"line":391,"column":11}},"164":{"start":{"line":370,"column":12},"end":{"line":390,"column":13}},"165":{"start":{"line":371,"column":16},"end":{"line":373,"column":17}},"166":{"start":{"line":372,"column":20},"end":{"line":372,"column":59}},"167":{"start":{"line":374,"column":33},"end":{"line":374,"column":68}},"168":{"start":{"line":375,"column":16},"end":{"line":377,"column":17}},"169":{"start":{"line":376,"column":20},"end":{"line":376,"column":58}},"170":{"start":{"line":378,"column":40},"end":{"line":380,"column":18}},"171":{"start":{"line":381,"column":16},"end":{"line":381,"column":41}},"172":{"start":{"line":382,"column":26},"end":{"line":384,"column":18}},"173":{"start":{"line":385,"column":16},"end":{"line":385,"column":32}},"174":{"start":{"line":388,"column":16},"end":{"line":388,"column":71}},"175":{"start":{"line":389,"column":16},"end":{"line":389,"column":28}},"176":{"start":{"line":394,"column":0},"end":{"line":394,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":26},"end":{"line":49,"column":5}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":47},"end":{"line":22,"column":48}},"loc":{"start":{"line":22,"column":60},"end":{"line":48,"column":9}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":22},"end":{"line":92,"column":5}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":91,"column":9}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":30},"end":{"line":138,"column":5}},"line":93},"13":{"name":"(anonymous_13)","decl":{"start":{"line":94,"column":47},"end":{"line":94,"column":48}},"loc":{"start":{"line":94,"column":60},"end":{"line":137,"column":9}},"line":94},"14":{"name":"(anonymous_14)","decl":{"start":{"line":118,"column":28},"end":{"line":118,"column":29}},"loc":{"start":{"line":118,"column":41},"end":{"line":118,"column":163}},"line":118},"15":{"name":"(anonymous_15)","decl":{"start":{"line":118,"column":130},"end":{"line":118,"column":131}},"loc":{"start":{"line":118,"column":138},"end":{"line":118,"column":158}},"line":118},"16":{"name":"(anonymous_16)","decl":{"start":{"line":119,"column":25},"end":{"line":119,"column":26}},"loc":{"start":{"line":119,"column":38},"end":{"line":124,"column":17}},"line":119},"17":{"name":"(anonymous_17)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":31},"end":{"line":171,"column":5}},"line":139},"18":{"name":"(anonymous_18)","decl":{"start":{"line":140,"column":47},"end":{"line":140,"column":48}},"loc":{"start":{"line":140,"column":60},"end":{"line":170,"column":9}},"line":140},"19":{"name":"(anonymous_19)","decl":{"start":{"line":172,"column":4},"end":{"line":172,"column":5}},"loc":{"start":{"line":172,"column":29},"end":{"line":221,"column":5}},"line":172},"20":{"name":"(anonymous_20)","decl":{"start":{"line":173,"column":47},"end":{"line":173,"column":48}},"loc":{"start":{"line":173,"column":60},"end":{"line":220,"column":9}},"line":173},"21":{"name":"(anonymous_21)","decl":{"start":{"line":183,"column":43},"end":{"line":183,"column":44}},"loc":{"start":{"line":183,"column":52},"end":{"line":191,"column":17}},"line":183},"22":{"name":"(anonymous_22)","decl":{"start":{"line":222,"column":4},"end":{"line":222,"column":5}},"loc":{"start":{"line":222,"column":22},"end":{"line":275,"column":5}},"line":222},"23":{"name":"(anonymous_23)","decl":{"start":{"line":223,"column":50},"end":{"line":223,"column":51}},"loc":{"start":{"line":223,"column":83},"end":{"line":274,"column":9}},"line":223},"24":{"name":"(anonymous_24)","decl":{"start":{"line":233,"column":34},"end":{"line":233,"column":35}},"loc":{"start":{"line":233,"column":48},"end":{"line":241,"column":17}},"line":233},"25":{"name":"(anonymous_25)","decl":{"start":{"line":242,"column":63},"end":{"line":242,"column":64}},"loc":{"start":{"line":242,"column":77},"end":{"line":262,"column":17}},"line":242},"26":{"name":"(anonymous_26)","decl":{"start":{"line":254,"column":109},"end":{"line":254,"column":110}},"loc":{"start":{"line":254,"column":120},"end":{"line":258,"column":25}},"line":254},"27":{"name":"(anonymous_27)","decl":{"start":{"line":276,"column":4},"end":{"line":276,"column":5}},"loc":{"start":{"line":276,"column":35},"end":{"line":329,"column":5}},"line":276},"28":{"name":"(anonymous_28)","decl":{"start":{"line":277,"column":50},"end":{"line":277,"column":51}},"loc":{"start":{"line":277,"column":91},"end":{"line":328,"column":9}},"line":277},"29":{"name":"(anonymous_29)","decl":{"start":{"line":293,"column":57},"end":{"line":293,"column":58}},"loc":{"start":{"line":293,"column":71},"end":{"line":316,"column":17}},"line":293},"30":{"name":"(anonymous_30)","decl":{"start":{"line":308,"column":109},"end":{"line":308,"column":110}},"loc":{"start":{"line":308,"column":123},"end":{"line":312,"column":25}},"line":308},"31":{"name":"(anonymous_31)","decl":{"start":{"line":330,"column":4},"end":{"line":330,"column":5}},"loc":{"start":{"line":330,"column":24},"end":{"line":348,"column":5}},"line":330},"32":{"name":"(anonymous_32)","decl":{"start":{"line":331,"column":47},"end":{"line":331,"column":48}},"loc":{"start":{"line":331,"column":60},"end":{"line":347,"column":9}},"line":331},"33":{"name":"(anonymous_33)","decl":{"start":{"line":349,"column":4},"end":{"line":349,"column":5}},"loc":{"start":{"line":349,"column":29},"end":{"line":367,"column":5}},"line":349},"34":{"name":"(anonymous_34)","decl":{"start":{"line":350,"column":47},"end":{"line":350,"column":48}},"loc":{"start":{"line":350,"column":60},"end":{"line":366,"column":9}},"line":350},"35":{"name":"(anonymous_35)","decl":{"start":{"line":368,"column":4},"end":{"line":368,"column":5}},"loc":{"start":{"line":368,"column":23},"end":{"line":392,"column":5}},"line":368},"36":{"name":"(anonymous_36)","decl":{"start":{"line":369,"column":47},"end":{"line":369,"column":48}},"loc":{"start":{"line":369,"column":60},"end":{"line":391,"column":9}},"line":369}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":27,"column":16},"end":{"line":29,"column":17}},"type":"if","locations":[{"start":{"line":27,"column":16},"end":{"line":29,"column":17}},{"start":{},"end":{}}],"line":27},"9":{"loc":{"start":{"line":30,"column":43},"end":{"line":30,"column":193}},"type":"binary-expr","locations":[{"start":{"line":30,"column":44},"end":{"line":30,"column":178}},{"start":{"line":30,"column":183},"end":{"line":30,"column":193}}],"line":30},"10":{"loc":{"start":{"line":30,"column":44},"end":{"line":30,"column":178}},"type":"cond-expr","locations":[{"start":{"line":30,"column":148},"end":{"line":30,"column":154}},{"start":{"line":30,"column":157},"end":{"line":30,"column":178}}],"line":30},"11":{"loc":{"start":{"line":30,"column":44},"end":{"line":30,"column":145}},"type":"binary-expr","locations":[{"start":{"line":30,"column":44},"end":{"line":30,"column":128}},{"start":{"line":30,"column":132},"end":{"line":30,"column":145}}],"line":30},"12":{"loc":{"start":{"line":30,"column":50},"end":{"line":30,"column":118}},"type":"cond-expr","locations":[{"start":{"line":30,"column":104},"end":{"line":30,"column":110}},{"start":{"line":30,"column":113},"end":{"line":30,"column":118}}],"line":30},"13":{"loc":{"start":{"line":30,"column":50},"end":{"line":30,"column":101}},"type":"binary-expr","locations":[{"start":{"line":30,"column":50},"end":{"line":30,"column":84}},{"start":{"line":30,"column":88},"end":{"line":30,"column":101}}],"line":30},"14":{"loc":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},{"start":{},"end":{}}],"line":39},"15":{"loc":{"start":{"line":56,"column":16},"end":{"line":58,"column":17}},"type":"if","locations":[{"start":{"line":56,"column":16},"end":{"line":58,"column":17}},{"start":{},"end":{}}],"line":56},"16":{"loc":{"start":{"line":59,"column":43},"end":{"line":59,"column":193}},"type":"binary-expr","locations":[{"start":{"line":59,"column":44},"end":{"line":59,"column":178}},{"start":{"line":59,"column":183},"end":{"line":59,"column":193}}],"line":59},"17":{"loc":{"start":{"line":59,"column":44},"end":{"line":59,"column":178}},"type":"cond-expr","locations":[{"start":{"line":59,"column":148},"end":{"line":59,"column":154}},{"start":{"line":59,"column":157},"end":{"line":59,"column":178}}],"line":59},"18":{"loc":{"start":{"line":59,"column":44},"end":{"line":59,"column":145}},"type":"binary-expr","locations":[{"start":{"line":59,"column":44},"end":{"line":59,"column":128}},{"start":{"line":59,"column":132},"end":{"line":59,"column":145}}],"line":59},"19":{"loc":{"start":{"line":59,"column":50},"end":{"line":59,"column":118}},"type":"cond-expr","locations":[{"start":{"line":59,"column":104},"end":{"line":59,"column":110}},{"start":{"line":59,"column":113},"end":{"line":59,"column":118}}],"line":59},"20":{"loc":{"start":{"line":59,"column":50},"end":{"line":59,"column":101}},"type":"binary-expr","locations":[{"start":{"line":59,"column":50},"end":{"line":59,"column":84}},{"start":{"line":59,"column":88},"end":{"line":59,"column":101}}],"line":59},"21":{"loc":{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},{"start":{},"end":{}}],"line":72},"22":{"loc":{"start":{"line":77,"column":41},"end":{"line":77,"column":168}},"type":"cond-expr","locations":[{"start":{"line":77,"column":145},"end":{"line":77,"column":151}},{"start":{"line":77,"column":154},"end":{"line":77,"column":168}}],"line":77},"23":{"loc":{"start":{"line":77,"column":41},"end":{"line":77,"column":142}},"type":"binary-expr","locations":[{"start":{"line":77,"column":41},"end":{"line":77,"column":125}},{"start":{"line":77,"column":129},"end":{"line":77,"column":142}}],"line":77},"24":{"loc":{"start":{"line":77,"column":47},"end":{"line":77,"column":115}},"type":"cond-expr","locations":[{"start":{"line":77,"column":101},"end":{"line":77,"column":107}},{"start":{"line":77,"column":110},"end":{"line":77,"column":115}}],"line":77},"25":{"loc":{"start":{"line":77,"column":47},"end":{"line":77,"column":98}},"type":"binary-expr","locations":[{"start":{"line":77,"column":47},"end":{"line":77,"column":81}},{"start":{"line":77,"column":85},"end":{"line":77,"column":98}}],"line":77},"26":{"loc":{"start":{"line":78,"column":39},"end":{"line":78,"column":164}},"type":"cond-expr","locations":[{"start":{"line":78,"column":143},"end":{"line":78,"column":149}},{"start":{"line":78,"column":152},"end":{"line":78,"column":164}}],"line":78},"27":{"loc":{"start":{"line":78,"column":39},"end":{"line":78,"column":140}},"type":"binary-expr","locations":[{"start":{"line":78,"column":39},"end":{"line":78,"column":123}},{"start":{"line":78,"column":127},"end":{"line":78,"column":140}}],"line":78},"28":{"loc":{"start":{"line":78,"column":45},"end":{"line":78,"column":113}},"type":"cond-expr","locations":[{"start":{"line":78,"column":99},"end":{"line":78,"column":105}},{"start":{"line":78,"column":108},"end":{"line":78,"column":113}}],"line":78},"29":{"loc":{"start":{"line":78,"column":45},"end":{"line":78,"column":96}},"type":"binary-expr","locations":[{"start":{"line":78,"column":45},"end":{"line":78,"column":79}},{"start":{"line":78,"column":83},"end":{"line":78,"column":96}}],"line":78},"30":{"loc":{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},{"start":{},"end":{}}],"line":82},"31":{"loc":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},{"start":{},"end":{}}],"line":98},"32":{"loc":{"start":{"line":114,"column":16},"end":{"line":116,"column":17}},"type":"if","locations":[{"start":{"line":114,"column":16},"end":{"line":116,"column":17}},{"start":{},"end":{}}],"line":114},"33":{"loc":{"start":{"line":118,"column":60},"end":{"line":118,"column":159}},"type":"cond-expr","locations":[{"start":{"line":118,"column":113},"end":{"line":118,"column":119}},{"start":{"line":118,"column":122},"end":{"line":118,"column":159}}],"line":118},"34":{"loc":{"start":{"line":118,"column":60},"end":{"line":118,"column":110}},"type":"binary-expr","locations":[{"start":{"line":118,"column":60},"end":{"line":118,"column":93}},{"start":{"line":118,"column":97},"end":{"line":118,"column":110}}],"line":118},"35":{"loc":{"start":{"line":125,"column":16},"end":{"line":127,"column":17}},"type":"if","locations":[{"start":{"line":125,"column":16},"end":{"line":127,"column":17}},{"start":{},"end":{}}],"line":125},"36":{"loc":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},{"start":{},"end":{}}],"line":132},"37":{"loc":{"start":{"line":144,"column":16},"end":{"line":146,"column":17}},"type":"if","locations":[{"start":{"line":144,"column":16},"end":{"line":146,"column":17}},{"start":{},"end":{}}],"line":144},"38":{"loc":{"start":{"line":148,"column":16},"end":{"line":150,"column":17}},"type":"if","locations":[{"start":{"line":148,"column":16},"end":{"line":150,"column":17}},{"start":{},"end":{}}],"line":148},"39":{"loc":{"start":{"line":157,"column":16},"end":{"line":159,"column":17}},"type":"if","locations":[{"start":{"line":157,"column":16},"end":{"line":159,"column":17}},{"start":{},"end":{}}],"line":157},"40":{"loc":{"start":{"line":176,"column":16},"end":{"line":178,"column":17}},"type":"if","locations":[{"start":{"line":176,"column":16},"end":{"line":178,"column":17}},{"start":{},"end":{}}],"line":176},"41":{"loc":{"start":{"line":176,"column":20},"end":{"line":176,"column":59}},"type":"binary-expr","locations":[{"start":{"line":176,"column":20},"end":{"line":176,"column":34}},{"start":{"line":176,"column":38},"end":{"line":176,"column":59}}],"line":176},"42":{"loc":{"start":{"line":180,"column":16},"end":{"line":182,"column":17}},"type":"if","locations":[{"start":{"line":180,"column":16},"end":{"line":182,"column":17}},{"start":{},"end":{}}],"line":180},"43":{"loc":{"start":{"line":184,"column":20},"end":{"line":185,"column":36}},"type":"if","locations":[{"start":{"line":184,"column":20},"end":{"line":185,"column":36}},{"start":{},"end":{}}],"line":184},"44":{"loc":{"start":{"line":188,"column":27},"end":{"line":190,"column":30}},"type":"cond-expr","locations":[{"start":{"line":189,"column":26},"end":{"line":189,"column":69}},{"start":{"line":190,"column":26},"end":{"line":190,"column":30}}],"line":188},"45":{"loc":{"start":{"line":188,"column":27},"end":{"line":188,"column":58}},"type":"binary-expr","locations":[{"start":{"line":188,"column":27},"end":{"line":188,"column":32}},{"start":{"line":188,"column":36},"end":{"line":188,"column":58}}],"line":188},"46":{"loc":{"start":{"line":192,"column":16},"end":{"line":194,"column":17}},"type":"if","locations":[{"start":{"line":192,"column":16},"end":{"line":194,"column":17}},{"start":{},"end":{}}],"line":192},"47":{"loc":{"start":{"line":192,"column":20},"end":{"line":192,"column":73}},"type":"binary-expr","locations":[{"start":{"line":192,"column":20},"end":{"line":192,"column":34}},{"start":{"line":192,"column":38},"end":{"line":192,"column":73}}],"line":192},"48":{"loc":{"start":{"line":197,"column":41},"end":{"line":197,"column":121}},"type":"cond-expr","locations":[{"start":{"line":197,"column":95},"end":{"line":197,"column":101}},{"start":{"line":197,"column":104},"end":{"line":197,"column":121}}],"line":197},"49":{"loc":{"start":{"line":197,"column":41},"end":{"line":197,"column":92}},"type":"binary-expr","locations":[{"start":{"line":197,"column":41},"end":{"line":197,"column":75}},{"start":{"line":197,"column":79},"end":{"line":197,"column":92}}],"line":197},"50":{"loc":{"start":{"line":202,"column":16},"end":{"line":204,"column":17}},"type":"if","locations":[{"start":{"line":202,"column":16},"end":{"line":204,"column":17}},{"start":{},"end":{}}],"line":202},"51":{"loc":{"start":{"line":205,"column":16},"end":{"line":210,"column":17}},"type":"if","locations":[{"start":{"line":205,"column":16},"end":{"line":210,"column":17}},{"start":{},"end":{}}],"line":205},"52":{"loc":{"start":{"line":215,"column":16},"end":{"line":217,"column":17}},"type":"if","locations":[{"start":{"line":215,"column":16},"end":{"line":217,"column":17}},{"start":{},"end":{}}],"line":215},"53":{"loc":{"start":{"line":215,"column":20},"end":{"line":215,"column":65}},"type":"binary-expr","locations":[{"start":{"line":215,"column":20},"end":{"line":215,"column":32}},{"start":{"line":215,"column":36},"end":{"line":215,"column":65}}],"line":215},"54":{"loc":{"start":{"line":223,"column":61},"end":{"line":223,"column":69}},"type":"default-arg","locations":[{"start":{"line":223,"column":68},"end":{"line":223,"column":69}}],"line":223},"55":{"loc":{"start":{"line":223,"column":71},"end":{"line":223,"column":81}},"type":"default-arg","locations":[{"start":{"line":223,"column":79},"end":{"line":223,"column":81}}],"line":223},"56":{"loc":{"start":{"line":236,"column":32},"end":{"line":236,"column":144}},"type":"binary-expr","locations":[{"start":{"line":236,"column":33},"end":{"line":236,"column":124}},{"start":{"line":236,"column":129},"end":{"line":236,"column":144}}],"line":236},"57":{"loc":{"start":{"line":236,"column":33},"end":{"line":236,"column":124}},"type":"cond-expr","locations":[{"start":{"line":236,"column":91},"end":{"line":236,"column":97}},{"start":{"line":236,"column":100},"end":{"line":236,"column":124}}],"line":236},"58":{"loc":{"start":{"line":236,"column":33},"end":{"line":236,"column":88}},"type":"binary-expr","locations":[{"start":{"line":236,"column":33},"end":{"line":236,"column":71}},{"start":{"line":236,"column":75},"end":{"line":236,"column":88}}],"line":236},"59":{"loc":{"start":{"line":237,"column":20},"end":{"line":240,"column":21}},"type":"if","locations":[{"start":{"line":237,"column":20},"end":{"line":240,"column":21}},{"start":{},"end":{}}],"line":237},"60":{"loc":{"start":{"line":254,"column":35},"end":{"line":258,"column":27}},"type":"cond-expr","locations":[{"start":{"line":254,"column":93},"end":{"line":254,"column":99}},{"start":{"line":254,"column":102},"end":{"line":258,"column":27}}],"line":254},"61":{"loc":{"start":{"line":254,"column":35},"end":{"line":254,"column":90}},"type":"binary-expr","locations":[{"start":{"line":254,"column":35},"end":{"line":254,"column":73}},{"start":{"line":254,"column":77},"end":{"line":254,"column":90}}],"line":254},"62":{"loc":{"start":{"line":277,"column":69},"end":{"line":277,"column":77}},"type":"default-arg","locations":[{"start":{"line":277,"column":76},"end":{"line":277,"column":77}}],"line":277},"63":{"loc":{"start":{"line":277,"column":79},"end":{"line":277,"column":89}},"type":"default-arg","locations":[{"start":{"line":277,"column":87},"end":{"line":277,"column":89}}],"line":277},"64":{"loc":{"start":{"line":296,"column":42},"end":{"line":298,"column":30}},"type":"cond-expr","locations":[{"start":{"line":297,"column":26},"end":{"line":297,"column":84}},{"start":{"line":298,"column":26},"end":{"line":298,"column":30}}],"line":296},"65":{"loc":{"start":{"line":308,"column":35},"end":{"line":312,"column":27}},"type":"cond-expr","locations":[{"start":{"line":308,"column":93},"end":{"line":308,"column":99}},{"start":{"line":308,"column":102},"end":{"line":312,"column":27}}],"line":308},"66":{"loc":{"start":{"line":308,"column":35},"end":{"line":308,"column":90}},"type":"binary-expr","locations":[{"start":{"line":308,"column":35},"end":{"line":308,"column":73}},{"start":{"line":308,"column":77},"end":{"line":308,"column":90}}],"line":308},"67":{"loc":{"start":{"line":334,"column":16},"end":{"line":336,"column":17}},"type":"if","locations":[{"start":{"line":334,"column":16},"end":{"line":336,"column":17}},{"start":{},"end":{}}],"line":334},"68":{"loc":{"start":{"line":338,"column":16},"end":{"line":340,"column":17}},"type":"if","locations":[{"start":{"line":338,"column":16},"end":{"line":340,"column":17}},{"start":{},"end":{}}],"line":338},"69":{"loc":{"start":{"line":352,"column":16},"end":{"line":354,"column":17}},"type":"if","locations":[{"start":{"line":352,"column":16},"end":{"line":354,"column":17}},{"start":{},"end":{}}],"line":352},"70":{"loc":{"start":{"line":356,"column":16},"end":{"line":358,"column":17}},"type":"if","locations":[{"start":{"line":356,"column":16},"end":{"line":358,"column":17}},{"start":{},"end":{}}],"line":356},"71":{"loc":{"start":{"line":371,"column":16},"end":{"line":373,"column":17}},"type":"if","locations":[{"start":{"line":371,"column":16},"end":{"line":373,"column":17}},{"start":{},"end":{}}],"line":371},"72":{"loc":{"start":{"line":375,"column":16},"end":{"line":377,"column":17}},"type":"if","locations":[{"start":{"line":375,"column":16},"end":{"line":377,"column":17}},{"start":{},"end":{}}],"line":375}},"s":{"0":1,"1":46,"2":0,"3":28,"4":43,"5":43,"6":9,"7":3,"8":3,"9":3,"10":60,"11":28,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":2,"21":2,"22":2,"23":2,"24":2,"25":1,"26":1,"27":1,"28":1,"29":0,"30":1,"31":1,"32":1,"33":3,"34":3,"35":3,"36":3,"37":3,"38":0,"39":3,"40":3,"41":3,"42":1,"43":2,"44":2,"45":0,"46":2,"47":1,"48":1,"49":2,"50":2,"51":2,"52":2,"53":2,"54":1,"55":1,"56":1,"57":0,"58":1,"59":1,"60":1,"61":0,"62":1,"63":1,"64":0,"65":1,"66":1,"67":1,"68":0,"69":2,"70":2,"71":2,"72":2,"73":2,"74":0,"75":2,"76":2,"77":0,"78":2,"79":2,"80":1,"81":1,"82":1,"83":1,"84":1,"85":5,"86":5,"87":5,"88":1,"89":4,"90":4,"91":0,"92":4,"93":5,"94":2,"95":3,"96":3,"97":3,"98":4,"99":1,"100":3,"101":2,"102":0,"103":2,"104":0,"105":2,"106":3,"107":3,"108":1,"109":2,"110":3,"111":3,"112":3,"113":3,"114":2,"115":2,"116":2,"117":10,"118":10,"119":10,"120":10,"121":10,"122":2,"123":10,"124":10,"125":10,"126":2,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":1,"141":2,"142":2,"143":2,"144":2,"145":0,"146":2,"147":2,"148":1,"149":1,"150":1,"151":1,"152":4,"153":4,"154":4,"155":0,"156":4,"157":4,"158":2,"159":2,"160":2,"161":2,"162":2,"163":4,"164":4,"165":4,"166":0,"167":4,"168":4,"169":2,"170":2,"171":2,"172":2,"173":2,"174":2,"175":2,"176":1},"f":{"0":28,"1":46,"2":0,"3":28,"4":43,"5":3,"6":60,"7":1,"8":2,"9":2,"10":3,"11":3,"12":2,"13":2,"14":1,"15":1,"16":0,"17":2,"18":2,"19":5,"20":5,"21":5,"22":3,"23":3,"24":10,"25":10,"26":10,"27":1,"28":1,"29":0,"30":0,"31":2,"32":2,"33":4,"34":4,"35":4,"36":4},"b":{"0":[1,1,1],"1":[46,0],"2":[28,28],"3":[14,46],"4":[28,24],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[1,1],"9":[1,0],"10":[0,1],"11":[1,1],"12":[0,1],"13":[1,1],"14":[0,1],"15":[0,3],"16":[3,3],"17":[0,3],"18":[3,3],"19":[0,3],"20":[3,3],"21":[1,2],"22":[0,2],"23":[2,2],"24":[0,2],"25":[2,2],"26":[0,2],"27":[2,2],"28":[0,2],"29":[2,2],"30":[0,2],"31":[1,1],"32":[0,1],"33":[0,1],"34":[1,1],"35":[1,0],"36":[1,0],"37":[0,2],"38":[0,2],"39":[1,1],"40":[1,4],"41":[5,4],"42":[0,4],"43":[2,3],"44":[2,1],"45":[3,2],"46":[1,3],"47":[4,2],"48":[0,3],"49":[3,3],"50":[0,2],"51":[0,2],"52":[1,2],"53":[3,1],"54":[0],"55":[0],"56":[10,10],"57":[0,10],"58":[10,10],"59":[10,0],"60":[0,10],"61":[10,10],"62":[0],"63":[0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,2],"68":[1,1],"69":[0,4],"70":[2,2],"71":[0,4],"72":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/exerciseService.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/services/exerciseService.ts"],"names":[],"mappings":"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","sourcesContent":["import { validate as isValidUUID } from \"uuid\";\nimport { Exercise, User, Workout, Workout_exercises } from \"../models/index\";\nimport { ExerciseAttributes } from \"../types/models\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport formatMinutesToHours from \"../utils/formatMinutesToHours\";\nimport { Op } from \"sequelize\";\nimport { CreatedByType } from \"../types/services\";\n\nclass ExerciseService {\n  async isExerciseExist(data: {\n    exerciseId: string;\n    userId: string;\n  }): Promise<boolean> {\n    try {\n      const { exerciseId, userId } = data;\n\n      const exercise = await Exercise.findByPk(exerciseId);\n\n      if (!exercise) {\n        throw new Error(\"Exercise not found\");\n      }\n\n      const originalExerciseId =\n        exercise.createdBy?.[0]?.originalExerciseId || exerciseId;\n\n      const userHasExercise = await Exercise.findOne({\n        where: {\n          userId,\n          createdBy: {\n            [Op.contains]: [{ originalExerciseId }],\n          },\n        },\n      });\n\n      if (!userHasExercise) {\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Check Exercise Existence Error:\", error);\n      throw error;\n    }\n  }\n\n  async addExercise(data: { exerciseId: string; userId: string }) {\n    try {\n      const { exerciseId, userId } = data;\n\n      const exercise = await Exercise.findByPk(exerciseId);\n\n      if (!exercise) {\n        throw new Error(\"Exercise not found\");\n      }\n\n      const originalExerciseId =\n        exercise.createdBy?.[0]?.originalExerciseId || exerciseId;\n\n      const userHasExercise = await Exercise.findOne({\n        where: {\n          userId,\n          [Op.or]: [\n            {\n              createdBy: {\n                [Op.contains]: [{ originalExerciseId }],\n              },\n            },\n          ],\n        },\n      });\n\n      if (userHasExercise) {\n        throw new Error(\"Exercise already added for this user\");\n      }\n\n      const newExercise = await Exercise.create({\n        ...exercise.toJSON(),\n        id: uuidv4(),\n        userId,\n        createdBy: [\n          {\n            creatorName: exercise.createdBy?.[0]?.creatorName,\n            creatorId: exercise.createdBy?.[0]?.creatorId,\n            originalExerciseId,\n          },\n        ],\n      });\n\n      if (!newExercise) {\n        throw new Error(\"Failed to create exercise\");\n      }\n\n      return newExercise;\n    } catch (error: any) {\n      console.error(\"Add Exercise to Workout Service Error:\", error);\n      throw new Error(error.message);\n    }\n  }\n\n  async isExerciseInWorkout(data: {\n    exerciseId: string;\n    userId: string;\n  }): Promise<\n    | {\n        id: string;\n        name: string;\n      }[]\n    | false\n  > {\n    try {\n      const { exerciseId, userId } = data;\n\n      const exercise = await Exercise.findByPk(exerciseId);\n\n      if (!exercise) {\n        throw new Error(\"Exercise not found\");\n      }\n\n      const workouts = await Workout.findAll({\n        where: {\n          userId,\n        },\n        include: [\n          {\n            model: Exercise,\n            as: \"exercises\",\n            through: { attributes: [] },\n            attributes: [\"id\", \"name\"],\n          },\n        ],\n      });\n\n      if (!workouts) {\n        throw new Error(\"Workouts not found\");\n      }\n\n      const excludedWorkouts = workouts\n        .filter(\n          (workout) =>\n            !workout.exercises?.some((ex: Exercise) => ex.id === exerciseId)\n        )\n        .map((workout) => {\n          return {\n            id: workout.id,\n            name: workout.name,\n          };\n        });\n\n      if (!excludedWorkouts[0]) {\n        return false;\n      }\n\n      return excludedWorkouts;\n    } catch (error: any) {\n      console.error(\"Check Exercise Existence Error:\", error);\n      if (error.message === \"Exercise not found\") {\n        throw new Error(\"Exercise not found\");\n      }\n      throw new Error(\"Failed to check exercise existence\");\n    }\n  }\n\n  async addExerciseToWorkout(data: { exerciseId: string; workoutId: string }) {\n    const { exerciseId, workoutId } = data;\n\n    try {\n      const exercise = await Exercise.findByPk(exerciseId);\n\n      if (!exercise) {\n        throw new Error(\"Exercise not found\");\n      }\n\n      const workout = await Workout.findByPk(workoutId);\n\n      if (!workout) {\n        throw new Error(\"Workout not found\");\n      }\n\n      const existingEntry = await Workout_exercises.findOne({\n        where: {\n          exerciseId,\n          workoutId,\n        },\n      });\n\n      if (existingEntry) {\n        throw new Error(\"Exercise already added to this workout\");\n      }\n\n      const addExercise = await Workout_exercises.create({\n        workoutId,\n        exerciseId: exercise.id,\n      });\n\n      return addExercise;\n    } catch (error: any) {\n      console.error(\"Add Exercise to Workout Service Error:\", error);\n      throw new Error(error.message);\n    }\n  }\n\n  async createExercise(exercise: ExerciseAttributes) {\n    try {\n      if (!exercise.name || !exercise.description) {\n        throw new Error(\"All fields are required\");\n      }\n\n      const id = uuidv4();\n\n      if (!isValidUUID(id)) {\n        throw new Error(\"Invalid UUID format\");\n      }\n\n      const getYoutubeEmbedUrl = (url: string | undefined) => {\n        if (!url) return null;\n        const regExp =\n          /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n        const match = url.match(regExp);\n        return match && match[2].length === 11\n          ? `https://www.youtube.com/embed/${match[2]}`\n          : null;\n      };\n\n      if (exercise.media && !getYoutubeEmbedUrl(exercise.media)) {\n        throw new Error(\"Invalid YouTube URL\");\n      }\n\n      const newExercise = await Exercise.create({\n        ...exercise,\n        media: getYoutubeEmbedUrl(exercise.media as string) as string,\n        id,\n        createdBy: [\n          {\n            creatorName: exercise.createdBy?.[0].creatorName as string,\n            creatorId: exercise.userId,\n            originalExerciseId: id,\n          },\n        ],\n      });\n\n      if (!newExercise) {\n        throw new Error(\"Failed to create exercise\");\n      }\n\n      if (exercise.workoutId) {\n        await Workout_exercises.create({\n          workoutId: exercise.workoutId,\n          exerciseId: newExercise.id,\n        });\n      }\n\n      return newExercise;\n    } catch (error: any) {\n      console.error(\"Create Exercise Service Error:\", error);\n      if (error.parent && error.parent.code === \"22P02\") {\n        throw new Error(\"Invalid UUID format\");\n      }\n      throw new Error(error.message as string);\n    }\n  }\n\n  async getAllExercises(page: number = 1, limit: number = 10) {\n    try {\n      const offset = (page - 1) * limit;\n\n      const { rows: exercises, count } = await Exercise.findAndCountAll({\n        limit,\n        offset,\n        order: [[\"createdAt\", \"DESC\"]],\n      });\n\n      const exerciseMap = new Map<string, boolean>();\n      const uniqueExercises: Exercise[] = [];\n\n      exercises.forEach((exercise: Exercise) => {\n        const exerciseJSON = exercise.toJSON() as ExerciseAttributes;\n        const key =\n          exerciseJSON.createdBy?.[0].originalExerciseId || exerciseJSON.id;\n\n        if (!exerciseMap.has(key)) {\n          exerciseMap.set(key, true);\n          uniqueExercises.push(exercise);\n        }\n      });\n\n      const formattedExercises = uniqueExercises.map((exercise: Exercise) => {\n        const exerciseJSON = exercise.toJSON() as ExerciseAttributes;\n        return {\n          id: exerciseJSON.id,\n          name: exerciseJSON.name,\n          description: exerciseJSON.description,\n          duration: exerciseJSON.duration,\n          sets: exerciseJSON.sets,\n          reps: exerciseJSON.reps,\n          media: exerciseJSON.media,\n          userId: exerciseJSON.userId,\n          createdBy: exerciseJSON.createdBy?.map((user: CreatedByType) => ({\n            creatorId: user.creatorId,\n            creatorName: user.creatorName,\n            originalExerciseId: user.originalExerciseId,\n          })),\n          createdAt: exerciseJSON.createdAt,\n          updatedAt: exerciseJSON.updatedAt,\n        };\n      });\n\n      return {\n        total: count,\n        page,\n        limit,\n        exercises: formattedExercises,\n      };\n    } catch (error) {\n      console.error(\"Get All Exercises Service Error:\", error);\n      throw new Error(\"Failed to fetch exercises\");\n    }\n  }\n\n  async getExercisesByUserId(\n    userId: string,\n    page: number = 1,\n    limit: number = 10\n  ) {\n    try {\n      const offset = (page - 1) * limit;\n\n      const { rows: exercises, count } = await Exercise.findAndCountAll({\n        where: { userId },\n        include: [\n          {\n            model: User,\n            as: \"user\",\n            attributes: [\"id\", \"name\"],\n          },\n        ],\n        order: [[\"createdAt\", \"DESC\"]],\n        limit,\n        offset,\n      });\n\n      const formattedExercises = exercises.map((exercise) => {\n        const exerciseJSON = exercise.toJSON() as ExerciseAttributes;\n\n        const formattedTime = exerciseJSON.duration\n          ? formatMinutesToHours(exerciseJSON.duration)\n          : null;\n\n        return {\n          id: exerciseJSON.id,\n          name: exerciseJSON.name,\n          description: exerciseJSON.description,\n          duration: formattedTime,\n          sets: exerciseJSON.sets,\n          reps: exerciseJSON.reps,\n          media: exerciseJSON.media,\n          userId: exerciseJSON.userId,\n          createdBy: exerciseJSON.createdBy?.map((creator) => ({\n            creatorId: creator.creatorId,\n            creatorName: creator.creatorName,\n            originalExerciseId: creator.originalExerciseId,\n          })),\n          createdAt: exerciseJSON.createdAt,\n          updatedAt: exerciseJSON.updatedAt,\n        };\n      });\n\n      return {\n        total: count,\n        page,\n        limit,\n        exercises: formattedExercises,\n      };\n    } catch (error) {\n      console.error(\"Get Exercises By User ID Service Error:\", error);\n      throw new Error(\"Failed to fetch exercises\");\n    }\n  }\n\n  async getExerciseById(id: string) {\n    console.log(\"🚀 ~ ExerciseService ~ getExerciseById ~ id:\", id);\n\n    try {\n      if (!isValidUUID(id)) {\n        throw new Error(\"Invalid UUID format\");\n      }\n\n      const exercise = await Exercise.findByPk(id);\n\n      if (!exercise) {\n        throw new Error(\"Exercise not found\");\n      }\n\n      return exercise;\n    } catch (error) {\n      console.error(\"Get Exercise By ID Service Error:\", error);\n      throw error;\n    }\n  }\n\n  async updateExercise(id: string, data: any) {\n    try {\n      if (!isValidUUID(id)) {\n        throw new Error(\"Invalid UUID format\");\n      }\n      const exercise = await Exercise.findByPk(id);\n      if (!exercise) {\n        throw new Error(\"Exercise not found\");\n      }\n      const updatedExercise = await exercise.update(data);\n      return updatedExercise;\n    } catch (error) {\n      console.error(\"Update Exercise Service Error:\", error);\n      throw error;\n    }\n  }\n\n  async deleteExercise(id: string) {\n    try {\n      if (!isValidUUID(id)) {\n        throw new Error(\"Invalid UUID format\");\n      }\n\n      const exercise = await Exercise.findByPk(id);\n\n      if (!exercise) {\n        throw new Error(\"Exercise not found\");\n      }\n\n      const WorkoutExercise = await Workout_exercises.destroy({\n        where: { exerciseId: id },\n      });\n\n      await exercise.destroy();\n\n      const a = await Workout_exercises.findAll({\n        where: { exerciseId: id },\n      });\n\n      return exercise;\n    } catch (error) {\n      console.error(\"Delete Exercise Service Error:\", error);\n      throw error;\n    }\n  }\n}\n\nexport default new ExerciseService();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"24b45fbe0839ee40855c741f8bbb04e637a69b4a"},"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/testRoutes.ts":{"path":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/testRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":81}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":38}},"6":{"start":{"line":9,"column":0},"end":{"line":11,"column":3}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":56}},"8":{"start":{"line":12,"column":0},"end":{"line":14,"column":3}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":34}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":51},"end":{"line":9,"column":52}},"loc":{"start":{"line":9,"column":65},"end":{"line":11,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":21},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":35},"end":{"line":14,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/testRoutes.ts","sources":["/Users/solomon/Desktop/Projects/Projects/home_workout_app/server/src/routes/testRoutes.ts"],"names":[],"mappings":";;;;;AAAA,qCAAiC;AACjC,kFAA0D;AAE1D,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,wBAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAChC,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport authMiddleware from \"../middleware/authMiddleware\";\n\nconst router = Router();\n\nrouter.get(\"/protected\", authMiddleware, (req, res) => {\n  res.status(200).json({ message: \"Access granted\" });\n});\n\nrouter.get(\"/error\", (req, res) => {\n  throw new Error(\"Test error\");\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"56cbcee9233899c067a61f72aa184ae638500bd0"}}